(e=>{"use strict";var n=(e=>{if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach((t=>{if("default"!==t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,o.get?o:{enumerable:!0,get:()=>e[t]})}})),n.default=e,Object.freeze(n)})(e);const t=Math.pow(2,-32),o=32557,r=19605,a=new Uint16Array(4),u=new DataView(a.buffer),l=(e,n=0)=>{const t=16,o=65535,r=255;for(var a,u=1540483477,l=e.length,i=n^l,c=0;4<=l;)a=((a=e[c]&r|(e[++c]&r)<<8|(e[++c]&r)<<16|(e[++c]&r)<<24)&o)*u+(((a>>>t)*u&o)<<t),i=(i&o)*u+(((i>>>t)*u&o)<<t)^(a=((a^=a>>>24)&o)*u+(((a>>>t)*u&o)<<t)),l-=4,++c;switch(l){case 3:i^=(e[c+2]&r)<<t;case 2:i^=(e[c+1]&r)<<8;case 1:i=((i^=e[c]&r)&o)*u+(((i>>>t)*u&o)<<t)}return i=((i^=i>>>13)&o)*u+(((i>>>16)*u&o)<<16),(i^=i>>>15)>>>0},i=(e,n)=>(void 0===n&&(n=e,e=0),(()=>{const e=a[0],n=a[1],u=a[2],l=a[3],i=0|33103+o*e,c=0|63335+o*n+(r*e+(i>>>16)),v=0|31614+o*u+r*n+(62509*e+(c>>>16));a[0]=i,a[1]=c,a[2]=v,a[3]=5125+o*l+(r*u+62509*n)+(22609*e+(v>>>16));const s=(l<<21)+((l>>2^u)<<5)+((u>>2^n)>>11);return t*((s>>>(l>>11)|s<<(31&-(l>>11)))>>>0)})()*(n-e)+e),c=e=>{return e.length?e[(n=e.length,Math.floor(i(n,undefined)))]:void 0;var n};let v="undefined"==typeof tokenData?(()=>{let e="0x";for(let n=64;0<n;--n)e+="0123456789abcdef"[~~(16*Math.random())];return e})():"string"==typeof tokenData?tokenData:tokenData.hash;(()=>{var e=Math.min;let t=window,o=document,r=t.innerWidth,a=t.innerHeight;const s=new n.Scene,f=new n.OrthographicCamera(-.5,.5,.5,-.5,1,10);f.position.z=1;const d=new n.WebGLRenderer({alpha:!0,premultipliedAlpha:!0});d.setSize(r,a),d.setPixelRatio(e(t.devicePixelRatio,1)),o.body.appendChild(d.domElement);var _=e(r,a);(e=>{const n=~~((e.length-2)/2),t=[];for(let o=0;o<n;o++){const n=2+2*o;t.push(parseInt(e.slice(n,n+2),16))}const o=l(t,1690382925),r=l(t,72970470);u.setUint32(0,o),u.setUint32(4,r)})(v);const m=c([2,4,8,12,20,50,80]),g=i(0,1e3),x=i(.2,.9),p=i(.1,.9),y=i(.5,4),z=i(8,14),h=i(1,20),P=c([1.5,2,2.5,3,4]),w=c([0,.008,.01,.015,.06,.1]),b=c([0,0,.01,.03,.05,.08]);c([45,90,180,270]);const D=c([1,2,4,10]),F={u_meatColor:{value:new n.Color("#b61414")},u_darkColor:{value:new n.Color("#3e0909")},u_lightColor:{value:new n.Color("#f2e6c8")},u_pixel_size:{value:m},u_aspect:{value:r/a},u_seed:{value:g},u_m:{value:_/1e3},u_grasa:{value:x},u_dark:{value:p},u_grasa_chica:{value:z},u_infected:{value:P},u_celdas_m:{value:y},u_sharpen_m:{value:b},u_color_m:{value:w},u_lock:{value:45},u_pi_mult:{value:h},u_glitch:{value:0},u_grasa_tile:{value:D},u_mouse_down:{value:0},u_mouse:{value:new n.Vector2(0,0)},u_pass_dos:{value:0},u_intro:{value:1}},R=[],E=new n.Scene,C=new n.Camera,B=new n.ShaderMaterial({uniforms:{texture:{value:null}},fragmentShader:"uniform sampler2D texture;\n    uniform vec2 u_resolution;\n    void main() {\n        vec2 uv = gl_FragCoord.xy / u_resolution.xy;\n        gl_FragColor = texture2D( texture, uv );\n    }"}),I=new n.Mesh(new n.PlaneGeometry(2,2),B),k=new n.Vector2(r,a);let U=F;U.u_resolution={value:new n.Vector2(r,a)},U.u_delta={value:0},U.u_time={value:0},U.u_frame={value:0},E.add(I),C.position.z=1;let L=0;const S=new n.Clock(!1),M=(e,t)=>new n.WebGLRenderTarget(~~e,~~t,{format:n.RGBAFormat,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)||!1===d.capabilities.isWebGL2?n.HalfFloatType:n.FloatType,stencilBuffer:!1,wrapS:n.RepeatWrapping,wrapT:n.RepeatWrapping,minFilter:n.LinearFilter,magFilter:n.LinearFilter}),A=(e,t,o,r,a)=>{const u=e,l=null!=a,i=l?`u_doubleBuffer${u}`:`u_buffer${u}`;R.push([i,new n.ShaderMaterial({uniforms:U,vertexShader:"varying vec2 v_texcoord;\n  void main() {\n      v_texcoord = uv;\n      gl_Position = vec4(position, 1.0);\n  }",fragmentShader:"#define "+(l?"DOUBLE_BUFFER_":"BUFFER_")+`${u}\n${t}`}),l?[M(o,r),M(o,r)]:M(o,r)]),U[i]={value:null}},N=(e,n)=>{I.material=e,d.setRenderTarget(n),d.clear(),d.render(E,C),I.material=B};(e=>{const n=e.match(/(?:^\s*)((?:#if|#elif)(?:\s*)(defined\s*\(\s*BUFFER_)(\d+)(?:\s*\))|(?:#ifdef)(?:\s*BUFFER_)(\d+)(?:\s*))/gm);for(let t=0;t<n.length;t++)A(t,e,r,a);const t=e.match(/(?:^\s*)((?:#if|#elif)(?:\s*)(defined\s*\(\s*DOUBLE_BUFFER_)(\d+)(?:\s*\))|(?:#ifdef)(?:\s*DOUBLE_BUFFER_)(\d+)(?:\s*))/gm);if(t){d.autoClearColor=!1;for(let n=0;n<t.length;n++)A(n,e,r,a,!0)}})("\n  precision highp float;\n\n  uniform sampler2D   u_buffer0;\n  uniform sampler2D   u_buffer1;\n  uniform sampler2D   u_doubleBuffer0;\n\n  uniform vec2        u_resolution;\n  uniform float       u_time;\n  uniform vec3        u_meatColor;\n  uniform vec3        u_darkColor;\n  uniform vec3        u_lightColor;\n  uniform float       u_seed;\n  uniform float       u_pixel_size;\n  uniform float       u_glitch;\n  uniform float       u_aspect;\n  uniform float       u_m;\n  uniform float       u_grasa;\n  uniform float       u_dark;\n  uniform float       u_grasa_chica;\n  uniform float       u_infected;\n  uniform float       u_celdas_m;\n  uniform float       u_lock;\n  uniform float       u_sharpen_m;\n  uniform float       u_color_m;\n  uniform float       u_pi_mult;\n  uniform float       u_grasa_tile;\n  uniform vec2        u_mouse;\n  uniform float       u_mouse_down;\n  uniform float       u_intro;\n  \n#define PI 3.14159265358979323846\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\n  \n  vec4  getNormal(sampler2D _sampler,vec2 _uv,vec2  _resolution,float _ubias,float _um)\n  {\n    vec2 uv = _uv;\n    float bias = _ubias;\n    float invertR = 1.0;\n    float invertG = 1.0;\n    vec2 resolution = _resolution;\n    vec2 step = vec2(1.0, 1.0) / resolution.xy;\n    float d0 = abs(texture2D(_sampler, uv.xy + vec2(0.0, 0.0)).r);\n    float d1 = abs(texture2D(_sampler, uv.xy + vec2(step.x, 0.0)).r);\n    float d2 = abs(texture2D(_sampler, uv.xy + vec2(-step.x, 0.0)).r);\n    float d3 = abs(texture2D(_sampler, uv.xy + vec2(0.0, step.y)).r);\n    float d4 = abs(texture2D(_sampler, uv.xy + vec2(0.0, -step.y)).r);\n    float dx = ((d2 - d0) + (d0 - d1)) * 0.5;\n    float dy = ((d4 - d0) + (d0 - d3)) * 0.5;\n    return vec4(normalize(vec3(dx * invertR, dy * invertG, step.x*(100.0*u_m))), 1.0);\n  }\n\n  \n\n\n#define RANDOM_SCALE vec4(.1031, .1030, .0973, .1099)\n\n \n  vec2 random2(vec2 p){\n    vec3 p3 = fract(p.xyx * RANDOM_SCALE.xyz);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xx + p3.yz) * p3.zy);\n  }\n\nfloat celullar(vec2 _uv,vec2 _iResolution,float _cellNum)\n{\n    float cellNum = _cellNum;\n\n    vec2 uv = _uv;\n    vec2 iResolution = _iResolution;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv *= cellNum;\n    \n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    float minDist = 1.;\n    \n    for (int y = -1; y <= 1; y++)\n    {\n        for (int x = -1; x <= 1; x++)\n        {\n            vec2 neighbor = vec2(x, y);\n            \n            vec2 point = random2(i + neighbor);\n            \n            point = 0.5 + 0.5 * sin(6.2831 * point);\n            \n            float dist = length(neighbor + point - f);\n            \n            minDist = min(minDist, dist);\n        }\n    }\n\n    return minDist;\n    \n}\n\n\n  const mat3 m3  = mat3( 0.00,  0.80,  0.60,\n    -0.80,  0.36, -0.48,\n    -0.60, -0.48,  0.64 );\n  float fbm_2( in vec3 x ,int _it)\n  {\n  \n      float f = 2.0;\n      float s = 0.5;\n      float a = 0.0;\n      float b = 0.5;\n      for( int i=0; i<_it; i++ )\n      {\n          float n = cnoise(x);\n          a += b*n;\n          b *= s;\n          x = f*m3*x;\n      }\n    return a;\n  }\n  vec2 rotateUV(vec2 uv, float rotation)\n  {\n      float mid = 0.5;\n      return vec2(\n          cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n          cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n      );\n  }\n\n  vec3 rgbShift(sampler2D _tex0,vec2 _uv,vec2 _rd,vec2 _gd,vec2 _bd)\n  {\n    vec3 color = vec3(0.0);\n    float r = texture2D(_tex0,_uv+_rd).r;\n    float g = texture2D(_tex0,_uv+_gd).g;\n    float b = texture2D(_tex0,_uv+_bd).b;\n    return vec3(r,g,b);\n  }\n\n  vec2 pixelar(vec2 _p,vec2 _pixels)\n  {\n      vec2 ret =vec2(_p);\n      ret.x -= mod(ret.x, 1.0 / _pixels.x);\n      ret.y -= mod(ret.y, 1.0 / _pixels.y);\n      return ret;\n  }\n  \n  float luma(vec3 color) {\n    return dot(color, vec3(0.299, 0.587, 0.114));\n  }\n \n  void main(){vec3 v=vec3(0);vec2 P=1./u_resolution.xy,u=gl_FragCoord.xy*P;\n#ifdef BUFFER_0\nfloat d=u_seed,y=cnoise(vec3(u*vec2(.009),2)),r=cnoise(vec3(u*vec2(.02),4))*.7,z=cnoise(vec3(u*vec2(.002),4)),s=cnoise(vec3(u*vec2(.005),8));vec3 m=vec3(rotateUV(u,u_seed*.2),3);float x=fbm_2(m*u_grasa_tile+fbm_2(m*2.,4),2);vec2 f=vec2(0);f.x=cos(r+y*PI);f.y=sin(r+y*PI);f*=.03+x*.1;float I=1.-z;vec2 B=u+vec2(0,u_seed*.02)+f;float o=celullar(rotateUV(B,y+1.2),vec2(.8,1.2),4.);o=smoothstep(u_grasa,1.,o)*u_infected;float c=celullar(vec2(d*.02,0)+u*vec2(2,3),vec2(.5),u_celdas_m);c=pow(smoothstep(0.,1.2,c),1.);I-=c*.9*(1.-o);vec2 k=vec2(0);k.x=cos(r+y*PI);k.y=sin(r+y*PI);k*=.3+x*.3;vec2 n=u+k;float p=celullar(vec2(-u_seed*.02,20)+rotateUV(n,1.2),vec2(.5),u_grasa_chica);p=pow(p,4.)*.6*(1.-o);I+=p*2.;vec2 a=vec2(0);a.x=cos(d+s*PI);a.y=sin(d+s*PI);a*=.2;vec2 D=rotateUV(u*vec2(8)+a,u_seed*.1);float e=celullar(D,vec2(1),18.);e=smoothstep(.2,1.,e);I*=mix(.9+e*.1,.78,o);float h=celullar(vec2(10,0)+u*.9,vec2(1,.5),1.);h=smoothstep(.8,1.,e);I*=.85+h*.1*(1.-o);I+=(I,smoothstep(.5,1.,o))/1.5;I+=p;v=mix(mix(u_darkColor,vec3(0),u_dark),u_meatColor,smoothstep(.3,1.5,I));v=mix(v,u_lightColor,smoothstep(.9,1.9,I));\n#elif defined(DOUBLE_BUFFER_0)\nvec3 l=texture2D(u_buffer0,u).xyz;vec2 C=u_mouse*u_mouse_down,E=pixelar(C+u+vec2(u_dark*2.-1.,u_seed*.035),vec2(u_pixel_size));float t=.1+cnoise(vec3(E,2)),A=.12+cnoise(vec3(rotateUV(E*2.,u_seed*.032),4)),F=t+A,G=step(.2,F);vec3 H=texture2D(u_doubleBuffer0,u).xyz;vec2 J=u;float K=(luma(H.xyz)+A)*(1./60.*.05),g=u_time+F*2.*(PI*u_pi_mult),L=g*180./PI,M=u_lock;L/=M;L=round(L)*M;g=L*PI/180.;J.x+=cos(g)*K;J.y+=sin(g)*K;vec3 N=texture2D(u_doubleBuffer0,mix(u,J,G)).xyz;float O=.25+A;vec3 Q=rgbShift(u_doubleBuffer0,J,vec2(.2,.8)*0.,vec2(-1,-.5+H.x)*O,vec2(-.4,-1)*O);N=mix(N,Q,G*u_color_m*2.);N=mix(N,l.xyz,u_mouse_down*(1.-G));N=mix(N,l.xyz,(1.-u_mouse_down)*smoothstep(.9,1.,t*u_intro+u_intro));v.xyz=mix(l.xyz,N,u_glitch*smoothstep(0.,.01,u_intro));v.xyz=clamp(v.xyz,vec3(0),vec3(1));\n#elif defined(BUFFER_1)\nvec4 R=getNormal(u_doubleBuffer0,u,u_resolution,1.,u_m);v.xyz=R.xyz;\n#endif\ngl_FragColor=vec4(v,1);}");const O=new n.Mesh(new n.PlaneBufferGeometry(1,1,2,2),new n.MeshStandardMaterial({map:R[2][2][1].texture,normalMap:R[1][2].texture,normalScale:new n.Vector2(1,1),metalness:0,roughness:.01}));s.add(O);const G=new n.PointLight({color:"#ffffff"});G.position.x=-10,G.position.y=-7.44,G.position.z=-4.19,G.intensity=.8,G.lookAt(O),s.add(G);const V=new n.AmbientLight(13421772,.5);s.add(V);const T={x:0,y:0,dx:0,dy:0,down:0,ddown:0};document.addEventListener("pointerdown",(e=>{e.preventDefault(),T.ddown=1;let n=d.domElement.getBoundingClientRect(),t=e.clientX||e.pageX,o=e.clientY||e.pageY;T.dx=(t-n.left)/r,T.dy=(d.domElement.height-(o-n.top))/a,T.x=T.dx,T.y=T.dy}),{passive:!1}),document.addEventListener("pointerup",(()=>{T.ddown=0}),{passive:!1}),document.addEventListener("pointermove",(e=>{e.preventDefault();let n=d.domElement.getBoundingClientRect(),t=e.clientX||e.pageX,o=e.clientY||e.pageY;1==T.ddown&&(T.dx=(t-n.left)/r,T.dy=(d.domElement.height-(o-n.top))/a)}),{passive:!1}),document.body.style.touchAction="none";let H=0;const W=7200+i(-1200,1200),j=.02;U.u_resolution.value=k,S.start(),U.u_intro.value=0;const J=()=>{S.getElapsedTime(),S.getDelta(),T.x+=(T.dx-T.x)*j,T.y+=(T.dy-T.y)*j,T.down+=(T.ddown-T.down)*j,U.u_time.value=.001*L,U.u_mouse.value.x=T.x,U.u_mouse.value.y=T.y,U.u_mouse_down.value=T.down,U.u_intro.value=H,(()=>{U.u_resolution.value=k;for(let e,n=0,t=R.length;n<t;n++)if(e=R[n],void 0===e[2].length)N(e[1],e[2]),U[e[0]].value=e[2].texture;else{let n=L%2,t=(L+1)%2;U[e[0]].value=e[2][n].texture,N(e[1],e[2][t])}d.setRenderTarget(null)})(),d.render(s,f),L++,H=L/W,5<L&&0==U.u_glitch.value&&(U.u_glitch.value=1),L>W&&(L=0,U.u_glitch.value=0,U.u_intro.value=0),requestAnimationFrame(J)};J()})()})(THREE);