const C2dImage=()=>{let R;let canvas,ctx;let bgColor,fgColor,c1,c2,c3;dLine=(x1,y1,x2,y2,p)=>{ctx.setLineDash(p);ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke()};let dashed=[];dashed[0]=(x,y,w,h)=>{let yStep=pow(2,R.random_int(0,2));let pattern=[R.random_int(1,8),R.random_int(1,8)];for(let i=0;i<h;i+=yStep){dLine(x,y+i+.5,x+w,y+i+.5,pattern)}};dashed[1]=(x,y,w,h)=>{let yStep=pow(2,R.random_int(0,2));let pattern=[[R.random_int(1,8),R.random_int(1,16)],[R.random_int(1,8),R.random_int(1,16)],[R.random_int(1,8),R.random_int(1,16)],[R.random_int(1,8),R.random_int(1,16)]];for(let i=0;i<h;i+=yStep){dLine(x,y+i+.5,x+w,y+i+.5,pattern[i/yStep%pattern.length])}};dashed[2]=(x,y,w,h)=>{let pattern=[R.random_int(1,4),R.random_int(1,16),R.random_int(1,4),R.random_int(1,16)];for(let i=0;i<h;i+=4){dLine(x,y+i+.5,x+w,y+i+.5,pattern)}};dashed[3]=(x,y,w,h)=>{for(let i=0;i<h;i+=R.random_int(5,12)){let pattern=[R.random_int(1,2),R.random_int(1,16)];dLine(x,y+i+.5,x+w,y+i+.5,pattern)}};dashed[4]=(x,y,w,h)=>{let xStep=pow(2,R.random_int(0,2));let pattern=[R.random_int(1,8),R.random_int(1,8)];for(let i=0;i<w;i+=xStep){dLine(x+i+.5,y,x+i+.5,y+h,pattern)}};dashed[5]=(x,y,w,h)=>{let xStep=pow(2,R.random_int(0,2));let pattern=[[R.random_int(1,8),R.random_int(1,16)],[R.random_int(1,8),R.random_int(1,16)],[R.random_int(1,8),R.random_int(1,16)],[R.random_int(1,8),R.random_int(1,16)]];for(let i=0;i<w;i+=xStep){dLine(x+i+.5,y,x+i+.5,y+h,pattern[i/xStep%pattern.length])}};dashed[6]=(x,y,w,h)=>{let pattern=[R.random_int(1,4),R.random_int(1,16),R.random_int(1,4),R.random_int(1,16)];for(let i=0;i<w;i+=4){dLine(x+i+.5,y,x+i+.5,y+h,pattern)}};dashed[7]=(x,y,w,h)=>{for(let i=0;i<w;i+=R.random_int(5,12)){let pattern=[R.random_int(1,2),R.random_int(1,16)];dLine(x+i+.5,y,x+i+.5,y+h,pattern)}};let noise=[];noise[0]=(x,y,w,h)=>{let n=simplex.create(R);for(let i=0;i<w;i++){let nv=(n((x+i)*.01,y)+1)*.5;for(let j=0;j<h;j++){let f=(h-j)/h;if(R.random_bool(1-f*nv)){ctx.fillRect(x+i,y+j,1,1)}}}};noise[1]=(x,y,w,h)=>{let n=simplex.create(R);for(let i=0;i<w;i++){for(let j=0;j<h;j++){let nv=(n((x+i)*.01,(y+j)*.01)+1)*.5;if(R.random_bool(nv)){ctx.fillRect(x+i,y+j,1,1)}}}};noise[2]=(x,y,w,h)=>{let n=simplex.create(R);for(let i=0;i<w;i++){let nv=(n((x+i)*100,y)+1)*.5;for(let j=0;j<h;j++){let f=(h-j)/h;if(R.random_bool(f*nv)){ctx.fillRect(x+i,y+j,1,1)}}}};noise[3]=(x,y,w,h)=>{let n=simplex.create(R);for(let i=0;i<w;i++){for(let j=0;j<h;j++){let nv=(n((x+i)*.005,(y+j)*.005)+1)*.5;let f=(1-abs((j-h/2)/(h/2)))*(1-abs((i-w/2)/(w/2)));if(R.random_bool(f*nv)){ctx.fillRect(x+i,y+j,1,1)}}}};noise[4]=(x,y,w,h)=>{let n=simplex.create(R);for(let i=0;i<w;i+=1){for(let j=0;j<h;j+=1){let nv=(n((x+i)*.005,(y+j)*.005)+1)*.5;let f=(1-abs((j-h/2)/(h/2)))*(1-abs((i-w/2)/(w/2)));if(R.random_bool(f/nv)){ctx.fillRect(x+i,y+j,1,1)}}}};noise[5]=(x,y,w,h)=>{let n=simplex.create(R);for(let i=0;i<w;i++){for(let j=0;j<h;j++){let nv=(n((x+i)*.1,(y+j)*.01)+1)*.5;let f=1-abs((i-w/2)/(w/2))+abs((j-h/2)/(h/2));if(R.random_bool(1-f*nv)){ctx.fillRect(x+i,y+j,1,1)}}}};noise[6]=(x,y,w,h)=>{for(let i=0;i<w;i++){for(let j=0;j<h;j++){if(R.random_bool(.1)){ctx.fillRect(x+i,y+j,1,1)}}}};noise[7]=(x,y,w,h)=>{for(let i=0;i<w;i++){for(let j=0;j<h;j++){if(R.random_bool(.01)){ctx.fillRect(x+i,y+j,1,1)}}}};let grid=[];grid[0]=(x,y,w,h)=>{for(let i=0;i<w;i+=4){for(let j=0;j<h;j+=4){ctx.fillRect(x+i,y+j,1,1)}}};grid[1]=(x,y,w,h)=>{for(let i=0;i<w;i++){for(let j=0;j<h;j++){if((i+j)%5==0&&i%2==0){ctx.fillRect(x+i,y+j,1,1)}}}};grid[2]=(x,y,w,h)=>{for(let i=0;i<w;i++){for(let j=0;j<h;j++){if((i+j)%6==0&&i%3==0){ctx.fillRect(x+i,y+j,1,1)}}}};grid[3]=(x,y,w,h)=>{for(let i=0;i<w;i++){for(let j=0;j<h;j++){if((i+j)%12==0&&i%6==0){ctx.fillRect(x+i,y+j,1,1)}}}};grid[4]=(x,y,w,h)=>{let f=true;for(let i=0;i<w;i++){for(let j=0;j<h;j++){if(f&&i%2==0&&j%2==0){ctx.fillRect(x+i,y+j,1,1)}if(R.random_bool(.005)){f=!f}}}};grid[5]=(x,y,w,h)=>{let ws=R.random_int(0,w-1);let hs=R.random_int(0,h-1);for(let i=0;i<w;i++){for(let j=0;j<h;j++){if(i%2==0&&j%2==0&&(i<ws&&j<hs||i>ws&&j>hs)){ctx.fillRect(x+i,y+j,1,1)}}}};grid[6]=(x,y,w,h)=>{let ws=floor(w/4);let hs=floor(h/4);for(let i=0;i<w;i++){for(let j=0;j<h;j++){if((i+j)%6==0&&i%3==0&&(i<ws&&j<hs||i>ws&&j>hs)){ctx.fillRect(x+i,y+j,1,1)}}}};grid[7]=(x,y,w,h)=>{let ws=floor(w/5);let hs=24;for(let i=0;i<w;i++){for(let j=0;j<h;j++){if((i+j)%4==0&&i%2==0&&i%ws<=ws/2&&j%hs<=12){ctx.fillRect(x+i,y+j,1,1)}}}};let boxes=[];boxes[0]=(x,y,w,h)=>{for(let i=0;i<w-3;i+=4){for(let j=0;j<h-3;j+=4){ctx.strokeRect(x+i+.5,y+j+.5,2,2)}}};boxes[1]=(x,y,w,h)=>{for(let i=0;i<w-5;i+=6){for(let j=0;j<h-3;j+=4){ctx.strokeRect(x+i+.5,y+j+.5,4,2)}}};boxes[2]=(x,y,w,h)=>{for(let i=0;i<w-3;i+=4){let bh=i%8==0?4:8;for(let j=0;j<h-bh+1;j+=bh){ctx.strokeRect(x+i+.5,y+j+.5,2,bh-2)}}};boxes[3]=(x,y,w,h)=>{for(let i=0;i<w-7;i+=8){for(let j=0;j<h-7;j+=8){ctx.strokeRect(x+i+.5,y+j+.5,6,6)}}};boxes[4]=(x,y,w,h)=>{for(let i=0;i<w-7;i+=8){for(let j=0;j<h-10;j+=8){ctx.strokeRect(x+i+.5,y+j+.5+(i%16==0?4:0),6,6)}}};boxes[5]=(x,y,w,h)=>{for(let i=0;i<w-5;i+=6){for(let j=0;j<h-9;j+=12){ctx.strokeRect(x+i+.5,y+j+.5,4,10)}}};boxes[6]=(x,y,w,h)=>{for(let i=0;i<w-9;i+=10){for(let j=0;j<h-4;j+=5){if(j<R.random_dec()*h){ctx.strokeRect(x+i+.5,y+j+.5,8,3)}}}};boxes[7]=(x,y,w,h)=>{for(let i=0;i<w-4;i+=4){for(let j=0;j<h-4;j+=4){if(R.random_bool(.5)){ctx.strokeRect(x+i+.5,y+j+.5,4,4)}}}};let area=[];area[0]=(x,y,w,h)=>{let w3=floor(w/3);let h3=floor(h/3);ctx.strokeRect(x+.5,y+.5,w-1,h-1);for(let i=0;i<w3;i++){for(let j=0;j<h3;j++){if((i+j)%8==0){ctx.fillRect(x+w3+i,y+h3+j,1,1)}}}};area[1]=(x,y,w,h)=>{let h2=floor(h/2);ctx.strokeRect(x+.5,y+.5,w-1,h2-1);ctx.fillStyle=c1;for(let i=0;i<w;i++){for(let j=1;j<h2;j++){if((i+j)%8==0){ctx.fillRect(x+i,y+h2+j,1,1)}}}};area[2]=(x,y,w,h)=>{for(let i=0;i<w;i++){for(let j=0;j<h;j++){if((i+j)%8==0&&(i<8||i>w-8||j<8||j>h-8)){ctx.fillRect(x+i,y+j,1,1)}}}};area[3]=(x,y,w,h)=>{let s=floor(min(w,h)/2);if(s<2)return;let bx=0;while(bx+s<w){ctx.strokeRect(x+bx+.5,y+.5,s,s);bx+=s}ctx.fillStyle=c2;let by=0;while(by+s<h){for(let i=2;i<s-1;i++){for(let j=2;j<s-1;j++){if((i+j)%8==0){ctx.fillRect(x+i,y+by+j,1,1)}}}by+=s}};area[4]=(x,y,w,h)=>{let rh=floor(h/4);for(let i=0;i<w;i++){for(let j=0;j<h;j++){if(floor(j/rh)%4==0&&(i+j)%8==0){ctx.fillRect(x+i,y+j,1,1)}else if(floor(j/rh)%4==2&&i<w){ctx.fillRect(x+i,y+j,1,1)}}}};area[5]=(x,y,w,h)=>{let w3=floor(w/3);let h3=floor(h/3);ctx.strokeStyle=c3;ctx.strokeRect(x+w3*2+.5,y+.5,w3,h3);ctx.strokeRect(x+w3+.5,y+h3+.5,w3,h3);ctx.strokeRect(x+w3*2+.5,y+h3*2+.5,w3,h3);for(let i=0;i<w3-1;i++){for(let j=0;j<h3;j++){if((i+j)%8==0){ctx.fillRect(x+i,y+h3+j,1,1)}}}};area[6]=(x,y,w,h)=>{let rh=floor(h/4);for(let i=0;i<w;i++){for(let j=0;j<h;j++){if(floor(j/rh)%2==0){ctx.fillRect(x+i,y+j,1,1)}}}};area[7]=(x,y,w,h)=>{let cw=floor(w/4);let rh=floor(h/4);ctx.fillStyle=c1;for(let i=0;i<w;i++){for(let j=0;j<h;j++){if(floor(i/cw)%2==0&&floor(j/rh)%2==0){ctx.fillRect(x+i,y+j,1,1)}}}};let framed=[];framed[0]=(x,y,w,h)=>{if(h>=6){ctx.fillRect(x,y,w,4)}ctx.strokeRect(x+.5,y+.5,w-1,h-1);if(w>=8&&h>=16){ctx.fillStyle=c1;ctx.fillRect(x+3,y+6,w-6,floor(h/8));ctx.fillStyle=fgColor;for(let i=0;i<w-6;i+=2){for(let j=0;j<h/2-3;j+=8){ctx.fillRect(x+3+i,y+floor(h/2)+j,1,1)}}}};framed[1]=(x,y,w,h)=>{if(w>=12){ctx.fillRect(x,y,4,h);ctx.fillRect(x+w-4,y,4,h)}ctx.strokeRect(x+.5,y+.5,w-1,h-1);let s=floor(min((w-12)/3,h-12));if(w>=20&&h>=16){ctx.fillStyle=c1;ctx.fillRect(x+6,y+floor(h/2-s/2),s,s);ctx.fillStyle=c2;ctx.fillRect(x+6+s,y+floor(h/2-s/2),s,s);ctx.fillStyle=c3;ctx.fillRect(x+6+2*s,y+floor(h/2-s/2),s,s);ctx.fillStyle=fgColor;for(let i=0;i<w-12;i+=s){for(let j=0;j<h-floor(h/2-s/2);j+=s){ctx.fillRect(x+6+i,y+floor(h/2-s/2)+j,1,1)}}}};framed[2]=(x,y,w,h)=>{if(h>=6){ctx.fillRect(x,y+floor(h/2),w,floor(h/2))}ctx.strokeRect(x+.5,y+.5,w-1,h-1);if(w>=16&&h>=16){ctx.fillStyle=c1;ctx.fillRect(x+floor(w/4),y+h-floor(h/2),floor(w/2),floor(h/4));ctx.fillStyle=c2;ctx.fillRect(x+floor(w/4),y+h-floor(h/4),floor(w/2),floor(h/4));ctx.fillStyle=fgColor;for(let i=0;i<w-6;i+=3){for(let j=0;j<h-floor(h/2)-4;j+=4){ctx.fillRect(x+4+i,y+4+j,1,1)}}}};framed[3]=(x,y,w,h)=>{ctx.fillStyle=fgColor;for(let i=0;i<w-4;i++){for(let j=0;j<h-4;j++){if((i+j)%8==0&&i%3==0){ctx.fillRect(x+i+2,y+j+2,1,1)}}}ctx.fillStyle=c1;if(w>=6&&h>=6){ctx.fillRect(x+floor(w/3),y+floor(h/3),floor(w/3),floor(h/3))}ctx.strokeRect(x+.5,y+.5,w-1,h-1)};framed[4]=(x,y,w,h)=>{if(w>=4&&h>=6){ctx.fillRect(x,y+h-4,w,4)}ctx.strokeRect(x+.5,y+.5,w-1,h-1);if(w>=6&&h>=40){let c=[c1,c2,c3,fgColor];for(let i=2;i<w-2;i+=3){for(let j=16;j<h-7-16;j+=8){ctx.fillStyle=c[(i+j)%c.length];ctx.fillRect(x+i,y+j,1,1)}}}};framed[5]=(x,y,w,h)=>{if(w>=6&&h>=6){for(let i=0;i<w-7;i+=6){for(let j=0;j<h-4;j+=6){if((i+j)%12==0){ctx.fillStyle=fgColor;ctx.fillRect(x+2+i,y+2+j,1,1);ctx.fillStyle=c1;ctx.fillRect(x+2+i+2,y+2+j,1,1)}}}}ctx.strokeRect(x+.5,y+.5,w-1,h-1)};framed[6]=(x,y,w,h)=>{if(w>=8){for(let j=0;j<h-2;j+=4){ctx.fillRect(x,y+j,floor(w/3),1)}}ctx.strokeRect(x+.5,y+.5,w-1,h-1);if(w>=16){ctx.fillStyle=c1;ctx.fillRect(x+floor(w/3),y+1,floor(w/3),h-2)}};framed[7]=(x,y,w,h)=>{if(w>=8&&h>=8){for(let j=2;j<h-4;j+=9){ctx.fillStyle=fgColor;ctx.fillRect(x+floor(w/3),y+j,floor(w/3),1);ctx.fillStyle=c1;ctx.fillRect(x+floor(w/3)-4,y+j,2,1);ctx.fillRect(x+floor(w/3)*2+2,y+j,2,1)}}if(w>=8&&h>=8){ctx.strokeRect(x+2.5,y+2.5,w-5,h-5)}ctx.strokeRect(x+.5,y+.5,w-1,h-1)};let rectangle=[];rectangle[0]=(x,y,w,h)=>{let c=[fgColor,c1,c2,c3];let currentX=0;while(currentX<w){let stepX=R.random_int(1,w-currentX);ctx.fillStyle=c[R.random_int(0,c.length-1)];ctx.fillRect(x+currentX,y,stepX,R.random_int(0,h-1));currentX+=stepX}};rectangle[1]=(x,y,w,h)=>{let c=[fgColor,c1,c2,c3];let currentX=0;let currentY=0;while(currentY<h){let stepY=R.random_int(1,h-currentY);while(currentX<w){let stepX=R.random_int(1,w-currentX);ctx.fillStyle=c[R.random_int(0,c.length-1)];ctx.fillRect(x+currentX,y+currentY,stepX,R.random_int(0,h-currentY-1));currentX+=stepX}currentX=0;currentY+=stepY}};rectangle[2]=(x,y,w,h)=>{let c=[fgColor,c1,c2,c3];let currentX=0;let currentY=0;while(currentY<h){let stepY=R.random_int(1,h-currentY);while(currentX<w){let stepX=R.random_int(1,w-currentX);ctx.fillStyle=c[R.random_int(0,c.length-1)];ctx.fillRect(x+currentX,y+currentY,stepX,stepY);currentX+=stepX}currentX=0;currentY+=stepY}};rectangle[3]=(x,y,w,h)=>{let c=[fgColor,c1,c2,c3];let currentX=0;let currentY=0;while(currentY<h){let stepY=R.random_int(1,h-currentY);let stepX=R.random_int(1,w-currentX);while(currentX<w){stepX=min(stepX,w-currentX);ctx.fillStyle=c[R.random_int(0,c.length-1)];ctx.fillRect(x+currentX,y+currentY,stepX,stepY);currentX+=stepX}currentX=0;currentY+=stepY}};rectangle[4]=(x,y,w,h)=>{for(let j=0;j<h-16;j+=16){let r=R.random_int(min(w,8),w);ctx.fillStyle=c1;ctx.fillRect(x,y+j,r,8);ctx.fillStyle=c2;ctx.fillRect(x+r,y+j,w-r,8);ctx.fillStyle=fgColor;ctx.fillRect(x,y+j+8,r,8)}};rectangle[5]=(x,y,w,h)=>{for(let j=0;j<h-16;j+=16){let r=R.random_int(min(w,8),w);ctx.fillStyle=c1;ctx.fillRect(x,y+j,r,8);ctx.fillStyle=c3;ctx.fillRect(x+r,y+j,w-r,8);ctx.fillStyle=fgColor;ctx.fillRect(x,y+j+8,r,8);ctx.fillStyle=bgColor;for(let i=0;i<w;i+=4){if(R.random_bool(.1)){ctx.fillRect(x+i,y+j,1,16)}}}};rectangle[6]=(x,y,w,h)=>{let c=[c1,c2,c3];for(let j=0;j<h-16;j+=16){let r=R.random_int(0,2);ctx.fillStyle=c[r];ctx.fillRect(x,y+j,w,8);ctx.fillStyle=fgColor;ctx.fillRect(x,y+j+9,w,1)}};rectangle[7]=(x,y,w,h)=>{let c=[c1,c2,c3];for(let j=0;j<h-16;j+=16){let r=R.random_int(0,2);ctx.fillStyle=fgColor;ctx.fillRect(x,y+j,w,8);ctx.fillStyle=c[r];ctx.fillRect(x,y+j+9,w,1)}};let gradient=[];let gDir;let gLines;gradient[0]=(x,y,w,h)=>{let g=ctx.createLinearGradient(x,y,x+(gDir<2?w:0),y+(gDir>0?h:0));g.addColorStop(0,c1);g.addColorStop(1,c2);ctx.fillStyle=g;ctx.fillRect(x,y,w,h)};gradient[1]=(x,y,w,h)=>{[c1,c2]=[c2,c1];let g=ctx.createLinearGradient(x,y,x+(gDir<2?w:0),y+(gDir>0?h:0));g.addColorStop(0,c1);g.addColorStop(1,c2);ctx.fillStyle=g;ctx.fillRect(x,y,w,h)};gradient[2]=(x,y,w,h)=>{if(R.random_bool(.1)){[c1,c2]=[c2,c1]}let g=ctx.createLinearGradient(x,y,x+(gDir<2?w:0),y+(gDir>0?h:0));g.addColorStop(0,c1);g.addColorStop(1,c2);ctx.fillStyle=g;ctx.fillRect(x,y,w,h)};gradient[3]=(x,y,w,h)=>{let g=ctx.createLinearGradient(x,y,x+(gDir<2?w:0),y+(gDir>0?h:0));g.addColorStop(0,c1);g.addColorStop(1,c2);ctx.fillStyle=g;ctx.fillRect(x,y,w,h);ctx.strokeStyle=bgColor;ctx.lineWidth=R.random_bool(gLines)?1:3;for(let i=0;i<h;i+=4){ctx.beginPath();ctx.moveTo(x,y+i+.5);ctx.lineTo(x+w,y+i+.5);ctx.stroke()}ctx.lineWidth=1};gradient[4]=(x,y,w,h)=>{let g=ctx.createRadialGradient(x+R.random_int(0,w-1),y+R.random_int(0,h-1),0,x+R.random_int(0,w-1),y+R.random_int(0,h-1),max(w,h));g.addColorStop(0,c1);g.addColorStop(1,c2);ctx.fillStyle=g;ctx.fillRect(x,y,w,h)};gradient[5]=(x,y,w,h)=>{let w2=floor(w/2);let h2=floor(h/2);let g=ctx.createRadialGradient(x+w2,y+h2,0,x+w2,y+h2,min(w,h));g.addColorStop(0,c1);g.addColorStop(1,c2);ctx.fillStyle=g;ctx.fillRect(x,y,w,h)};gradient[6]=(x,y,w,h)=>{let w2=floor(w/2);let g=ctx.createRadialGradient(x+w2,y+h,0,x+w2,y,max(w,h));g.addColorStop(0,c1);g.addColorStop(1,c2);ctx.fillStyle=g;ctx.fillRect(x,y,w,h)};gradient[7]=(x,y,w,h)=>{let g=ctx.createRadialGradient(x+R.random_int(0,w-1),y+R.random_int(0,h-1),0,x+R.random_int(0,w-1),y+R.random_int(0,h-1),max(w,h));g.addColorStop(0,c1);g.addColorStop(.5,c2);g.addColorStop(1,c3);ctx.fillStyle=g;ctx.fillRect(x,y,w,h)};let comps,numComps,compId,symbolId,typeTmp,symbolTmp,rythm,rythmCounter;let symbolMode;const getTypeAndSymbol=()=>{let type,symbol,comp,symbols;switch(symbolMode){case 0:type=R.random_int(0,7);symbol=R.random_int(0,7);break;case 1:type=typeTmp;symbol=symbolTmp;if(R.random_bool(.1)){symbolId=R.random_int(0,comps[compId][1].length-1);symbolTmp=R.random_int(0,7)}break;case 2:comp=R.random_int(0,numComps-1);type=comps[comp][0];symbols=comps[comp][1];symbol=symbols[R.random_int(0,comps[comp][1].length-1)];break;case 3:comp=compId;type=comps[comp][0];symbols=comps[comp][1];symbol=symbols[symbolId];if(R.random_bool(.1)){compId=R.random_int(0,numComps-1);symbolId=R.random_int(0,comps[compId][1].length-1);typeTmp=R.random_int(0,7);symbolTmp=R.random_int(0,7)}break;case 4:comp=(compId+rythmCounter%rythm)%comps.length;type=comps[comp][0];symbols=comps[comp][1];symbol=symbols[(symbolId+rythmCounter%rythm)%symbols.length];rythmCounter++;break;case 5:comp=(compId+rythmCounter%rythm)%comps.length;type=comps[comp][0];symbols=comps[comp][1];symbol=symbols[(symbolId+rythmCounter%rythm)%symbols.length];rythmCounter++;if(R.random_bool(.1)){rythm=R.random_int(2,4)}break;case 6:comp=compId;type=comps[comp][0];symbols=comps[comp][1];symbol=symbols[symbolId%symbols.length];symbolId++;break;case 7:comp=compId%comps.length;type=comps[comp][0];symbols=comps[comp][1];symbol=symbols[symbolId%symbols.length];symbolId++;if(symbolId%symbols.length==0){compId++}break;default:break}return[type,symbol]};const drawSymbol=(x,y,w,h,t,s)=>{if(w-1<=0||h-1<=0)return;ctx.strokeStyle=fgColor;ctx.fillStyle=fgColor;ctx.lineWidth=1;ctx.setLineDash([]);switch(t){case 0:dashed[s](x,y,w-1,h-1);break;case 1:noise[s](x,y,w-1,h-1);break;case 2:grid[s](x,y,w-1,h-1);break;case 3:boxes[s](x,y,w-1,h-1);break;case 4:area[s](x,y,w-1,h-1);break;case 5:framed[s](x,y,w-1,h-1);break;case 6:rectangle[s](x,y,w-1,h-1);break;case 7:gradient[s](x,y,w-1,h-1);break;default:break}};const drawStructureGrid=(x,y,w,h,c,r)=>{let rects=[];let fw=floor(w/c);let fh=floor(h/r);let ox=floor(w%fw/2);let oy=floor(h%fh/2);for(let i=x+ox;i<=x+w-fw;i+=fw){for(let j=y+oy;j<=y+h-fh;j+=fh){rects.push([i,j,fw,fh])}}return rects};const drawStructureGridPacking=(x,y,w,h,c,r)=>{let rects=[];let used=Array(c*r);used.fill(false);let fw=floor(w/c);let fh=floor(h/r);let ox=floor(w%(fw*c)/2);let oy=floor(h%(fh*r)/2);for(let i=0;i<c;i++){for(let j=0;j<r;j++){let cw=min(c-i,pow(2,R.random_int(0,3)));let ch=min(r-j,pow(2,R.random_int(0,3)));let off=i+cw>c||j+ch>r;if(!off){let hit=false;for(let k=0;k<cw;k++){for(let l=0;l<ch;l++){if(used[i+k+(j+l)*c]){hit=true}}}if(!hit){rects.push([x+ox+i*fw,y+oy+j*fh,fw*cw,fh*ch]);for(let k=0;k<cw;k++){for(let l=0;l<ch;l++){used[i+k+(j+l)*c]=true}}}}}}return rects};const drawStructureColumns=(x,y,w,h,c)=>{let rects=[];let widths=[];let num=R.random_int(1,4);let gap=pow(2,R.random_int(0,3));let bw=floor(w/c)*num-gap*(num-1);for(let i=0;i<num;i++){if(i<num-1){widths[i]=R.random_int(2,bw-(num-i)*(gap+2)-1);bw-=widths[i]+gap}else{widths[i]=bw}}let cur=0;let tw=widths[0]+gap;while(tw<=w){cur++;tw+=widths[cur%widths.length];tw+=gap}tw-=gap;tw-=widths[cur%widths.length];tw-=gap;let ox=floor((w-tw)*.5);cur=0;let dx=x;let dw=widths[0];while(ox+dx+dw<x+w){rects.push([ox+dx,y,dw,h]);dx+=dw+gap;cur++;dw=widths[cur%widths.length]}return rects};const drawStructureRows=(x,y,w,h,r)=>{let rects=[];let heights=[];let num=R.random_int(1,4);let gap=pow(2,R.random_int(0,3));let bh=floor(h/r)*num-gap*(num-1);for(let i=0;i<num;i++){if(i<num-1){heights[i]=R.random_int(2,bh-(num-i)*(gap+2)-1);bh-=heights[i]+gap}else{heights[i]=bh}}let cur=0;let th=heights[0]+gap;while(th<=h){cur++;th+=heights[cur%heights.length];th+=gap}th-=gap;th-=heights[cur%heights.length];th-=gap;let oy=floor((h-th)*.5);cur=0;let dy=y;let dh=heights[0];while(oy+dy+dh<y+h){rects.push([x,oy+dy,w,dh]);dy+=dh+gap;cur++;dh=heights[cur%heights.length]}return rects};const drawStructureNoiseColumns=(x,y,w,h,c,r)=>{let rects=[];let mw=1/c;let mh=1/r;let n=simplex.create(R);let nx=R.random_dec();let ny=R.random_dec();let fx=0;let fy=0;let fw=(n(nx+fx*.001,ny+fy)+1)*mw;let fh=(n(nx+fx,ny+fy*.001)+1)*mh;while(fx+fw<1){while(fy+fh<1){rects.push([x+floor(fx*w),y+floor(fy*h),floor(fw*w),floor(fh*h)]);let nh=(n(nx+fx,ny+fy*.001)+1)*mh;fy+=fh;fh=nh}fh=1-fy;rects.push([x+floor(fx*w),y+floor(fy*h),floor(fw*w),floor(fh*h)]);fy=0;let nw=(n(nx+fx,ny+fy*.001)+1)*mw;fx+=fw;fw=nw}fw=1-fx;while(fy+fh<1){rects.push([x+floor(fx*w),y+floor(fy*h),floor(fw*w),floor(fh*h)]);let nh=(n(nx+fx,ny+fy*.001)+1)*mh;fy+=fh;fh=nh}fh=1-fy;rects.push([x+floor(fx*w),y+floor(fy*h),floor(fw*w),floor(fh*h)]);return rects};const drawStructureNoiseRows=(x,y,w,h,c,r)=>{let rects=[];let mw=1/c;let mh=1/r;let n=simplex.create(R);let nx=R.random_dec();let ny=R.random_dec();let fx=0;let fy=0;let fw=(n(nx+fx*.001,ny+fy)+1)*mw;let fh=(n(nx+fx,ny+fy*.001)+1)*mh;while(fy+fh<1){while(fx+fw<1){rects.push([x+floor(fx*w),y+floor(fy*h),floor(fw*w),floor(fh*h)]);let nw=(n(nx+fx*.001,ny+fy)+1)*mw;fx+=fw;fw=nw}fw=1-fx;rects.push([x+floor(fx*w),y+floor(fy*h),floor(fw*w),floor(fh*h)]);fx=0;let nh=(n(nx+fx,ny+fy*.001)+1)*mh;fy+=fh;fh=nh}fh=1-fy;while(fx+fw<1){rects.push([x+floor(fx*w),y+floor(fy*h),floor(fw*w),floor(fh*h)]);let nw=(n(nx+fx*.001,ny+fy)+1)*mw;fx+=fw;fw=nw}fw=1-fx;rects.push([x+floor(fx*w),y+floor(fy*h),floor(fw*w),floor(fh*h)]);return rects};const drawStructureSubdivColumns=(x,y,w,h,c,d)=>{let rects=[];let cw=floor(w/c);let num=floor(w/cw);let ox=floor((w-cw*num)/2);for(let i=0;i<num;i++){rects[i]=[x+ox+i*cw,y,cw,h]}for(let i=0;i<d;i++){let idx=R.random_int(0,rects.length-1);let r=rects[idx];if(R.random_bool(.25)){let rectW=R.random_int(2,r[2]-3);rectW=r[2]-rectW<2?2:rectW;rects.splice(idx,1,[r[0],r[1],rectW,r[3]],[r[0]+rectW,r[1],r[2]-rectW,r[3]])}else{let rectH=R.random_int(2,r[3]-3);rectH=r[3]-rectH<2?2:rectH;rects.splice(idx,1,[r[0],r[1],r[2],rectH],[r[0],r[1]+rectH,r[2],r[3]-rectH])}}return rects};const drawStructureSubdivRows=(x,y,w,h,r,d)=>{let rects=[];let rh=floor(h/r);let num=floor(h/rh);let oy=floor((h-rh*num)/2);for(let i=0;i<num;i++){rects[i]=[x,oy+y+i*rh,w,rh]}for(let i=0;i<d;i++){let idx=R.random_int(0,rects.length-1);let r=rects[idx];if(R.random_bool(.75)){let rectW=R.random_int(2,r[2]-3);rectW=r[2]-rectW<2?2:rectW;rects.splice(idx,1,[r[0],r[1],rectW,r[3]],[r[0]+rectW,r[1],r[2]-rectW,r[3]])}else{let rectH=R.random_int(2,r[3]-3);rectH=r[3]-rectH<2?2:rectH;rects.splice(idx,1,[r[0],r[1],r[2],rectH],[r[0],r[1]+rectH,r[2],r[3]-rectH])}}return rects};const drawStructureSubdiv=(x,y,w,h,d)=>{let rects=[];rects[0]=[x,y,w,h];for(let i=0;i<d;i++){let idx=R.random_int(0,rects.length-1);let r=rects[idx];if(R.random_bool(.5)){let rectW=R.random_int(2,r[2]-3);rectW=r[2]-rectW<2?2:rectW;rects.splice(idx,1,[r[0],r[1],rectW,r[3]],[r[0]+rectW,r[1],r[2]-rectW,r[3]])}else{let rectH=R.random_int(2,r[3]-3);rectH=r[3]-rectH<2?2:rectH;rects.splice(idx,1,[r[0],r[1],r[2],rectH],[r[0],r[1]+rectH,r[2],r[3]-rectH])}}return rects};const init=()=>{canvas=document.createElement("canvas");ctx=canvas.getContext("2d",{willReadFrequently:true})};const weightedRandom=(...w)=>{let t=0;w.map(x=>x[0]=t+=x[0]);t=R.random_int(0,t-1);let s=w.filter(x=>t<x[0])[0].slice(1)[0];return s};const getRandomColor=()=>{let hueRoot=R.random_bool(.5)?0:2/3;let hueOffset=R.random_num(-1/6,1/6);let hue=(1+hueRoot+hueOffset)%1;return hsvToRgb(hue,1,1)};const draw=(w,h)=>{R=new Random;let colorMode=weightedRandom([75,0],[12,1],[5,2],[8,3]);bgColor="#000";fgColor="#fff";if(R.random_dec()<.025){[bgColor,fgColor]=[fgColor,bgColor]}switch(colorMode){case 0:c1=getRandomColor();c2=getRandomColor();c3=getRandomColor();break;case 1:c1=c3=getRandomColor();c2=getRandomColor();break;case 2:c1=c2=c3=getRandomColor();break;case 3:let hue=R.random_dec();let sat=R.random_num(.44,.88);c1=hsvToRgb(hue,sat,.88);let co2=R.random_bool()?.088*4:-.088*4;c2=hsvToRgb((1+hue+co2)%1,sat/2,.88);let co3=R.random_bool()?.088:-.088;c3=hsvToRgb((1+hue+co3)%1,sat/2,.88);break;default:break}canvas.width=w;canvas.height=h;ctx.clearRect(0,0,w,h);ctx.fillStyle=bgColor;ctx.fillRect(0,0,w,h);comps=[];numComps=R.random_int(1,8);for(let i=0;i<numComps;i++){let symbols=[];let numSymbols=R.random_int(1,8);for(let i=0;i<numSymbols;i++){symbols.push(R.random_int(0,7))}comps.push([R.random_int(0,7),symbols])}compId=R.random_int(0,numComps-1);symbolId=R.random_int(0,comps[compId][1].length-1);typeTmp=R.random_int(0,7);symbolTmp=R.random_int(0,7);rythm=R.random_int(2,4);rythmCounter=0;symbolMode=R.random_int(0,7);gDir=R.random_int(0,2);gLines=R.random_int(0,2)/2;let rects=[];let columns,rows;let structure=weightedRandom([11,0],[14,1],[6,2],[5,3],[7,4],[8,5],[15,6],[16,7],[18,8]);switch(structure){case 0:columns=pow(2,R.random_int(2,5));rows=R.random_bool(.5)?columns:pow(2,R.random_int(2,5));rects=drawStructureGrid(0,0,w,h,columns,rows);break;case 1:columns=pow(2,R.random_int(3,6));rows=R.random_bool(.5)?columns:pow(2,R.random_int(3,6));rects=drawStructureGridPacking(0,0,w,h,columns,rows);break;case 2:columns=pow(2,R.random_int(2,5));rects=drawStructureColumns(0,0,w,h,columns);break;case 3:rows=pow(2,R.random_int(2,5));rects=drawStructureRows(0,0,w,h,rows);break;case 4:columns=pow(2,R.random_int(2,5));rows=pow(2,R.random_int(2,6));rects=drawStructureNoiseColumns(0,0,w,h,columns,rows);break;case 5:columns=pow(2,R.random_int(2,6));rows=pow(2,R.random_int(2,5));rects=drawStructureNoiseRows(0,0,w,h,columns,rows);break;case 6:columns=pow(2,R.random_int(2,5));rects=drawStructureSubdivColumns(0,0,w,h,columns,32);break;case 7:rows=pow(2,R.random_int(2,5));rects=drawStructureSubdivRows(0,0,w,h,rows,32);break;case 8:rects=drawStructureSubdiv(0,0,w,h,64);break;default:break}let ts=[];for(let i=0;i<rects.length;i++){ts.push(getTypeAndSymbol())}for(let i=0;i<rects.length;i++){let rect=rects[i];drawSymbol(rect[0],rect[1],rect[2],rect[3],ts[i][0],ts[i][1])}return{pixels:ctx.getImageData(0,0,w,h),rectBuffer:rects}};return{init:init,draw:draw}};class Random{constructor(){this.useA=false;let sfc32=function(uint128Hex){let a=parseInt(uint128Hex.substr(0,8),16);let b=parseInt(uint128Hex.substr(8,8),16);let c=parseInt(uint128Hex.substr(16,8),16);let d=parseInt(uint128Hex.substr(24,8),16);return function(){a|=0;b|=0;c|=0;d|=0;let t=(a+b|0)+d|0;d=d+1|0;a=b^b>>>9;b=c+(c<<3)|0;c=c<<21|c>>>11;c=c+t|0;return(t>>>0)/4294967296}};this.prngA=new sfc32(tokenData.hash.substr(2,32));this.prngB=new sfc32(tokenData.hash.substr(34,32));for(let i=0;i<1e6;i+=2){this.prngA();this.prngB()}}random_dec(){this.useA=!this.useA;return this.useA?this.prngA():this.prngB()}random_num(a,b){return a+(b-a)*this.random_dec()}random_int(a,b){return Math.floor(this.random_num(a,b+1))}random_bool(p){return this.random_dec()<p}random_choice(list){return list[this.random_int(0,list.length-1)]}}const{abs,ceil,floor,max,min,pow,round,sqrt}=Math;const Simplex=()=>{const table=R=>{const ts=512;const p=new Uint8Array(ts);for(let i=0;i<ts/2;i++){p[i]=i}for(let i=0;i<ts/2-1;i++){const r=i+~~(R.random_dec()*(256-i));const aux=p[i];p[i]=p[r];p[r]=aux}for(let i=256;i<ts;i++){p[i]=p[i-256]}return p};const F2=.5*(sqrt(3)-1);const G2=(3-sqrt(3))/6;const fastFloor=x=>floor(x)|0;const grad2=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);const create=R=>{let perm=table(R);let permGrad2x=new Float64Array(perm).map(v=>grad2[v%12*2]);let permGrad2y=new Float64Array(perm).map(v=>grad2[v%12*2+1]);return function get(x,y){let n0=n1=n2=0;let s=(x+y)*F2;let i=fastFloor(x+s);let j=fastFloor(y+s);let t=(i+j)*G2;let X0=i-t;let Y0=j-t;let x0=x-X0;let y0=y-Y0;let i1,j1;if(x0>y0){i1=1;j1=0}else{i1=0;j1=1}let x1=x0-i1+G2;let y1=y0-j1+G2;let x2=x0-1+2*G2;let y2=y0-1+2*G2;let ii=i&255;let jj=j&255;let t0=.5-x0*x0-y0*y0;if(t0>=0){let gi0=ii+perm[jj];let g0x=permGrad2x[gi0];let g0y=permGrad2y[gi0];t0*=t0;n0=t0*t0*(g0x*x0+g0y*y0)}let t1=.5-x1*x1-y1*y1;if(t1>=0){let gi1=ii+i1+perm[jj+j1];let g1x=permGrad2x[gi1];let g1y=permGrad2y[gi1];t1*=t1;n1=t1*t1*(g1x*x1+g1y*y1)}let t2=.5-x2*x2-y2*y2;if(t2>=0){let gi2=ii+1+perm[jj+1];let g2x=permGrad2x[gi2];let g2y=permGrad2y[gi2];t2*=t2;n2=t2*t2*(g2x*x2+g2y*y2)}return 70*(n0+n1+n2)}};return{create:create}};const simplex=Simplex();const hsvToRgb=(h,s,v)=>{let r,g,b,i,f,p,q,t;i=floor(h*6);f=h*6-i;p=v*(1-s);q=v*(1-f*s);t=v*(1-(1-f)*s);switch(i%6){case 0:r=v,g=t,b=p;break;case 1:r=q,g=v,b=p;break;case 2:r=p,g=v,b=t;break;case 3:r=p,g=q,b=v;break;case 4:r=t,g=p,b=v;break;case 5:r=v,g=p,b=q;break}return`rgb(${round(r*255)},${round(g*255)},${round(b*255)})`};const WebGL=()=>{let cvs,gl,vShad,fShad,dShad,vBuf,fProg,dProg,fbos,fboId=0,iTex,mTex;const init=async()=>{vShad="in vec3 pos;out vec2 vUv;void main(){gl_Position=vec4(pos,1.);vUv=.5*(pos.xy+1.);}";fShad="uniform sampler2D buffer,image,motion;uniform float time;uniform vec2 dims;in vec2 vUv;out vec4 frag;/* Cellular noise. (c) Stefan Gustavson 2011-04-19. All rights reserved. MIT license: https://github.com/stegu/webgl-noise */vec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}vec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}vec4 mod7(vec4 x){return x-floor(x*(1./7.))*7.;}vec3 permute(vec3 x){return mod289((34.*x+1.)*x);}vec4 permute(vec4 x){return mod289((34.*x+1.)*x);}vec2 cel(vec3 P){float K=.142857142857;float Ko=.428571428571;float K2=.020408163265306;float Kz=.166666666667;float Kzo=.416666666667;float jitter=.8;vec3 Pi=mod289(floor(P));vec3 Pf=fract(P);vec4 Pfx=Pf.x+vec4(0.,-1.,0.,-1.);vec4 Pfy=Pf.y+vec4(0.,0.,-1.,-1.);vec4 p=permute(Pi.x+vec4(0.,1.,0.,1.));p=permute(p+Pi.y+vec4(0.,0.,1.,1.));vec4 p1=permute(p+Pi.z);vec4 p2=permute(p+Pi.z+vec4(1.));vec4 ox1=fract(p1*K)-Ko;vec4 oy1=mod7(floor(p1*K))*K-Ko;vec4 oz1=floor(p1*K2)*Kz-Kzo;vec4 ox2=fract(p2*K)-Ko;vec4 oy2=mod7(floor(p2*K))*K-Ko;vec4 oz2=floor(p2*K2)*Kz-Kzo;vec4 dx1=Pfx+jitter*ox1;vec4 dy1=Pfy+jitter*oy1;vec4 dz1=Pf.z+jitter*oz1;vec4 dx2=Pfx+jitter*ox2;vec4 dy2=Pfy+jitter*oy2;vec4 dz2=Pf.z-1.+jitter*oz2;vec4 d1=dx1*dx1+dy1*dy1+dz1*dz1;vec4 d2=dx2*dx2+dy2*dy2+dz2*dz2;vec4 d=min(d1,d2);d2=max(d1,d2);d.xy=(d.x<d.y)?d.xy:d.yx;d.xz=(d.x<d.z)?d.xz:d.zx;d.xw=(d.x<d.w)?d.xw:d.wx;d.yzw=min(d.yzw,d2.yzw);d.y=min(d.y,d.z);d.y=min(d.y,d.w);d.y=min(d.y,d2.x);return sqrt(d.xy);}void main(){vec2 pos=floor(vUv*dims);vec3 c=texture(buffer,vUv).rgb;vec4 data=texture(motion,vUv);float r=floor(data.r*256.);float g=floor(data.g*256.);float b=floor(data.b*256.);vec2 off=vec2(0.);bool reset=false;if(step(.5,mod(r/2.,1.))==1.){off+=(cel(vec3(vUv.x*.7,vUv.y*.7,b+time*.05))-vec2(.5,.75))*2./dims;}if(step(.5,mod(r/4.,1.))==1.){off+=(cel(vec3(vUv.x*2.5,vUv.y*2.5,b+time*.05))-vec2(.5,.75))*2./dims;}if(step(.5,mod(r/8.,1.))==1.){off+=(cel(vec3(vUv.x*13.,vUv.y*12.,b+time*.05))-vec2(.5,.75))*2./dims;}if(step(.5,mod(r/16.,1.))==1.){off+=(cel(vec3(vUv.x*22.,vUv.y*25.,b+time*.05))-vec2(.5,.75))*2./dims;}if(step(.5,mod(r/32.,1.))==1.){off+=(cel(vec3(vUv.x*45.,vUv.y*50.,b+time*.05))-vec2(.5,.75))*2./dims;}if(step(.5,mod(r/64.,1.))==1.){off+=(cel(vec3(vUv.x*105.,vUv.y*120.,b+time*.05))-vec2(.5,.75))*2./dims;}if(step(.5,mod(r/128.,1.))==1.){off+=(cel(vec3(vUv.x*.7,vUv.y*.7,b+time*.05))-vec2(.5,.75))*4./dims;}if(step(.5,mod(r/256.,1.))==1.){off+=(cel(vec3(vUv.x*22.,vUv.y*25.,b+time*.05))-vec2(.5,.75))*4./dims;}if(step(.5,mod(g/2.,1.))==1.){if(mod(pos.x+floor(time*10.),8.)==0.){reset=true;}}if(step(.5,mod(g/4.,1.))==1.){if(mod(pos.y+floor(time*10.),8.)==0.){reset=true;}}if(step(.5,mod(g/8.,1.))==1.){if(mod(pos.x+pos.y+floor(time*10.),16.)==0.){reset=true;}}if(step(.5,mod(g/16.,1.))==1.){if(mod(pos.x+floor(time*10.),10.)==0.&&mod(pos.y+floor(time*10.),10.)==0.){reset=true;}}if(step(.5,mod(g/32.,1.))==1.){if(mod((pos.x+pos.y),12.+mod(floor(time*10.),8.))==0.){reset=true;}}if(step(.5,mod(g/64.,1.))==1.){if(mod(pos.x+floor(time*10.),5.)==0.&&mod(floor(sin(pos.y)*8.+time*120.),8.)==0.){reset=true;}}if(step(.5,mod(g/128.,1.))==1.){if(mod(floor(cos(pos.x+time)*4.),10.)==0.){reset=true;}}if(step(.5,mod(g/256.,1.))==1.){if(mod(floor(sin(pos.x+mod(floor(time*10.),3.))*4.),10.)==0.&&mod(pos.y+floor(time*200.),20.)==0.){reset=true;}}c=reset?texture(image,vUv).rgb:texture(buffer,mod(vUv+off,vec2(1.))).rgb;frag=vec4(c,1.);}";dShad="uniform sampler2D buffer;in vec2 vUv;out vec4 frag;void main(){frag=texture(buffer,vec2(vUv.x,1.-vUv.y));}";cvs=document.createElement("canvas");cvs.style.width=cvs.style.height="100%";cvs.style.verticalAlign="bottom";document.body.append(cvs);gl=cvs.getContext("webgl2",{antialias:false,willReadFrequently:true});gl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_ALPHA);gl.disable(gl.BLEND);gl.disable(gl.DEPTH_TEST);gl.clearColor(0,0,0,1);vBuf=createBuffer([-1,1,0,-1,-1,0,1,1,0,1,-1,0]);fProg=createProgram(vShad,fShad);dProg=createProgram(vShad,dShad)};const setup=(w,h,p)=>{for(let fbo in fbos){gl.deleteFramebuffer(fbo.fbo);gl.deleteTexture(fbo.t)}fbos=[];fbos.push(createFbo(w,h,p));fbos.push(createFbo(w,h,null));fboId=0;iTex=createTexture(w,h,p);mTex=createTexture(w,h,null)};const resizeCanvas=s=>{if(cvs.width!=cvs.clientWidth*s||cvs.height!=cvs.clientHeight*s){cvs.width=cvs.clientWidth*s;cvs.height=cvs.clientHeight*s;return[cvs.width/s,cvs.height/s]}return false};const render=(w,h,s,t,p)=>{renderFeedback(w,h,t,p);renderDraw(w,h,s)};setupProgram=p=>{gl.useProgram(p);p.vertexPosAttrib=gl.getAttribLocation(p,"pos");gl.enableVertexAttribArray(p.vertexPosAttrib);gl.bindBuffer(gl.ARRAY_BUFFER,vBuf);gl.vertexAttribPointer(p.vertexPosAttrib,3,gl.FLOAT,false,0,0)};renderFeedback=(w,h,t,p)=>{prevId=fboId;curId=fboId^=1;setupProgram(fProg);gl.bindFramebuffer(gl.FRAMEBUFFER,fbos[curId].fbo);gl.viewport(0,0,w,h);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.activeTexture(gl.TEXTURE0+prevId);gl.bindTexture(gl.TEXTURE_2D,fbos[prevId].t);gl.activeTexture(gl.TEXTURE0+2);gl.bindTexture(gl.TEXTURE_2D,iTex);gl.activeTexture(gl.TEXTURE0+3);gl.bindTexture(gl.TEXTURE_2D,mTex);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,w,h,0,gl.RGBA,gl.UNSIGNED_BYTE,p?p.data:null);gl.uniform1f(gl.getUniformLocation(fProg,"time"),t/1e3);gl.uniform2f(gl.getUniformLocation(fProg,"dims"),w,h);gl.uniform1i(gl.getUniformLocation(fProg,"buffer"),prevId);gl.uniform1i(gl.getUniformLocation(fProg,"image"),2);gl.uniform1i(gl.getUniformLocation(fProg,"motion"),3);gl.drawArrays(gl.TRIANGLE_STRIP,0,4)};renderDraw=(w,h,s)=>{setupProgram(dProg);gl.bindFramebuffer(gl.FRAMEBUFFER,null);gl.viewport(0,0,w*s,h*s);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,fbos[fboId].t);gl.uniform1i(gl.getUniformLocation(dProg,"buffer"),0);gl.drawArrays(gl.TRIANGLE_STRIP,0,4)};createProgram=(v,f)=>{let p=gl.createProgram();let vs=createShader("#version 300 es\n"+v,gl.VERTEX_SHADER);let fs=createShader("#version 300 es\nprecision highp float;"+f,gl.FRAGMENT_SHADER);if(vs==null||fs==null)return null;gl.attachShader(p,vs);gl.attachShader(p,fs);gl.linkProgram(p);return p};createShader=(src,st)=>{let s=gl.createShader(st);gl.shaderSource(s,src);gl.compileShader(s);return s};createFbo=(w,h,p)=>{fbo=gl.createFramebuffer();t=createTexture(w,h,p);gl.bindFramebuffer(gl.FRAMEBUFFER,fbo);gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,t,0);return{fbo:fbo,t:t}};createTexture=(w,h,p)=>{t=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,t);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,w,h,0,gl.RGBA,gl.UNSIGNED_BYTE,p?p.data:null);return t};createBuffer=d=>{b=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,b);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(d),gl.STATIC_DRAW);return b};return{init:init,setup:setup,render:render,resizeCanvas:resizeCanvas}};const C2dMotion=()=>{let R;let canvas,ctx;let rectBuffer;let activeRects;let numActive;let mode;let rect;const ActiveRect=(rect,lifeTime,red,green,blue)=>{let lt=lifeTime||R.random_int(300,1500);let r=red||pow(2,R.random_int(0,7));let g=green||pow(2,R.random_int(0,7));let b=blue||R.random_int(0,255);return()=>{lt--;if(lt)return[rect[0],rect[1],rect[2],rect[3],lt<150?0:r,g,b];return null}};const createRect=()=>{switch(mode){case 0:return ActiveRect(rectBuffer[R.random_int(0,rectBuffer.length-1)]);case 1:rect.id++;case 2:rect.id++;if(R.random_bool(.1)){rect.r=pow(2,R.random_int(0,7));rect.g=pow(2,R.random_int(0,7));rect.b=R.random_int(0,255)}return ActiveRect(rectBuffer[rect.id%rectBuffer.length],null,rect.r,rect.g,rect.b);case 3:rect.id++;if(rect.id%rectBuffer.length%numActive==0){rect.id=R.random_int(0,rectBuffer.length-1);rect.lt=R.random_int(300,1500);rect.r=pow(2,R.random_int(0,7));rect.g=pow(2,R.random_int(0,7));rect.b=R.random_int(0,255)}return ActiveRect(rectBuffer[rect.id%rectBuffer.length],rect.lt,rect.r,rect.g,rect.b);default:return}};const init=()=>{canvas=document.createElement("canvas");ctx=canvas.getContext("2d",{willReadFrequently:true})};const setup=rects=>{R=new Random;rectBuffer=rects;activeRects=[];mode=R.random_int(0,3);numActive=R.random_int(max(2,rectBuffer.length/4),rectBuffer.length);rect={id:R.random_int(0,rects.length-1),lt:R.random_int(300,1500),r:pow(2,R.random_int(0,7)),g:pow(2,R.random_int(0,7)),b:R.random_int(0,255)};for(let i=0;i<numActive;i++){activeRects.push(createRect())}};const draw=(w,h)=>{canvas.width=w;canvas.height=h;ctx.clearRect(0,0,w,h);ctx.fillStyle="#000";ctx.fillRect(0,0,w,h);ctx.globalCompositeOperation="lighten";for(let i=0;i<activeRects.length;i++){let r=activeRects[i]();if(r){ctx.fillStyle=`rgb(${r[4]},${r[5]},${r[6]})`;ctx.fillRect(r[0],r[1],r[2],r[3])}else{activeRects[i]=createRect()}}return ctx.getImageData(0,0,w,h)};return{init:init,setup:setup,draw:draw}};let gl=WebGL();let c2dImage=C2dImage();let c2dMotion=C2dMotion();let scale,dims;async function init(){document.querySelector("html").style.height="100%";let bs=document.body.style;bs.margin="0px";bs.height="100%";bs.overflow="hidden";bs.background="black";c2dImage.init();c2dMotion.init();await gl.init();scale=Math.min(window.devicePixelRatio,3);dims=gl.resizeCanvas(scale);setup();animate(0)}function setup(){let img=c2dImage.draw(dims[0],dims[1]);c2dMotion.setup(img.rectBuffer);gl.setup(dims[0],dims[1],img.pixels)}function animate(time){let resized=gl.resizeCanvas(scale);if(resized){scale=Math.min(window.devicePixelRatio,2);dims=resized;setup()}let mPixels=c2dMotion.draw(dims[0],dims[1]);gl.render(dims[0],dims[1],scale,time,mPixels);requestAnimationFrame(animate)}init();