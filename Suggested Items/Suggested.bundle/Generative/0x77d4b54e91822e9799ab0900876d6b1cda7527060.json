{
  "contractAddress" : "0x77d4b54e91822e9799ab0900876d6b1cda752706",
  "kind" : "p5js100",
  "projectId" : "0",
  "script" : "function scaleAgnosticCanvas(e=[16,9]){let t=window.innerWidth,n=window.innerHeight;t*(e[1]\/e[0])>n?currentCanvas=createCanvas(n*(e[0]\/e[1]),n):currentCanvas=createCanvas(t,t*(e[1]\/e[0]))}function keyPressed(){if(\"s\"==key){let e=floor(random(1e6,9999999));save(e+\".png\")}\"p\"===key&&(!1===globalPause?globalPause=!0:(globalPause=!1,loop())),\"r\"===key&&(currentCanvas.remove(),setup(!1)),\"f\"===key&&(currentCanvas.remove(),setup(!0)),\"b\"===key&&refreshBackground()}class Random{constructor(e){this.useA=!1;let t=function(e){let t=parseInt(e.substr(0,8),16),n=parseInt(e.substr(8,8),16),i=parseInt(e.substr(16,8),16),s=parseInt(e.substr(24,8),16);return function(){t|=0,n|=0,i|=0,s|=0;let e=(t+n|0)+s|0;return s=s+1|0,t=n^n>>>9,n=i+(i<<3)|0,i=i<<21|i>>>11,i=i+e|0,(e>>>0)\/4294967296}};this.prngA=new t(e.substr(2,32)),this.prngB=new t(e.substr(34,32));for(let e=0;e<1e6;e+=2)this.prngA(),this.prngB()}random_dec(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}random_num(e,t){return e+(t-e)*this.random_dec()}makeHash(){let e=\"0123456789abcdef\",t=\"0x\";for(let n=64;n>0;--n)t+=e[this.next(0,e.length,!0)];return t}next(e,t,n=!1){return!0!==e&&!1!==e||(e=void 0),!0!==t&&!1!==t||(t=void 0),null==e&&null==t&&(e=0,t=1),void 0!==e&&null==t&&(t=e,e=0),n?Math.floor(this.random_num(e,t)):this.random_num(e,t)}gaussian(e=0,t=1){const n=1-this.next(),i=this.next();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*i)*t+e}purge(e){for(let t=0;t<e;t++)this.random_num(0,1)}}let R=new Random(tokenData.hash);function _map(e,t,n,i,s){return newval=(e-t)\/(n-t)*(s-i)+i}function _radians(e){return e*Math.PI\/180}function _degrees(e){return 180*e\/Math.PI}function _constrain(e,t,n){return Math.max(Math.min(e,n),t)}function pv(e,t,n){return new _createVector(e,t,n)}class _createVector{constructor(e,t,n){this.x=e,this.y=t,this.z=n}add(e,t){this.x+=e||0,this.y+=t||0}sub(e,t){this.x-=e||0,this.y-=t||0}mult(e){this.x*=e,this.y*=e}set(e,t,n){this.x=e,this.y=t,this.z=n}rotate(e){let t=this.heading()+e;const n=this.mag();this.x=Math.cos(t)*n,this.y=Math.sin(t)*n}mag(){return Math.sqrt(this.magSq())}magSq(){const e=this.x,t=this.y;return e*e+t*t}heading(){return Math.atan2(this.y,this.x)}}class Grad{constructor(e,t,n){this.x=e,this.y=t,this.z=n}dot2(e,t){return this.x*e+this.y*t}}class customNoise{constructor(){this.grad3=[new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)],this.p=[];for(let e=0;e<256;e++)this.p.push(R.next(0,256,!0));this.perm=new Array(512),this.gradP=new Array(512);for(var e=0;e<256;e++)this.perm[e]=this.perm[e+256]=this.p[e],this.gradP[e]=this.gradP[e+256]=this.grad3[this.perm[e]%12];this.F2=.5*(Math.sqrt(3)-1),this.G2=(3-Math.sqrt(3))\/6}fade(e){return e*e*e*(e*(6*e-15)+10)}_lerp(e,t,n){return(1-n)*e+n*t}perlin2(e,t){let n=Math.floor(e),i=Math.floor(t);e-=n,t-=i,n&=255,i&=255;let s=this.gradP[n+this.perm[i]].dot2(e,t),r=this.gradP[n+this.perm[i+1]].dot2(e,t-1),a=this.gradP[n+1+this.perm[i]].dot2(e-1,t),o=this.gradP[n+1+this.perm[i+1]].dot2(e-1,t-1),h=this.fade(e);return lerp(this._lerp(s,a,h),this._lerp(r,o,h),this.fade(t))}}let noisy=new customNoise;function curvesIntersect(e,t,{closed:n=!1}={}){if(0==n){for(let n=0;n<e.length-1;n++)for(let i=0;i<t.length-1;i++)if(hyperIntersect(e[n],e[n+1],t[i],t[i+1]))return!0;return!1}for(let n=0;n<e.length;n++)for(let i=0;i<t.length;i++)if(hyperIntersect(e[n],e[(n+1)%e.length],t[i],t[(i+1)%t.length]))return!0;return!1}function lineIntersectsCurveBetter(e,t,{closed:n=!1}={}){let i=[];if(!1===n)for(let n=0;n<t.length-1;n++)hyperIntersect(e[0],e[1],t[n],t[n+1])&&i.push(ptOfIntersection(e[0],e[1],t[n],t[n+1]));else for(let n=0;n<t.length;n++)hyperIntersect(e[0],e[1],t[n],t[(n+1)%t.length])&&i.push(ptOfIntersection(e[0],e[1],t[n],t[(n+1)%t.length]));return i.length>0&&i}function ptOfIntersection(e,t,n,i){if(e.x===t.x&&e.y===t.y||n.x===i.x&&n.y===i.y)return!1;if(denominator=(i.y-n.y)*(t.x-e.x)-(i.x-n.x)*(t.y-e.y),0===denominator)return!1;let s=((i.x-n.x)*(e.y-n.y)-(i.y-n.y)*(e.x-n.x))\/denominator,r=((t.x-e.x)*(e.y-n.y)-(t.y-e.y)*(e.x-n.x))\/denominator;return!(s<0||s>1||r<0||r>1)&&pv(e.x+s*(t.x-e.x),e.y+s*(t.y-e.y))}function hyperIntersect(e,t,n,i){var s,r,a;return 0!==(s=(t.x-e.x)*(i.y-n.y)-(i.x-n.x)*(t.y-e.y))&&(a=((i.y-n.y)*(i.x-e.x)+(n.x-i.x)*(i.y-e.y))\/s,r=((e.y-t.y)*(i.x-e.x)+(t.x-e.x)*(i.y-e.y))\/s,0<a&&a<1&&0<=r&&r<=1)}function average3(e,t,n){return pv((e.x+t.x+n.x)\/3,(e.y+t.y+n.y)\/3,(e.z+t.z+n.z)\/3)}function average5(e,t,n,i,s){return pv((e.x+t.x+n.x+i.x+s.x)\/5,(e.y+t.y+n.y+i.y+s.y)\/5,(e.z+t.z+n.z+i.z+s.z)\/5)}function soften(e,{start:t=1,end:n=-1,loops:i=1,preserveZ:s=!1,method:r=\"shallow\"}={}){for(let a=0;a<i;a++)for(let i=t;i<e.length+n;i++){let t;t=\"deep\"==r?average5(e[(i-2+e.length+e.length)%e.length],e[(i-1+e.length+e.length)%e.length],e[(i+e.length)%e.length],e[(i+1+e.length)%e.length],e[(i+2+e.length)%e.length]):average3(e[(i-1+e.length+e.length)%e.length],e[(i+e.length)%e.length],e[(i+1+e.length)%e.length]),s?e[(i+e.length)%e.length].set(t.x,t.y,e[(i+e.length)%e.length].z):e[(i+e.length)%e.length].set(t.x,t.y,t.z)}}function pointFrom(e,t,n){return pv(e.x-Math.sin(_radians(t))*n,e.y+Math.cos(_radians(t))*n)}function pointAng(e,t){let n=_degrees(Math.atan2(t.y-e.y,t.x-e.x))-90;return _degrees(p5.Vector.fromAngle(_radians(n)).heading())}function pointPerp(e,t){let n=_degrees(Math.atan2(t.y-e.y,t.x-e.x));return _degrees(p5.Vector.fromAngle(_radians(n)).heading())}function quickDist(e,t){return Math.hypot(t.x-e.x,t.y-e.y)}function getScalar(e,t,n,i){let s=[Math.hypot(t.x-e.x,t.y-e.y),Math.hypot(i.x-n.x,i.y-n.y)];return s[1]\/s[0]}function motherGloveScalar(e,{motherBB:t=getCanvasAsBB(),padding:n=0}={}){let i,s=quickDist(e.p1,e.p4)\/quickDist(e.p1,e.p2),r=quickDist(t.p1,t.p4)\/quickDist(t.p1,t.p2);return s<=1&&r>=1?i=1:s>=1&&r<=1?i=2:(s>=1&&r>=1||s<=1&&r<=1)&&(s<=r?i=1:s>=r&&(i=2)),1===i?getScalar(e.p1,e.p2,pv(t.p1.x+n,t.p1.y),pv(t.p2.x-n,t.p2.y)):2===i&&getScalar(e.p1,e.p4,pv(t.p1.x,t.p1.y+n),pv(t.p4.x,t.p4.y-n))}function getBB(e=[pv(0,0),pv(width,0),pv(width,height),pv(0,height)],{padding:t=0}={}){let n=99999999,i=999999999,s=-99999999,r=-99999999;for(let t=0;t<e.length;t++)n=Math.min(n,e[t].x),i=Math.min(i,e[t].y),s=Math.max(s,e[t].x),r=Math.max(r,e[t].y);return{p1:pv(n+t,i+t),p2:pv(s-t,i+t),p3:pv(s-t,r-t),p4:pv(n+t,r-t),width:s-t-(n+t),height:r-t-(i+t),mp:pv((n+s)\/2,(i+r)\/2)}}function makeBBofPoint(e,t){let n=e.x-t\/2,i=e.x+t\/2,s=e.y-t\/2,r=e.y+t\/2;return{p1:pv(n,s),p2:pv(i,s),p3:pv(i,r),p4:pv(n,r),width:i-n,height:r-s,mp:pv((n+i)\/2,(s+r)\/2)}}function pointInsideShape(e,t){let n=0;for(let i=0;i<t.length;i++)hyperIntersect(pv(-1e5,1e5),e,t[i],t[(i+1)%t.length])&&n++;return n%2==1&&n>0}function shiftArrayIndexes(e,t){t=(t+e.length)%e.length,e.push(...e.splice(0,t))}function rotatePoint(e,t,n){e.sub(t.x,t.y),e.rotate(n),e.add(t.x,t.y)}function rotateShape(e,t,n){e.forEach((e=>{rotatePoint(e,t,_radians(n))}))}function contour(e,t,{start:n=0,end:i=0,preserveZ:s=!1}={}){let r=[];for(let a=n;a<e.length+i;a++){let n=findNormal3Pt(e[(a-1+e.length)%e.length],e[(a+e.length)%e.length],e[(a+1+e.length)%e.length]),i=pointFrom(e[(a+e.length)%e.length],n,t);s&&(i.z=e[(a+e.length)%e.length].z),r.push(i)}return r}function sortPointList(e,{order:t=\"lrtb\"}={}){e.sort((function(e,n){let i={lr:e.x-n.x,rl:n.x-e.x,tb:e.y-n.y,bt:n.y-e.y};return i[t.substring(0,2)]||i[t.substring(2,4)]}))}function findPointInShape(e,{tries:t=100}={}){let n=getBB(e),i=0;e:for(;;){let s=pv(R.next(n.p1.x,n.p2.x),R.next(n.p2.y,n.p3.y));if(pointInsideShape(s,e))return s;if(i++,i>=t)break e}return!1}function drawArr(e,{closed:t=!1,scaled:n=!0}={}){beginShape(),e.forEach((e=>{!0===n?vertex(e.x*canvasData.scalar,e.y*canvasData.scalar):vertex(e.x,e.y)})),t?endShape(CLOSE):endShape()}function easyInflate(e,{dist:t=20}={}){let n=[],i=[];for(let s=0;s<e.length-1;s++){let r=[],a=[];r.push(pointFrom(e[s],pointPerp(e[s],e[(s+1)%e.length]),t\/2)),r.push(pointFrom(e[s+1],pointPerp(e[s],e[(s+1)%e.length]),t\/2)),a.push(pointFrom(e[s],pointPerp(e[s],e[(s+1)%e.length])+180,t\/2)),a.push(pointFrom(e[s+1],pointPerp(e[s],e[(s+1)%e.length])+180,t\/2)),n.push(r),i.push(a)}for(let e=0;e<n.length-1;e++){let t=ptOfIntersection(n[e][0],n[e][1],n[e+1][0],n[e+1][1]);t&&(n[e][1].set(t.x,t.y),n[e+1][0].set(t.x,t.y))}for(let e=0;e<i.length-1;e++){let t=ptOfIntersection(i[e][0],i[e][1],i[e+1][0],i[e+1][1]);t&&(i[e][1].set(t.x,t.y),i[e+1][0].set(t.x,t.y))}let s=[],r=[];for(let e=0;e<n.length;e++)s.push(n[e][0]),s.push(n[e][1]);for(let e=0;e<i.length;e++)r.push(i[e][0]),r.push(i[e][1]);r.reverse();let a=[];return a.push(...s,...r),a.push(pv(a[0].x,a[0].y)),a}function findNormal3Pt(e,t,n){let i=pointPerp(e,t),s=pointPerp(t,n),r=p5.Vector.fromAngle(_radians(i)),a=p5.Vector.fromAngle(_radians(s));return _degrees(r.heading())-_degrees(a.angleBetween(r))\/2}function scaleArr(e,t,n=1,i=!1){e.forEach((e=>{\"object\"==typeof e&&Array.isArray(e)&&null!==e&&i?scaleArr(e,t,n,i):\"object\"!=typeof e||Array.isArray(e)||(e.sub(t.x,t.y),e.mult(n),e.add(t.x,t.y))}))}function scaleArrAxis(e,t,n=1,i=\"y\",s=!1){e.forEach((e=>{\"object\"==typeof e&&Array.isArray(e)&&null!==e&&s?scaleArrAxis(e,t,n,i):\"object\"!=typeof e||Array.isArray(e)||(e.sub(t.x,t.y),\"y\"==i?e.set(e.x,e.y*n):\"x\"==i&&e.set(e.x*n,e.y),e.add(t.x,t.y))}))}function translateArr(e,t,n,i=!1){e.forEach(((e,s)=>{\"object\"==typeof e&&Array.isArray(e)&&null!==e&&i?translateArr(e,t,n,i):\"object\"!=typeof e||Array.isArray(e)||(e.sub(t.x,t.y),e.add(n.x,n.y))}))}function combineBB(e){let t=99999999,n=999999999,i=-99999999,s=-99999999;for(let r=0;r<e.length;r++)t=Math.min(t,e[r].p1.x),n=Math.min(n,e[r].p1.y),i=Math.max(i,e[r].p3.x),s=Math.max(s,e[r].p3.y);return{p1:pv(t,n),p2:pv(i,n),p3:pv(i,s),p4:pv(t,s),width:i-t,height:s-n,mp:pv((t+i)\/2,(n+s)\/2)}}function addPointsToShapeEvenly(e,t,{start:n=0,end:i=-2}={}){for(let s=e.length+i;s>=n;s--){let n=dist(e[(s+e.length)%e.length].x,e[(s+e.length)%e.length].y,e[(s+1+e.length)%e.length].x,e[(s+1+e.length)%e.length].y);if(n>t){let i=[],r=Math.floor(n\/t);for(let t=1;t<r;t++){let n=lerp(e[(s+e.length)%e.length].x,e[(s+1+e.length)%e.length].x,_map(t,0,r,0,1)),a=lerp(e[(s+e.length)%e.length].y,e[(s+1+e.length)%e.length].y,_map(t,0,r,0,1));i.push(pv(n,a))}e.splice(s+1,0,...i)}}-1==i&&e.push(pv(e[0].x,e[0].y,e[0].z))}function kinkAngle(e,t,n){if(e.x==t.x&&e.y==t.y)return!1;if(t.x==n.x&&t.y==n.y)return!1;let i=pointAng(e,t),s=p5.Vector.fromAngle(_radians(i)),r=pointAng(t,n),a=p5.Vector.fromAngle(_radians(r));return 180-abs(_degrees(s.angleBetween(a)))}function kinkTest(e,t,n,i=60){return kinkAngle(e,t,n)<i}function refitPointsToLine(e,t=10,n=!1){let i=[];if(!(e.length<2)){i.push(e[e.length-1]);for(let s=e.length-1;s>=1;s--){for(let n=1;n>=0;n-=.1){let r=lerp(e[s-1].x,e[s].x,n),a=lerp(e[s-1].y,e[s].y,n);dist(r,a,i[i.length-1].x,i[i.length-1].y)>t&&i.push(pv(r,a))}n&&s>=2&&kinkTest(e[s],e[s-1],e[s-2],n)&&i.push(e[s-1])}return i.push(e[0]),i}}function getCanvasAsBB({padding:e=0}={}){let t={p1:pv(0+e,0+e),p2:pv(width-e,0+e),p3:pv(width-e,height-e),p4:pv(0+e,height-e)};return t.mp=pv((t.p1.x+t.p2.x)\/2,(t.p2.y+t.p3.y)\/2),t.width=t.p2.x-t.p1.x,t.height=t.p3.y-t.p2.y,t}function createPointCircle(e=pv(0,0),t=100,n=100,i=20,s=!1){let r=[];for(let s=0;s<360;s+=i)r.push(pv(e.x+Math.sin(_radians(s))*t,e.y+Math.cos(_radians(s))*n));return!0===s&&r.push(pv(r[0].x,r[0].y)),r}function easingFunction(e,t=4,n=.8){switch(t){case 0:return easeInSine(e);case 1:return easeOutSine(e);case 2:return easeInOutSine(e);case 3:return easeInCubic(e);case 4:return easeOutCubic(e);case 5:return easeInOutCubic(e);case 6:return easeBellCurve(e,n);case 7:return easeBeta(e);case 8:return easeProbability(e);case 9:return easeOneLiner(e,.2);case 10:return easeOutBounce(e);case 11:return easeSemiCircle(e,n);case 12:return easeOneLiner(e,n);case 13:return easeOutBack(e)}}function easeInSine(e){return 1-Math.cos(e*Math.PI\/2)}function easeOutSine(e){return Math.sin(e*Math.PI\/2)}function easeInOutSine(e){return-(Math.cos(Math.PI*e)-1)\/2}function easeInCubic(e){return e*e*e}function easeOutCubic(e){return 1-Math.pow(1-e,3)}function easeInOutCubic(e){return e<.5?4*e*e*e:1-Math.pow(-2*e+2,3)\/2}function easeBellCurve(e,t){return(Math.sin(2*PI*(e-1\/4))+t)\/(2*t)}function easeBeta(e,t=2){return pow(2,t)*pow(e,t-1)*pow(1-e,t-1)}function easeProbability(e,t=2,n=5){return 4*pow(e,t-1)*pow(1-e,n-1)}function easeOutBack(e){const t=1.70158;return 1+2.70158*Math.pow(e-1,3)+t*Math.pow(e-1,2)}function easeOutBounce(e){const t=7.5625,n=2.75;return e<1\/n?t*e*e:e<2\/n?t*(e-=1.5\/n)*e+.75:e<2.5\/n?t*(e-=2.25\/n)*e+.9375:t*(e-=2.625\/n)*e+.984375}function easeSemiCircle(e,t=1){return 2\/pow(PI*t,2)*sqrt(pow(t,2)-pow(e,2))}function easeOneLiner(e,t){return(1-e)*(1-Math.cos(e*t*2*Math.PI))}function findPointAlongSpline(e,t){if(1===t){let t=pv(e[e.length-1].x,e[e.length-1].y);return t.z=e.length-1,t.ang=pointAng(e[e.length-2],e[e.length-1]),t}if(0===t){let t=pv(e[0].x,e[0].y);return t.z=0,t.ang=pointAng(e[0],e[1]),t}let n=splineDist(e)*t,i=0;for(let t=1;t<e.length;t++){if(i+=quickDist(e[t-1],e[t]),i===n){let n=pv(e[t].x,e[t].y);return n.z=t,n.ang=pointAng(e[t-1],e[t]),n}if(i>n){i-=quickDist(e[t-1],e[t]);let s=(n-i)\/quickDist(e[t-1],e[t]),r=pv(lerp(e[t-1].x,e[t].x,s),lerp(e[t-1].y,e[t].y,s));return r.z=t-1,r.ang=pointAng(e[t-1],e[t]),r}}return!1}function splineDist(e){let t=0;for(let n=0;n<e.length-1;n++)t+=quickDist(e[n],e[n+1]);return t}function findAngleBetween(e,t){let n=p5.Vector.fromAngle(_radians(e)),i=p5.Vector.fromAngle(_radians(t));return _degrees(n.angleBetween(i))}function makeRandomRect(e,{sz:t=[100,100],padding:n=0,randomRatio:i=!1,pointSpacing:s=0,loops:r=0,closed:a=!1,fitToBB:o=getCanvasAsBB(),rotate:h=0}={}){let l=[],p=[t[0],t[1]];return!0===i&&(p[0]=R.next(0,2),p[1]=R.next(0,2)),n=min(t[0],t[1])*n,l.push(pv(e.x-p[0]\/2+n,e.y-p[1]\/2+n)),l.push(pv(e.x+p[0]\/2-n,e.y-p[1]\/2+n)),l.push(pv(e.x+p[0]\/2-n,e.y+p[1]\/2-n)),l.push(pv(e.x-p[0]\/2+n,e.y+p[1]\/2-n)),!0===a&&l.push(pv(e.x-p[0]\/2,e.y-p[1]\/2)),l}function bbToRect(e,{closed:t=!1}={}){return!0===t?[e.p1,e.p2,e.p3,e.p4,pv(e.p1.x,e.p1.y)]:[e.p1,e.p2,e.p3,e.p4]}function offsetTriangle(e,t=.5){let n=triangleCenter(e),i=[];return e.forEach((e=>{i.push(findPointAlongSpline([e,n],t))})),i}function triangleCenter(e){let t=[];for(let n=0;n<2;n++){let i=findAngleBetween(pointAng(e[n],e[(n+1)%e.length]),pointAng(e[n],e[(n+2)%e.length])),s=pointFrom(e[n],pointAng(e[n],e[(n+1)%e.length])+i\/2,1e6);t.push([e[n],s])}return ptOfIntersection(t[0][0],t[0][1],t[1][0],t[1][1])}function perpLineFromPt(e,t){let n=((e.x-t[0].x)*(t[1].x-t[0].x)+(e.y-t[0].y)*(t[1].y-t[0].y))\/(sq(t[1].x-t[0].x)+sq(t[1].y-t[0].y));return[e,pv(t[0].x+n*(t[1].x-t[0].x),t[0].y+n*(t[1].y-t[0].y))]}function shuffleArr(e){let t,n,i=e.length;for(;i;)n=R.next(0,i,!0),i-=1,t=e[i],e[i]=e[n],e[n]=t;return e}function softShuffle(e){let t=R.next(10,e.length,!0);for(let n=0;n<t;n++){let t=R.next(0,e.length,!0),n=R.next(1,10,!0),i=e.splice(t,n);e.push(...i)}}function digifix(e,t=4){if(Math.floor(e.valueOf())===e.valueOf())return e;var n=e.toString();return n.length-1-n.indexOf(\".\")>t&&(n=n.slice(0,n.indexOf(\".\")+t+1)),parseFloat(n)}function comparePoints(e,t){return digifix(e.x)===digifix(t.x)&&digifix(e.y)===digifix(t.y)}function compareLines(e,t){return!!(comparePoints(e[0],t[0])&&comparePoints(e[1],t[1])||comparePoints(e[0],t[1])&&comparePoints(e[1],t[0]))}function checkEquivalence(e,t){let n=[];return n.push(e[0].x==t[0].x&&e[0].y==t[0].y&&e[1].x==t[1].x&&e[1].y==t[1].y),n.push(e[1].x==t[0].x&&e[1].y==t[0].y&&e[0].x==t[1].x&&e[0].y==t[1].y),!!n.includes(!0)}function cloneArrRecursive(e,t){if(void 0===t&&(t=[]),void 0===e||0===e.length)return t;if(Array.isArray(e)){let n=[];e.forEach((e=>{void 0===e||(Array.isArray(e)?n=cloneArrRecursive(e,n):n.push(pv(e.x,e.y,e.z)))})),t.push(n)}else t.push(pv(e.x,e.y,e.z));return t}function cloneArr(e){let t=countNestingLevels(e),n=[];if(1===t)return e.forEach((e=>{\"object\"==typeof e&&n.push(pv(e.x,e.y,e.z))})),n;if(2===t){let t=[];return e.forEach((e=>{let n=[];e.forEach((e=>{\"object\"==typeof e&&n.push(pv(e.x,e.y,e.z))})),t.push(n)})),t}if(3===t){let t=[];return e.forEach((e=>{let n=[];e.forEach((e=>{let t=[];e.forEach((e=>{\"object\"==typeof e&&t.push(pv(e.x,e.y,e.z))})),n.push(t)})),t.push(n)})),t}if(4===t){let t=[];return e.forEach((e=>{let n=[];e.forEach((e=>{e.forEach((e=>{let t=[];e.forEach((e=>{\"object\"==typeof e&&t.push(pv(e.x,e.y,e.z))})),n.push(t)}))})),t.push(n)})),t}}function extractEdges(e){let t=[];e.forEach((e=>{t.push([e[0],e[1]]),t.push([e[1],e[2]]),t.push([e[2],e[0]])}));for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++)if(e!==n){1==compareLines(t[e],t[n])&&(t[e].push(\"inside\"),t[n].push(\"inside\"))}return t.filter((e=>!e.includes(\"inside\")))}function makeIslands(e,{netEdgeCount:t}={}){if(0===e.length)return[];let n=extractEdges(e),i=n[0],s=n[0];s.push(999);let r=n[0][1],a=[],o=[n[0][0]],h=900;for(;h>0;){let e=n.filter((e=>!e.includes(999))).find((e=>{let t=[];return t.push(comparePoints(e[0],r)),t.push(comparePoints(e[1],r)),!(!t.includes(!0)||compareLines(s,e))}));if(void 0!==e&&(comparePoints(e[0],r)?(o.push(r),r=e[1],s=e,e.push(999)):(o.push(r),r=e[0],s=e,e.push(999)),comparePoints(r,i[0]))){a.push(o),i=void 0;let e=n.filter((e=>!e.includes(999)));if(i=e[floor(R.next(0,e.length))],null==i)break;s=i,s.push(999),r=i[1],o=[i[0]]}h--}if(void 0!==t){let e;a.forEach(((n,i)=>{t===n.length&&(e=i,globalHatchFlag=!0)})),void 0!==e&&(a.unshift(a[e]),a.splice(e+1,1))}return a}function countNestingLevels(e,t=0){return\"object\"==typeof e&&Array.isArray(e)&&null!==e?(t++,t=countNestingLevels(e[0],t)):(t<=0&&(t=0),t)}function getArrSubset(e){if(0===e.length||\"undefined\"===e)return[];let t=countNestingLevels(e),n=cloneArrRecursive(e)[0];t=countNestingLevels(n);let i=[];if(2===t){R.next()>.5?softShuffle(n):R.next()>.5&&shuffleArr(n);let e=R.next(0,n.length\/2,!0),s=R.next(e,n.length,!0);return i=s-e<=0?n:n.slice(e,s),t=countNestingLevels(i),i}if(3===t)n.forEach((e=>{let t=[];e.forEach((e=>{t.push(e)})),R.next()>.5?softShuffle(t):R.next()>.5&&shuffleArr(t);let n=R.next(0,t.length\/2,!0),s=R.next(n,t.length,!0);t=s-n<=0?t:t.slice(n,s),i.push(t)}));else if(4===t){n.forEach((e=>{if(e.forEach((e=>{let t=[];if(e.forEach((e=>{t.push(e)})),R.next()>.9){R.next()>.5?softShuffle(t):R.next()>.5&&shuffleArr(t);let e=R.next(0,t.length\/2,!0),n=R.next(e,t.length,!0);t=n-e<=0?t:t.slice(e,n)}i.push(t)})),R.next()>.5){R.next()>.5?softShuffle(i):R.next()>.5&&shuffleArr(i);let e=R.next(0,i.length\/2,!0),t=R.next(e,i.length,!0);i=t-e<=0?i:i.slice(e,t)}}))}return t=countNestingLevels(i),i}function drawEveryArrSketchy(e){e.forEach((e=>{if(\"object\"==typeof e[0]&&Array.isArray(e[0])&&null!==e[0])drawEveryArrSketchy(e);else if(\"object\"==typeof e[0]&&!Array.isArray(e[0]))for(let t=0;t<4;t++){let t=cloneArrRecursive(e)[0];addPointsToShapeEvenly(t,10),wobble(t),sketchyBetter(t,{weight:2,scrawl:1,span:.03}).forEach((e=>{drawArr(e)}))}}))}function sketchyBetter(e,{styleType:t=0,weight:n,scrawl:i,span:s,scrawlNoise:r}={}){let a=[];if(!(void 0===e||e.length<=1)){n=n,i=i,s=_map(s=splineDist(e)*s,0,splineDist(e),0,1);for(let t=0;t<1;t+=s){if(t-s\/2<=0||t+s\/2>=1)continue;let r,o,h;r=findPointAlongSpline(e,t-s\/2),o=findPointAlongSpline(e,t),h=findPointAlongSpline(e,t+s\/2);let l=quickDist(r,h)\/R.next(1,2);if(t+s<1){let e=findNormal3Pt(r,o,h),t=pointFrom(o,e+90+R.next(-0,0),l\/2+R.next(2*l)),s=pointFrom(o,e-90+R.next(-0,0),l\/2+R.next(2*l)),p=R.next(-n,n)*randomGaussian()*.4,c=pointFrom(t,e,p+R.next(-i,0)*l),u=pointFrom(s,e,p+R.next(-0,i)*l);a.push([c,u])}}return a=a.filter((e=>void 0!==e)),a}}function wobble(e,{dist:t=10,dirs:n=[1,1]}={}){if(void 0===e||0===e.length)return;addPointsToShapeEvenly(e,10);let i=new Noise1D({float:\"up\",smoothCycles:20,lineLen:1e3});for(let s=0;s<e.length;s++)e[s].set(e[s].x+t\/2*i.getNext()*n[0],e[s].y+t\/2*i.getNext()*n[1])}function pencilLine(e,{thickness:t=2,pressure:n=1,density:i=2,dotSize:s=2}={}){if(void 0===e)return;let r=new Noise1D({amp:t,smoothCycles:100,float:\"down\",stringLength:1e4}),a=splineDist(e);for(let t=0;t<1;t+=i\/a)for(let o=0;o<n;o++){let n=findPointAlongSpline(e,t+R.next(-i\/a,i\/a)),o=pointPerp(n,findPointAlongSpline(e,t+.001)),h=r.getNext(),l=pointFrom(n,o,R.next(-h,h));circle(l.x*canvasData.scalar,l.y*canvasData.scalar,R.next(s\/2,s)*canvasData.scalar)}}function createTriangleLayer(e,t){if(0===e.length)return[];let n=[];return e.forEach((e=>{n.push(offsetTriangle(e,\"random\"===t.triangleOffset?R.next():t.triangleOffset))})),n}function createDynamicGrids(e,t){if(0===e.length)return[];let n=[];return e.forEach((i=>{let s=dynamicGrid(i,{type:t.type,horizontals:t.gridHorizontals,verticals:t.gridVerticals,rotation:t.gridRotation,warpZoom:t.gridWarpZoom,warpStrength:t.gridWarpStrength,lineShift:t.gridLineShift,exclude:!0===t.useFlag&&!0===globalHatchFlag?e.slice(1):[]});s.length>0&&n.push(s)})),n}function dynamicGrid(e,{type:t=\"boxes\",horizontals:n=20,verticals:i=20,rotation:s=0,warpZoom:r=4,warpStrength:a=80,lineShift:o=0,exclude:h=[]}={}){let l=getBB(e),p=2*quickDist(l.mp,l.p2),c=[pv(l.mp.x-p,l.mp.y-p),pv(l.mp.x+p,l.mp.y-p),pv(l.mp.x+p,l.mp.y+p),pv(l.mp.x-p,l.mp.y+p)],u=[];for(let e=c[0].y;e<=c[2].y;e+=n)u.push([pv(c[0].x,e),pv(c[1].x,e)]);u.forEach((e=>{o>0&&translateArr(e,pv(0,0),pv(R.next(0,o),0)),s>0&&rotateShape(e,l.mp,s),i>0&&addPointsToShapeEvenly(e,i)}));for(let e=0;e<u.length;e++)for(let t=0;t<u[e].length;t++){let n=_map(noisy.perlin2(e\/u.length*r,t\/u[e].length*r),-1,1,-180,180),i=pointFrom(u[e][t],n,a);u[e][t]=i}let g=[];for(let e=0;e<u.length-1;e++){let t=u[e].map((e=>pv(e.x,e.y))),n=u[e+1].map((e=>pv(e.x,e.y)));for(let e=0;e<t.length-1;e++)g.push([t[e],t[e+1],n[e+1],n[e]])}if(g=g.filter((t=>{let n=0;if(t.forEach((t=>{if(void 0===t)return!1;pointInsideShape(t,e)&&n++,h.forEach((e=>{pointInsideShape(t,e)&&n--}))})),4===n)return!0})),\"boxes\"===t)return g;if(g.length<1)return[];let d=[],m=[g[0][0]],f=[g[0][3]];for(let e=0;e<g.length-1;e++)if(comparePoints(g[e][1],g[e+1][0])&&comparePoints(g[e][2],g[e+1][3]))m.push(g[e][1]),f.push(g[e][2]);else{m.push(g[e][1]),f.push(g[e][2]),f.reverse();let t=[];t.push(...m),t.push(...f);let n=[];for(let e=0;e<t.length-1;e++)n.push([t[e],t[e+1]]);d.push(t),m=[],f=[]}return\"rows\"===t?d:void 0}function getFittedShape(e){let t=[];for(let n=0;n<e.length;n++)t.push(pv(e[n].x,e[n].y)),t.push(pv((e[n].x+e[(n+1)%e.length].x)\/2,(e[n].y+e[(n+1)%e.length].y)\/2));return t.push(t[0]),soften(t,{start:-1,end:1}),addPointsToShapeEvenly(t,3),soften(t,{loops:1,end:1}),t}function fittedShapes(e){if(0===e.length)return[];if(nestingCount=countNestingLevels(e),2===nestingCount){let t=[];return e.forEach((e=>{let n=getFittedShape(e);t.push(...n)})),t}if(3===nestingCount){let t=[];return e.forEach((e=>{let n=[];e.forEach((e=>{n.push(getFittedShape(e))})),t.push(n)})),t}}function createTrianglesHatchLayer(e,t,n){if(0===e.length)return[];let i=[],s=countNestingLevels(e);return 2===s?e.forEach((e=>{let t,s=R.next(0,6,!0);n>5||(s=n),0===s?t=quickHatch(e):1===s?t=fillShapeWithDashes(e):2===s?t=triangleHatchStripes(e):3===s?t=triangleHatchInscribedCircle(e):4===s?t=triangeHatchShortenPoint(e):5===s&&(t=triangleHatchConcentric(e)),t.length>0&&i.push(t)})):3===s&&e.forEach((e=>{let t=[];e.forEach((n=>{let i;i=betterScribbleHatch(e),i.length>0&&t.push(i)})),t.length>0&&i.push(t)})),!0===t.useFlag?i[0]:i}function createHatchLayer(e,t){if(0===e.length)return[];let n=countNestingLevels(e),i=[];return 2===n?e.forEach((n=>{let s;if(s=\"quickHatch\"===t.hatchStyle?quickHatch(n,{density:t.hatchDensity,rotationAmount:\"random\"===t.hatchRotationAmount?R.next(0,360):t.hatchRotationAmount,modZoom:t.hatchModZoom,modStrength:t.hatchModStrength,exclude:!0===t.useFlag&&!0===globalHatchFlag?e.slice(1):[]}):(t.hatchStyle,betterScribbleHatch(n)),s.length>0)if(splineDist(s)>1800){let e=[];for(let t=0;t<s.length;t+=3)e.push(s.slice(t,t+3));e.forEach((e=>{i.push(e)}))}else i.push(s)})):3===n&&e.forEach((n=>{let s=[];n.forEach((i=>{let r;if(r=\"quickHatch\"===t.hatchStyle?quickHatch(i,{density:t.hatchDensity,rotationAmount:\"random\"===t.hatchRotationAmount?R.next(0,360):t.hatchRotationAmount,modZoom:t.hatchModZoom,modStrength:t.hatchModStrength,exclude:!0===t.useFlag&&!0===globalHatchFlag?e.slice(1):[]}):\"scribbleHatch\"===t.hatchStyle?betterScribbleHatch(i):betterScribbleHatch(n),r.length>0)if(splineDist(r)>1800){let e=[];for(let t=0;t<r.length;t+=3)e.push(r.slice(t,t+3));e.forEach((e=>{s.push(e)}))}else s.push(r)})),i.push(s)})),!0===t.useFlag?i[0]:i}function createOutlinePersonsLayer(e){let t=[];for(let n=0;n<e.length;n++)t.push(outlinePerson(e[n],eachPersonData[n].inflationAmount));return t}function outlinePerson(e,t=10){let n=[];for(let i=0;i<e.length;i++)1===i?n.push(hatchSpiralCircle(getBB(e[i]).mp,getBB(e[i]).width\/2,t)):n.push(outlineLimb(e[i],t*R.next(.5,.75)));return n}function createScrawlLayer(e,t=!1){let n=countNestingLevels(e);if(4===n){let t=[];return e.forEach((e=>{t.push(createScrawlLayer(e))})),t.flat().flat()}if(3===n){let n=[];return e.forEach(((e,i)=>{let s=[];e.forEach((e=>{s.push(scrawlShape(e,t,i))})),n.push(s)})),n}if(2===n){let t=[];return e.forEach((e=>{t.push(scrawlShape(e))})),t}if(1===n)return scrawlShape(e)}function scrawlShape(e,t=!1,n){return sketchyBetter(e,{scrawl:10,maxLength:!0===t?.005*eachPersonData[n].figureHeight:5})}function createHatchPersonLayer(e,t=!1){let n=R.next()>.05?\"consistent\":\"random\",i=[\"scratchy\"],s=i[R.next(0,i.length,!0)];!1!==t&&(n=\"consistent\",s=t);let r=[];return e.forEach(((e,t)=>{\"random\"===n&&(s=i[R.next(0,i.length,!0)]),r.push(hatchPerson(e,eachPersonData[t].inflationAmount,s,eachPersonData[t].figureHeight))})),r}function hatchPerson(e,t,n,i){let s,r=[];noFill(),\"sketchy\"===n&&(s=R.next(4,6,!0));for(let i=0;i<e.length;i++){R.next(2,7,!0);if(1===i){let s=getBB(e[i]);\"vibrant\"===n&&(r.push(cureHatch(e[i],2*t)),r.push(cureHatch(createPointCircle(s.mp,s.width\/4,s.width\/4,10,!0),2*t))),\"scratchy\"===n&&r.push(hatchFillCircle(s.mp,s.height,t)),\"sketchy\"===n&&r.push(hatchFillCircle(s.mp,s.height,t,!1)),\"bouncy\"===n&&r.push(hatchFillCircle(s.mp,s.height,t,!1)),\"niceAndClean\"===n&&r.push(quickHatch(createPointCircle(s.mp,s.height\/2+t\/2,s.height\/2+t\/2,10,!0),{density:1,rotationAmount:R.next(360),modZoom:0,modStrength:0}))}else\"vibrant\"===n&&r.push(cureHatch(e[i],2*t)),\"scratchy\"===n&&r.push(shotgunHatchAlongLine(e[i],2*t)),\"sketchy\"===n&&r.push(betterHatchLimb(e[i],2*t,6)),\"bouncy\"===n&&r.push(bounceHatch(e[i],2*t)),\"niceAndClean\"===n&&r.push(quickHatch(easyInflate(e[i],{dist:2*t}),{density:1,rotationAmount:R.next(360),modZoom:0,modStrength:0}))}return r}function jitterPts(e,t=.2){let n=new Noise1D({float:\"up\",smoothCycles:10,length:1e3}),i=new Noise1D,s=getBB(e);return jitterAmt=min(s.width,s.height)*t,e.forEach(((t,s)=>{let r=pointFrom(t,360*n.getNext(),jitterAmt*i.getNext());e[s].set(r.x,r.y)})),e}function quickHatch(e,{density:t=10,rotationAmount:n=45,modZoom:i=10,modStrength:s=10,exclude:r=[]}={}){let a=getBB(e),o=quickDist(a.mp,a.p2),h=[pv(a.mp.x-o,a.mp.y-o),pv(a.mp.x+o,a.mp.y-o),pv(a.mp.x+o,a.mp.y+o),pv(a.mp.x-o,a.mp.y+o)],l=[];for(let e=h[0].y;e<=h[2].y;e+=t)l.push([pv(h[0].x,e+R.next(-t\/2,t\/2)),pv(h[1].x,e+R.next(-t\/2,t\/2))]);l.forEach((e=>{rAmt=n,\"random\"===n&&(rAmt=R.next(0,360)),rotateShape(e,a.mp,rAmt)}));let p=[];return l.forEach((t=>{let n=lineIntersectsCurveBetter(t,e,{closed:!0});if(r.length>0&&!1!==n&&r.forEach((e=>{let i=lineIntersectsCurveBetter(t,e,{closed:!0});(i.length%2==0||!1!==i)&&i.length>1&&n.push(...i)})),(n.length%2==0||!1!==n)&&n.length>1){n.sort(((e,n)=>quickDist(t[0],e)-quickDist(t[0],n)));for(let e=0;e<n.length;e+=2){let t=[n[e],n[e+1]];void 0!==t&&p.push(t)}}})),hatchMod(p,{strength:10}),p.forEach((e=>{jitterPts(e,.05)})),p}function hatchMod(e,{strength:t=10}={}){let n=R.next(0,20);for(let i=0;i<e.length;i++)if(!e[i].includes(void 0)&&void 0!==e[i]){addPointsToShapeEvenly(e[i],10);for(let s=e[i].length-1;s>=0;s--){let r=noisy.perlin2(i\/e.length*n,s\/e[i].length*n);e[i][s].set(e[i][s].x+r*t,e[i][s].y)}}}function bounceHatch(e,t){let n=1\/splineDist(e),i=[];for(let s=0;s<1;s+=n){let n=findPointAlongSpline(e,s),r=t\/2;pointFrom(n,n.ang+90,r),i.push([pointFrom(n,n.ang+90,r),pointFrom(n,n.ang+90+180,r)])}return i}function betterScribbleHatch(e){let t=getBB(e),n=t.width*t.height,i=new QuadTree(t),s=100,r=0,a=_map(n,0,12e4,10,10),o=_map(n,0,12e4,0,1);for(;s>0&&r<5001;){let t=findPointInShape(e,{tries:1e3});!0===i.packPoint(t,{dia:a,minDia:a+2*o,padding:o})?r++:s--}let h=i.getAllPoints();if(h.length<=0||void 0===h)return[];shuffleArr(h);let l=[];for(let t=0;t<h.length-1;t++)lineIntersectsCurveBetter([h[t],h[t+1]],e,{closed:!0}),l.push([h[t],h[t+1]]);return l.forEach((e=>{jitterPts(e,.05)})),shuffleArr(l),hatchMod(l,{strength:50*rigidness*rigidness}),l}function betterHatchLimb(e,t,n){let i=[],s=[],r=splineDist(e),a=n,o=_map(a,0,r,0,1);for(let n=digifix(o\/2);n<=digifix(1-o\/2);n+=digifix(o)){let r=[],a=findPointAlongSpline(e,n);i.push(pointFrom(a,a.ang+90,t\/2*R.next(.9,1.1))),i[i.length-1].ang=a.ang,i.push(pointFrom(a,a.ang+90+180,t\/2*R.next(.9,1.1))),i[i.length-1].ang=a.ang,r.push(i[i.length-2],i[i.length-1]),s.push(r)}let h=[];return s.forEach((e=>{let t=R.next(1,2)\/quickDist(e[0],e[1]);for(let n=0;n<1;n+=t){let t=findPointAlongSpline(e,n),i=[],s=a\/1.5,r=pointFrom(t,e[0].ang+R.gaussian(0,2),s);i.push(r),r=pointFrom(t,e[0].ang+180+R.gaussian(0,2),s),i.push(r),jitterPts(i,.15),h.push(i)}})),h}function hatchSpiralCircle(e,t,n){let i=360*t*.1,s=_map(t+n,0,t,0,1),r=new Noise1D({amp:1,float:\"up\",smoothCycles:1500,stringLength:1e3}),a=new Noise1D({amp:1,float:\"up\",smoothCycles:500,stringLength:1e3}),o=[];i<360&&(i=360);for(let n=0;n<i;n+=10){let h=sin(radians(n)*a.getNext())*t*.01,l=cos(radians(n)*a.getNext())*t*.01,p=_map(n,0,i,s,.99)*_map(easingFunction(r.getNext(),13),0,1,.8,.99),c=pv(h+e.x+sin(radians(n))*t*p*.9,l+e.y+cos(radians(n))*t*p);o.push(c)}return rotateShape(o,e,R.next(0,360)),soften(o,{loops:1,start:1,end:-1}),o}function hatchFillCircle(e,t,n,i=!0){let s=createPointCircle(e,t\/2+n\/2,t\/2+n\/2,10,!0);s=quickHatch(s,{density:10,rotationAmount:R.next(0,360),modZoom:0,modStrength:0}).flat();for(let t=0;t<3;t++){rotateShape(s.filter((e=>R.next()>.5)),e,R.gaussian(0,10))}return!0===i&&jitterPts(s,R.gaussian(.1,.02)),s=splitLongLines(s),s}function splitLongLines(e,t=6){let n=[];if(e.length>t)for(let i=0;i<e.length;i+=t)i+t>=e.length-1?n.push(e.slice(i,e.length)):n.push(e.slice(i,i+t+1));else n.push(e);return n}function outlineLimb(e,t){let n,i=splineDist(e),s=(new Noise1D({amp:1,float:\"axis\",smoothCycles:.01*i,stringLength:i}),[]),r=(pointPerp(e[0],e[1]),.4*t);r<1&&(r=1);for(let a=0;a<r;a++){for(let r=0;r<e.length;r++){i=r===e.length-1?quickDist(e[r],e[r-1]):quickDist(e[r],e[r+1]);for(let a=R.next(0,.1);a<=R.next(.9,1);a+=R.next(10\/i,40\/i))n=0===r?findPointAlongSpline([e[r],e[r+1]],a):(e.length,findPointAlongSpline([e[r-1],e[r]],a)),s.push(pointFrom(n,n.ang+90,t+R.next(-2,2)))}e.reverse()}return s}function cureHatch(e,t){let n=3\/splineDist(e),i=[];for(let s=0;s<=1;s+=n)for(let n=0;n<5;n++){let n=findPointAlongSpline(e,s),r=Math.max(Math.min(R.gaussian(0,t\/4),t),-t);leaderPt=pointFrom(n,n.ang+90,r);let a=pointFrom(leaderPt,n.ang+180,_map(abs(r),0,t\/2,t\/4,1)),o=pointFrom(leaderPt,n.ang,_map(abs(r),0,t\/2,t\/4,1));i.push([a,o])}return i}function shotgunHatchAlongLine(e,t){let n=10\/splineDist(e),i=[];for(let s=0;s<=1;s+=n)for(let n=0;n<.05*t;n++){let n=findPointAlongSpline(e,s);n=pointFrom(n,n.ang+90,R.gaussian(0,t\/R.next(4,8,!0))),i.push(n)}for(let n=0;n<.05*t;n++){let n=findPointAlongSpline(e,1);n=pointFrom(n,n.ang+90,R.gaussian(0,t\/8)),i.push(n)}return shuffleArr(i),i=splitLongLines(i),i}function shotgunHatch(e){let t=getBB(e),n=.01*(t.width*t.height),i=[];for(let t=0;t<n;t++)i.push(findPointInShape(e));return i=splitLongLines(i),i}function makeStar(e,t){let n=[];for(let i=0,s=0;i<=360;i+=36,s++)s%2==0?n.push(pv(e.x+sin(radians(i))*(t\/2),e.y+cos(radians(i))*(t\/2))):n.push(pv(e.x+sin(radians(i))*(t\/4),e.y+cos(radians(i))*(t\/4)));return n.push(pv(n[0].x,n[0].y)),rotateShape(n,e,180),n}function makeSpiral(e,t){let n=[],i=360*R.next(3,10,!0);for(let s=0;s<i;s+=10){let r=pv(e.x+sin(radians(s))*_map(s,0,i,0,t\/2),e.y+cos(radians(s))*_map(s,0,i,0,t\/2));n.push(r)}return rotateShape(n,e,R.next(0,360)),n}function makeScribble(e,t){let n=[];for(let i=0;i<=30;i++){let i=R.next(0,360),s=pv(e.x+sin(radians(i))*R.next(0,t\/2),e.y+cos(radians(i))*R.next(0,t\/2));n.push(s)}return shuffleArr(n),rotateShape(n,e,R.next(0,360)),n}function makeHeart(e){let t=[],n=pv(0,0),i=R.next(1.3,1.5),s=R.next(1.2,1.8);for(let e=0;e<180;e+=1){let r=n.x+sin(radians(e+180))*easingFunction(_map(e,0,180,0,i),13)*180,a=n.y+cos(radians(e+180))*easingFunction(_map(e,0,180,0,s),13)*180;isNaN(r)||isNaN(a)||t.push(pv(r,a))}soften(t,{start:1,end:-1,loops:380});let r=findAngleBetween(pointAng(t[1],t[t.length-1]),0);rotateShape(t,t[0],r);let a=getBB(t);translateArr(t,a.p2,e.mp),t.shift();let o=cloneArr(t);scaleArrAxis(o,e.mp,-1,\"x\"),t.push(...o.reverse()),a=getBB(t),translateArr(t,a.mp,e.mp);let h=getScalar(a.p1,a.p2,e.p1,e.p2),l=getScalar(a.p2,a.p3,e.p2,e.p3);return scaleArrAxis(t,e.mp,h,\"x\"),scaleArrAxis(t,e.mp,l,\"y\"),eachHeartData.push({pos:e.mp}),t=refitPointsToLine(t),t}function makeRays(e){let t=[];for(let n=0;n<360;n+=30){let i=[];i.push(pv(0+sin(radians(n))*e.width\/1.5*R.next(.8,1),0+cos(radians(n))*e.width\/1.5*R.next(.8,1))),i.push(pv(0+sin(radians(n))*R.gaussian(e.width,10),0+cos(radians(n))*R.gaussian(e.width,10))),jitterPts(i,.1),t.push(i)}return t}function fillShapeWithDashes(e){let t=getBB(e),n=t.width*t.height,i=new QuadTree(t),s=100,r=0,a=R.next(5,30),o=_map(n,0,12e4,0,1);for(;s>0&&r<5001;){let t=findPointInShape(e,{tries:1e3});!0===i.packPoint(t,{dia:a,minDia:a+2*o,padding:o})?r++:s--}let h=i.getAllPoints();if(h.length<=0||void 0===h)return[];let l=[],p=R.next(0,360,!0);return h.forEach((e=>{l.push([pointFrom(e,p,e.dia\/2),pointFrom(e,p+180,e.dia\/2)])})),l}function triangleHatchStripes(e){return quickHatch(e,{density:10})}function triangleHatchConcentric(e){let t=[];for(let n=0;n<5;n++)t.push(offsetTriangle(e,_map(n,0,5,.1,.9))),t[t.length-1].push(t[t.length-1][0]);return t}function triangleHatchInscribedCircle(e){let t=triangleCenter(e),n=splineDist(perpLineFromPt(t,[e[0],e[1]])),i=[];for(let e=n;e>0;e-=n\/4)i.push(createPointCircle(t,e,e,10,!0));return i}function triangeHatchShortenPoint(e){let t=[],n=R.next(0,e.length,!0);for(let i=.5;i>=0;i-=.1){let s=findPointAlongSpline([e[n],e[(n+1)%e.length]],i),r=findPointAlongSpline([e[n],e[(n-1+e.length)%e.length]],i);.5===i?t.push([s,r,e[n],s]):t.push([s,r])}return t}class RectSub{constructor(e=getCanvasAsBB(),{padding:t=0,loops:n=32}={}){this.rects=[];let i=[];i.push(pv(e.p1.x+t,e.p1.y+t)),i.push(pv(e.p2.x-t,e.p2.y+t)),i.push(pv(e.p3.x-t,e.p3.y-t)),i.push(pv(e.p4.x+t,e.p4.y-t)),this.rects.push(i);for(let e=0;e<n-1;e++){let e=R.next(0,this.rects.length,!0),t=this.splitBox(this.rects[e]);this.rects.splice(e,1),this.rects.push(...t)}return this.rects.forEach(((e,t)=>{this.rects[t]=contour(e,5)})),this.rects}splitBox(e){let t=[],n=[];if(this.isLandscape(e)){let i=e[0].x+(e[1].x-e[0].x)*R.next(.2,.8);e.splice(1,0,pv(i,e[0].y)),e.splice(4,0,pv(i,e[3].y)),t.push(...e.slice(0,2)),t.push(...e.slice(4,6)),n.push(...e.slice(1,5))}else{let i=e[1].y+(e[2].y-e[1].y)*R.next(.2,.8);e.splice(2,0,pv(e[1].x,i)),e.push(pv(e[0].x,i)),t.push(...e.slice(0,3)),t.push(e[5]),n.push(e[5]),n.push(...e.slice(2,5))}return[t,n]}isLandscape(e){let t=this.getWidthHeight(e);return t[0]>t[1]}getWidthHeight(e){return[e[1].x-e[0].x,e[2].y-e[1].y]}}class QuadTree{constructor(e){this.capacity=8,this.boundary=[e.p1,e.p2,e.p3,e.p4],this.bounds=e,this.divided=!1,this.children=[],this.points=[],this.colors=[],this.pointSize=[]}subdivide(){this.topleft=new QuadTree(getBB([this.bounds.p1,pv(this.bounds.p1.x+this.bounds.width\/2,this.bounds.p1.y),pv(this.bounds.p1.x+this.bounds.width\/2,this.bounds.p1.y+this.bounds.height\/2),pv(this.bounds.p1.x,this.bounds.p1.y+this.bounds.height\/2)])),this.children.push(this.topleft),this.topright=new QuadTree(getBB([this.topleft.bounds.p2,this.bounds.p2,pv(this.bounds.p2.x,this.bounds.p2.y+this.bounds.height\/2),this.topleft.bounds.p3])),this.children.push(this.topright),this.bottomright=new QuadTree(getBB([this.topright.bounds.p4,this.topright.bounds.p3,this.bounds.p3,pv(this.bounds.p3.x-this.bounds.width\/2,this.bounds.p3.y)])),this.children.push(this.bottomright),this.bottomleft=new QuadTree(getBB([this.topleft.bounds.p4,this.topleft.bounds.p3,this.bottomright.bounds.p4,this.bounds.p4])),this.children.push(this.bottomleft)}drawTree(){beginShape();for(let e in this.bounds)vertex(this.bounds[e].x,this.bounds[e].y);if(endShape(CLOSE),1==this.divided)for(let e in this.children)this.children[e].drawTree()}drawBounds(){beginShape();for(let e in this.bounds)vertex(this.bounds[e].x,this.bounds[e].y);endShape(CLOSE)}packPoint(e,{col:t=[0,0,0],dia:n=3,padding:i=0,minDia:s=3,edgeAware:r=!1}={}){if(!this.pointInBounds(e,{dia:!0===r?n:0}))return!1;e.dia=n,e.col=t;let a=makeBBofPoint(e,2*s),o=this.queryPointsInTreeByBB(a),h=!1;e:for(let t=0;t<o.length;t++)if(dist(e.x,e.y,o[t].x,o[t].y)<e.dia\/2+o[t].dia\/2+i){return h=!0,!1;break e}return h||this.insertPoint(e,{col:t,dia:n}),!0}packPointGroup(e,{col:t=[0,0,0],padding:n=0,minDia:i=3,testOnly:s=!1,edgeAware:r=!1}={}){let a=[];for(let t=0;t<e.length;t++)if(!this.pointInBounds(e[t],{dia:!0===r?dia:0}))return!1;e.forEach((e=>{a.push(makeBBofPoint(e,2*i))}));let o=combineBB(a),h=this.queryPointsInTreeByBB(o),l=!1;e:for(let t=0;t<h.length;t++)for(let i=0;i<e.length;i++)if(dist(e[i].x,e[i].y,h[t].x,h[t].y)<e[i].dia\/2+h[t].dia\/2+n){l=!0;break e}return!l&&(!1===s&&e.forEach((e=>{this.insertPoint(e,{col:e.col,dia:e.dia})})),!0)}findRandomPointWithinBounds(e){let t=100;for(;t>0;){let n=pv(R.next(this.bounds.p1.x,this.bounds.p2.x),R.next(this.bounds.p2.y,this.bounds.p3.y));if(this.testPointForAvailability(n,e))return n.dia=e,n;t--}return!1}testPointForAvailability(e,t){if(!this.pointInBounds(e,{dia:t}))return!1;e.dia=t;let n=makeBBofPoint(e,2*t),i=this.queryPointsInTreeByBB(n),s=!1;for(let t=0;t<i.length;t++)if(dist(e.x,e.y,i[t].x,i[t].y)<e.dia\/2+i[t].dia\/2)return s=!0,!1;return!0}queryNearbyPoints(e,t){let n=makeBBofPoint(e,t);return this.queryPointsInTreeByBB(n)}insertPoint(e,{col:t=[0,0,0],dia:n=3}={}){if(this.pointInBounds(e))if(this.points.length<this.capacity)e.dia=n,e.col=t,this.points.push(e);else{this.divided||(this.subdivide(),this.divided=!0);for(let i=0;i<this.children.length;i++)this.children[i].insertPoint(e,{col:t,dia:n})}}getAllPoints(e){e||(e=[]);for(let t=0;t<this.points.length;t++)e.push(this.points[t]);if(1==this.divided)for(let t in this.children)this.children[t].getAllPoints(e);return e}pointInBounds(e,{dia:t=0}={}){return e.x-t\/2>this.bounds.p1.x&&e.x+t\/2<this.bounds.p2.x&&e.y-t\/2>this.bounds.p2.y&&e.y+t\/2<this.bounds.p3.y}queryPointsInTreeByBB(e,t){if(t||(t=[]),0==bbOverlap(e,this.bounds))return t;if(1==this.divided){for(let n=0;n<this.points.length;n++)bbContainsPoint(e,this.points[n])&&t.push(this.points[n]);for(let n=0;n<this.children.length;n++)if(bbOverlap(e,this.children[n].bounds))if(1==this.children[n].divided)this.children[n].queryPointsInTreeByBB(e,t);else for(let i=0;i<this.children[n].points.length;i++)bbContainsPoint(e,this.children[n].points[i])&&t.push(this.children[n].points[i])}else for(let e=0;e<this.points.length;e++)t.push(this.points[e]);return t}}function bbOverlap(e,t){return e.p1.x<t.p2.x&&e.p2.x>t.p1.x&&e.p1.y<t.p4.y&&e.p4.y>t.p1.y}function bbContainsPoint(e,t){return t.x>=e.p1.x&&t.x<=e.p2.x&&t.y>=e.p2.y&&t.y<=e.p3.y}function fillShapeWithPoints(e,t=3){let n=[],i=getBB(e);stroke(0),strokeWeight(1),noFill();for(let s=i.p1.y+t;s<i.p4.y;s+=t\/2){let r=lineIntersectsCurveBetter([pv(i.p1.x-i.width\/2,s),pv(i.p2.x+i.width\/2,s)],e);if(sortPointList(r),2===r.length)for(let e=r[0].x+t;e<r[1].x;e+=t)n.push(pv(e,r[0].y)),n[n.length-1].dia=t}return n}function circlePack(e,{maxDots:t=1e3,maxTries:n=1e3,dotDia:i=220,dotPadding:s=0}={}){let r=new QuadTree(e),a=t,o=n,h=0;for(;h<a&&o>0;){let t=pv(R.next(e.p1.x,e.p2.x),R.next(e.p1.y,e.p3.y));r.packPoint(t,{dia:i,minDia:2*i,padding:s,edgeAware:!0})&&(h++,o=n),o--}return r.getAllPoints()}function lineToCircles(e,t){let n=_map(t,0,splineDist(e),0,1),i=[];for(let s=digifix(n)\/2;s<=1-digifix(n)\/2;s+=digifix(n)){let n=findPointAlongSpline(e,s);n.dia=t,i.push(n)}return i}!function(e){function t(e,t){this.x=e,this.y=t}function n(e,t,n){this.v0=e,this.v1=t,this.v2=n,this.calcCircumcircle()}function i(e,t){this.v0=e,this.v1=t}n.prototype.calcCircumcircle=function(){var e,n,i=this.v1.x-this.v0.x,s=this.v1.y-this.v0.y,r=this.v2.x-this.v0.x,a=this.v2.y-this.v0.y,o=i*(this.v0.x+this.v1.x)+s*(this.v0.y+this.v1.y),h=r*(this.v0.x+this.v2.x)+a*(this.v0.y+this.v2.y),l=2*(i*(this.v2.y-this.v1.y)-s*(this.v2.x-this.v1.x));if(Math.abs(l)<1e-6){var p=Math.min(this.v0.x,this.v1.x,this.v2.x),c=Math.min(this.v0.y,this.v1.y,this.v2.y),u=Math.max(this.v0.x,this.v1.x,this.v2.x),g=Math.max(this.v0.y,this.v1.y,this.v2.y);this.center=new t((p+u)\/2,(c+g)\/2),e=this.center.x-p,n=this.center.y-c}else{var d=(a*o-s*h)\/l,m=(i*h-r*o)\/l;this.center=new t(d,m),e=this.center.x-this.v0.x,n=this.center.y-this.v0.y}this.radius_squared=e*e+n*n,this.radius=Math.sqrt(this.radius_squared)},n.prototype.inCircumcircle=function(e){var t=this.center.x-e.x,n=this.center.y-e.y;return t*t+n*n<=this.radius_squared},i.prototype.equals=function(e){return this.v0===e.v0&&this.v1===e.v1},i.prototype.inverse=function(){return new i(this.v1,this.v0)},e.Vertex=t,e.Triangle=n,e.Edge=i,e.triangulate=function(e){var s=[],r=function(e){var i,s,r,a;e.forEach((function(e){(void 0===i||e.x<i)&&(i=e.x),(void 0===s||e.y<s)&&(s=e.y),(void 0===r||e.x>r)&&(r=e.x),(void 0===a||e.y>a)&&(a=e.y)}));var o=10*(r-i),h=10*(a-s),l=new t(i-o,s-3*h),p=new t(i-o,a+h),c=new t(r+3*o,a+h);return new n(l,p,c)}(e);s.push(r),e.forEach((function(e){s=function(e,t){var s=[];return t=t.filter((function(t){return!t.inCircumcircle(e)||(s.push(new i(t.v0,t.v1)),s.push(new i(t.v1,t.v2)),s.push(new i(t.v2,t.v0)),!1)})),s=function(e){for(var t=[],n=0;n<e.length;++n){for(var i=e[n],s=!0,r=0;r<e.length;++r)if(n!==r){var a=e[r];if(i.equals(a)||i.inverse().equals(a)){s=!1;break}}s&&t.push(i)}return t}(s),s.forEach((function(i){t.push(new n(i.v0,i.v1,e))})),t}(e,s)})),s=s.filter((function(e){return!(e.v0==r.v0||e.v0==r.v1||e.v0==r.v2||e.v1==r.v0||e.v1==r.v1||e.v1==r.v2||e.v2==r.v0||e.v2==r.v1||e.v2==r.v2)}));let a=[];return s.forEach((e=>{a.push([pv(e.v0.x,e.v0.y),pv(e.v1.x,e.v1.y),pv(e.v2.x,e.v2.y)])})),a}}(self);class Noise1D{constructor({amp:e=1,float:t=\"up\",smoothCycles:n=1,stringLength:i=100}={}){this.amp=e,this.smoothCycles=n,this.index=0,this.spread=[],i<50&&(i=50);for(let e=0;e<i;e+=1){let t=R.next(0,1);this.spread.push(pv(e,t))}for(let e=0;e<this.smoothCycles;e++)for(let e=0;e<this.spread.length;e++)this.spread[e].set(e,(this.spread[(e-1+this.spread.length)%this.spread.length].y+this.spread[e].y+this.spread[(e+1)%this.spread.length].y)\/3);let s=this.spread.map((e=>e.y)),r=Math.min(...s),a=Math.max(...s),o=getBB(this.spread);translateArr(this.spread,pv(0,r),pv(0,0));let h=getScalar(pv(0,r),pv(0,a),pv(0,0),pv(0,this.amp));scaleArrAxis(this.spread,pv(0,0),h,\"y\"),o=getBB(this.spread),\"up\"==t?translateArr(this.spread,o.p4,pv(0,this.amp)):\"down\"==t?translateArr(this.spread,o.p1,pv(0,0)):\"center\"==t?translateArr(this.spread,pv(o.p1.x,o.mp.y),pv(0,this.amp\/2)):\"axis\"==t&&translateArr(this.spread,pv(o.p1.x,o.mp.y),pv(0,0))}getNext({constrained:e=!1}={}){return this.index++,this.index>this.spread.length-1&&(this.index=0),!0===e?constrain(this.spread[this.index].y,0,1):this.spread[this.index].y}}function exportSVG(e,t,n){let i=createWriter(\"svgfile\"+tokenData.tokenId+\".svg\");i.write(svgBeginDocument(e\/100,t\/100)),i.write(svgBeginGroup(\"MainLayer\")),n.forEach(((e,t)=>{i.write(svgCurve(e,\"noFill\",[0,0,0],1))})),i.write(svgEndGroup()),i.write(svgEndDocument()),i.close()}function svgBeginDocument(e,t){return'<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"'+e+'in\" height=\"'+t+'in\" viewBox=\"0 0 '+100*e+\" \"+100*t+'\" style=\"background-color:hsl(100, 0%, 100%);\" xmlns:inkscape=\"http:\/\/www.inkscape.org\/namespaces\/inkscape\" inkscape:version=\"1.1.1 (c3084ef, 2021-09-22)\">\\n'}function svgEndDocument(){return\"<\/svg>\"}function svgBeginGroup(e,t=\"noFill\",n=\"noStroke\",i=0,s=\"square\",r=\"miter\",a=\"inline\"){return'<g fill=\"'+svgParseColor(t)+'\" stroke=\"'+svgParseColor(n)+'\" display=\"'+a+'\" stroke-width=\"'+i+'\" stroke-linecap=\"'+s+'\" stroke-linejoin=\"'+r+'\" id=\"'+e+'\" inkscape:groupmode=\"layer\" inkscape:label=\"'+e+'\">\\n'}function svgEndGroup(){return\"<\/g>\\n\"}function svgCircle(e,t,n){return'<circle cx=\"'+e+'\" cy=\"'+t+'\" r=\"'+n+'\"\/>\\n'}function svgCurve(e,t=\"noFill\",n=\"noStroke\",i=0,s=\"square\"){path='<polyline points=\"';for(let t=0;t<e.length;t++)path+=e[t].x+\" \"+e[t].y+\" \";return t=\"noFill\"==t?\"\":'fill=\"'+svgParseColor(t)+'\" ',n=\"noStroke\"==n?\"\":'stroke=\"'+svgParseColor(n)+'\" ',i=0===i?\"\":'stroke-width=\"'+i+'\" ',s=\"square\"==s?\"\":'stroke-linecap=\"'+s+'\"',path+='\" '+t+n+i+s+\"\/>\\n\",path}function svgPolygon(e){path='<polygon points=\"';for(let t=0;t<e.length;t++)path+=e[t].x+\" \"+e[t].y+\" \";return path+='\"\/>\\n',path}function svgParseColor(e){return\"noFill\"==e||\"noStroke\"==e?\"none\":\"rgb(\"+e[0]+\",\"+e[1]+\",\"+e[2]+\")\"}function svgText(e,t,n,i){return tag='<text x=\"'+t+'\" y=\"'+n+'\" stroke=\"none\" font-family=\"sans-serif\" fill=\"rgb('+textColor+')\" text-anchor=\"'+i+'\" font-size=\"18\">'+e+\"<\/text>\\n\",tag}class COB{constructor({hue:e=R.next(0,360,!0),saturation:t=60,brightness:n=100,length:i=R.next(50,100),magentaFix:s=!0}={}){this.saturation=t,this.brightness=n,this.hue=e,this.sampleLength=i,this.paletteSize=100,this.defineColorCurves(),this.refreshColor({saturation:this.saturation,brightness:this.brightness,magentaFix:s}),this.refreshSampleLine({hue:this.hue,length:this.sampleLength})}generateBlank(){this.gb=createGraphics(360,100),this.gb.colorMode(HSB),this.gb.background(0,100,100),this.gb.pixelDensity(1),this.gb.strokeWeight(2)}defineColorCurves(){this.opacityCurve=[pv(0,100),pv(40,100),pv(40,20),pv(200,0),pv(200,100),pv(280,0),pv(320,0),pv(360,100),pv(360,100)],addPointsToShapeEvenly(this.opacityCurve,5),soften(this.opacityCurve,{loops:40})}refreshColor({saturation:e=this.saturation,brightness:t=this.brightness,magentaFix:n=!0}={}){this.generateBlank(),this.gb.strokeWeight(3),this.gb.background(0,83,41);for(let n=40;n<200;n++)this.gb.stroke(_map(n,40,200,60,190),e,(1-easingFunction(_map(n,40,200,.5,.2),12))*t),this.gb.line(n,0,n,100);for(let n=40;n<140;n++)this.gb.stroke(30,e,t-t\/4,_map(n,40,140,1,0)),this.gb.line(n,0,n,100);if(!0===n)for(let n=200;n<350;n++)this.gb.stroke(0,e\/2,t),this.gb.line(n,0,n,100);for(let n=0;n<360;n++){lineIntersectsCurveBetter([pv(n,-100),pv(n,200)],this.opacityCurve);this.gb.stroke(n,e,t,1),this.gb.line(n,0,n,100)}for(let e=0;e<50;e++)this.gb.stroke(0,0,100,easingFunction(_map(e,0,50,.9,0),3)),this.gb.line(0,e,360,e);for(let e=50;e<100;e++)this.gb.stroke(0,0,0,easingFunction(_map(e,50,100,0,.9),3)),this.gb.line(0,e,360,e);this.gb.image(this.gb,0,0),this.gb.loadPixels()}refreshSampleLine({hue:e=this.hue,length:t=this.sampleLength}={}){let n=pv(e=(e+360)%360,50),i=R.next(45,120);this.sampleLine=[],this.sampleLine.push(pointFrom(n,i,t)),this.sampleLine.push(n),i=R.next(45,120),this.sampleLine.push(pointFrom(n,(i+180)%360,t)),this.sampleLine.forEach(((e,t)=>{e.y>100&&this.sampleLine[t].set(e.x,99),e.y<0&&this.sampleLine[t].set(e.x,1)}))}getColorAt(e){let t=findPointAlongSpline(this.sampleLine,e);return this.getColor(t.x,t.y)}getColorCount(e){let t=[];for(let n=0;n<=e-1;n++){let i=this.getColorAt(_map(n,0,e,0,1));t.push(i)}return t}getColor(e,t){let n=1*(floor(t)*this.gb.width+floor(e))*4;return[this.gb.pixels[n],this.gb.pixels[n+1],this.gb.pixels[n+2],this.gb.pixels[n+3]]}}function makePunk(e){let t=[];[[0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,0],[0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0],[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0],[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0],[1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,1,0,0,0,1,1,1,1,1,0,1,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0]].forEach(((e,n)=>{e.forEach(((e,i)=>{0===e||t.push(makeRandomRect(pv(i,n),{sz:[1,1]}))}))}));let n=getBigBB(t),i=getBB(makeRandomRect(pv(0,0),{sz:[e,e]})),s=getScalar(n.p3,n.p2,i.p3,i.p2),r=R.next(-10,10);return t.forEach((e=>{scaleArr(e,n.mp,s),translateArr(e,n.mp,pv(0,0)),rotateShape(e,pv(0,0),r)})),t}function makeLaptop(e){let t=makeRandomRect(pv(0,0),{sz:[20,15],closed:!0}),n=cloneArrRecursive(t)[0];translateArr(n,pv(0,0),pv(0,15)),n[2].set(n[2].x+10,n[2].y-6),n[3].set(n[3].x+10,n[3].y-6);let i=[t,n];i.push([findPointAlongSpline([n[1],n[2]],.33),findPointAlongSpline([n[4],n[3]],.33)]),i.push([findPointAlongSpline([n[1],n[2]],.53),findPointAlongSpline([n[4],n[3]],.63)]),i.push([findPointAlongSpline([n[2],n[3]],.78),findPointAlongSpline([n[1],n[0]],.73)]),i.push([findPointAlongSpline([n[2],n[3]],.4),findPointAlongSpline([n[1],n[0]],.43)]),i.push([findPointAlongSpline([n[2],n[3]],.14),findPointAlongSpline([n[1],n[0]],.18)]),i.push(contour(i[0],3));let s=getBigBB(i),r=getBB(makeRandomRect(pv(0,0),{sz:[e,e]})),a=getScalar(s.p3,s.p2,r.p3,r.p2),o=R.next(-10,10),h=R.next()>.5;return i.forEach((e=>{translateArr(e,s.mp,pv(0,0)),scaleArr(e,pv(0,0),a),rotateShape(e,pv(0,0),o),h&&scaleArrAxis(e,pv(0,0),-1,\"x\")})),i}function makeCrown(e){let t=[];for(let e=-5,n=0;e<=25;e+=5,n++)t.push(pv(e,n%2==0?-10:-5));t.push(pv(25,-10),pv(20,5),pv(0,5),pv(0,5),pv(-5,-10));let n=getBB(t),i=getBB(makeRandomRect(pv(0,0),{sz:[e,e]})),s=getScalar(n.p3,n.p2,i.p3,i.p2),r=R.next(-10,10);return translateArr(t,n.mp,pv(0,0)),scaleArr(t,pv(0,0),s),rotateShape(t,pv(0,0),r),t}function makeLightbulb(e){let t=createPointCircle(pv(0,0),50,50,10,!0),n=[];for(let e=50;e<100;e+=10)n.push([pv(-25,e),pv(25,e)]);n.push([pv(-25,100),pv(0,105),pv(25,100)]);let i=[t,...n,makeSquiggle(40),...makeRays(getBB(makeRandomRect(pv(0,0),{sz:[100,100]})))],s=getBigBB(i),r=getBB(makeRandomRect(pv(0,0),{sz:[e,e]})),a=getScalar(s.p3,s.p2,r.p3,r.p2),o=R.next(-10,10);return i.forEach((e=>{translateArr(e,s.mp,pv(0,0)),scaleArr(e,pv(0,0),a),rotateShape(e,pv(0,0),o)})),i}function makeEthereum(e){let t=[];t.push([pv(0,-20),pv(0,20)]),t.push([pv(0,-20),pv(10,0),pv(0,20),pv(-10,0),pv(0,-20)]),t.push([pv(0,-10),pv(10,0),pv(0,10),pv(-10,0),pv(0,-10)]);let n=getBigBB(t),i=getBB(makeRandomRect(pv(0,0),{sz:[e,e]})),s=getScalar(n.p3,n.p2,i.p3,i.p2),r=R.next(-10,10);return t.forEach((e=>{translateArr(e,n.mp,pv(0,0)),scaleArr(e,pv(0,0),s),rotateShape(e,pv(0,0),r)})),t}function makeBitcoin(e){let t=[];t.push(createPointCircle(pv(0,0),e,e*R.next(1,1.2),10,!0)),t.push([pv(0*-e,-e\/1.3),pv(0*-e,e\/1.3)]),t.push([pv(.17*e,-e\/1.3),pv(.17*e,e\/1.3)]),t.push(cloneArrRecursive(t[0])[0].slice(t[0].length\/2)),scaleArr(t[t.length-1],pv(0,0),.3),translateArr(t[t.length-1],pv(0,0),pv(.1*-e,.3*e)),t.push(cloneArrRecursive(t[t.length-1])[0]),translateArr(t[t.length-1],pv(0,0),pv(0,.3*-e*2)),t.push(contour(cloneArrRecursive(t[0])[0],.13*-e));let n=getBigBB(t),i=getBB(makeRandomRect(pv(0,0),{sz:[e,e]})),s=getScalar(n.p3,n.p2,i.p3,i.p2),r=180+R.next(-10,10);return t.forEach((e=>{translateArr(e,n.mp,pv(0,0)),scaleArr(e,pv(0,0),s),rotateShape(e,pv(0,0),r)})),t}class Stickman{constructor(e=0){this.origin=pv(0,0),this.joints=[],this.meas=[],this.extras=[],this.fulBB;let t=[];if(0===e){this.heart=makeHeart(makeBBofPoint(pv(0,0),120));for(let e=.25;e<=1;e+=.25){let n=cloneArrRecursive(this.heart)[0];scaleArr(n,pv(0,0),e),t.push(n)}t.push(...makeRays(makeBBofPoint(pv(0,0),120))),this.heart=t}else 1===e?this.heart=makePunk(160):2===e?this.heart=[makeSquiggle(180)]:3===e?this.heart=makeLaptop(130):4===e?this.heart=makeEthereum(240):5===e?this.heart=makeBitcoin(180):6===e&&(this.heart=makeLightbulb(240));this.heartBB=getBigBB(this.heart),this.makeParts(),this.strikePose(),this.currentPose=\"standTall\"}makeParts(){this.meas.legLength=200,this.meas.tibia=.5*this.meas.legLength,this.meas.femur=this.meas.legLength-this.meas.tibia,this.meas.torsoLength=this.meas.legLength*(2.8\/5)*(!0===showAlien?.8:1),this.meas.pelvic=.3*this.meas.torsoLength,this.meas.lumbar=.06*this.meas.torsoLength,this.meas.thorax=this.meas.torsoLength-(this.meas.pelvic+this.meas.lumbar),this.meas.headAndNeck=this.meas.legLength-this.meas.torsoLength,this.meas.head=1.5*this.meas.legLength*.165,this.meas.neck=(2*this.meas.legLength-(this.meas.torsoLength+this.meas.legLength+this.meas.head))*(!0===showGoose?6:1)*(!0===showAlien?.65:1),this.meas.shoulderWidth=2*this.meas.legLength*(!0===showAlien?.5:!0===showSkeleton?.4:.2)\/4,this.meas.armLength=this.meas.torsoLength+this.meas.torsoLength*(!0===showGoose?.35:1)*(!0===showAlien?.6:1),this.meas.bicep=2*this.meas.head,this.meas.forearm=this.meas.armLength-1.3*this.meas.bicep,this.meas.hand=this.meas.forearm-this.meas.bicep,this.meas.footLength=.8*this.meas.forearm\/2,this.meas.torsoHeight=this.meas.pelvic+this.meas.lumbar+this.meas.thorax+this.meas.neck+this.meas.head,this.meas.armLength=this.meas.bicep+this.meas.forearm,this.proxyBB=[2*this.meas.armLength+2*this.meas.shoulderWidth,this.meas.torsoHeight+this.meas.legLength+(this.meas.armLength-this.meas.neck-this.meas.head)],this.proxyBB=getBB(makeRandomRect(pv(this.origin.x,this.origin.y-this.meas.legLength),{sz:[this.proxyBB[0],1.3*this.proxyBB[1]]})),this.joints.crotch=new Chain(pv(this.origin.x,this.origin.y-this.meas.legLength),{followMouse:!1,target:pv(this.origin.x,this.origin.y-3*this.meas.legLength),segments:5,segs:[this.meas.pelvic,this.meas.lumbar,this.meas.thorax,this.meas.neck,this.meas.head]}),this.updateAnchorPoints(),!0===showAlien&&(this.meas.bicep*=1.8,this.meas.forearm*=1.8),this.joints.armLeft=new Chain(this.extras.armLeftAnchor,{followMouse:!1,target:pv(this.origin.x+this.meas.shoulderWidth,this.origin.y),segments:2,segs:[this.meas.bicep,this.meas.forearm]}),this.joints.armRight=new Chain(this.extras.armRightAnchor,{followMouse:!1,target:pv(this.origin.x-this.meas.shoulderWidth,this.origin.y),segments:2,segs:[this.meas.bicep,this.meas.forearm]}),!0===showAlien&&(this.meas.tibia*=.5,this.meas.femur*=.5),this.joints.legLeft=new Chain(this.extras.legLeftAnchor,{followMouse:!1,target:pv(this.origin.x-this.meas.shoulderWidth\/2,this.origin.y+this.meas.legLength),segments:2,segs:[this.meas.femur,this.meas.tibia,this.meas.footLength]}),this.joints.legRight=new Chain(this.extras.legRightAnchor,{followMouse:!1,target:pv(this.origin.x+this.meas.shoulderWidth\/2,this.origin.y+this.meas.legLength),segments:2,segs:[this.meas.femur,this.meas.tibia,this.meas.footLength]})}strikePose(e){\"squat\"===e?(this.squat(),this.currentPose=\"squat\"):\"standTall\"===e?(this.standTall(),this.currentPose=\"standTall\"):\"random\"===e?(this.poseRandom(),this.currentPose=\"random\"):\"standOut\"===e?(this.standOut(),this.currentPose=\"standOut\"):(this.standTall(),this.currentPose=\"standTall\")}updateAnchorPoints(){this.extras.armLeftAnchor=pointFrom(this.joints.crotch.getNode(3),pointPerp(this.joints.crotch.getNode(2),this.joints.crotch.getNode(3))+0,this.meas.shoulderWidth),this.extras.armRightAnchor=pointFrom(this.joints.crotch.getNode(3),pointPerp(this.joints.crotch.getNode(2),this.joints.crotch.getNode(3))+180-0,this.meas.shoulderWidth),this.extras.legLeftAnchor=pointFrom(this.joints.crotch.getOrigin(),pointPerp(this.joints.crotch.getNode(1),this.joints.crotch.getNode(0)),this.meas.shoulderWidth\/2),this.extras.legRightAnchor=pointFrom(this.joints.crotch.getOrigin(),pointPerp(this.joints.crotch.getNode(1),this.joints.crotch.getNode(0))+180,this.meas.shoulderWidth\/2)}updateFeetAndHands(){this.extras.footLeft=pointFrom(this.joints.legLeft.getEndEffector(),pointAng(this.joints.legLeft.getNode(0),this.joints.legLeft.getNode(1)),this.meas.footLength),this.extras.footRight=pointFrom(this.joints.legRight.getEndEffector(),pointAng(this.joints.legRight.getNode(0),this.joints.legRight.getNode(1)),this.meas.footLength),this.extras.handLeft=pointFrom(this.joints.armLeft.getEndEffector(),pointAng(this.joints.armLeft.getNode(0),this.joints.armLeft.getNode(1)),this.meas.head\/2),this.extras.handRight=pointFrom(this.joints.armRight.getEndEffector(),pointAng(this.joints.armRight.getNode(0),this.joints.armRight.getNode(1)),this.meas.head\/2)}setArmLeftTo(e,t){if(this.updateAnchorPoints(),\"object\"==typeof e)this.joints.armLeft.setTarget(e);else{let n=pointFrom(this.extras.armLeftAnchor,e,t);this.joints.armLeft.setTarget(n)}this.joints.armLeft.update()}setArmRightTo(e,t){if(this.updateAnchorPoints(),\"object\"==typeof e)this.joints.armRight.setTarget(e);else{let n=pointFrom(this.extras.armRightAnchor,e,t);this.joints.armRight.setTarget(n)}this.joints.armRight.update()}setLegLeftTo(e,t){if(this.updateAnchorPoints(),\"object\"!=typeof e){{let n=pointFrom(this.extras.legLeftAnchor,e,t);this.joints.legLeft.setTarget(n)}this.joints.legLeft.update()}else this.joints.legLeft.setTarget(e)}setLegRightTo(e,t){if(this.updateAnchorPoints(),\"object\"!=typeof e){{let n=pointFrom(this.extras.legRightAnchor,e,t);this.joints.legRight.setTarget(n)}this.joints.legRight.update()}else this.joints.legRight.setTarget(e)}setCrotch(e,t){if(\"object\"==typeof e)this.joints.legRight.setTarget(e);else{let n=pointFrom(this.origin,e,t);this.joints.crotch.setTarget(n)}this.joints.crotch.update(),this.updateAnchorPoints(),this.joints.armLeft.pinChainRootTo(this.extras.armLeftAnchor),this.joints.armRight.pinChainRootTo(this.extras.armRightAnchor),this.joints.legLeft.pinChainRootTo(this.extras.legLeftAnchor),this.joints.legRight.pinChainRootTo(this.extras.legRightAnchor),this.updateAnchorPoints()}poseRandom(){this.setCrotch(180,2*this.meas.torsoHeight),this.setArmLeftTo(-20,2*this.meas.armLength),this.setArmRightTo(20,2*this.meas.armLength),this.setLegLeftTo(170,2*this.meas.legLength),this.setLegRightTo(-170,2*this.meas.legLength),this.setCrotch(R.next(170,190),2*this.meas.torsoHeight),this.setArmLeftTo(-R.next(90,90),R.next(this.meas.armLength\/2,this.meas.armLength\/1.2)),this.setArmRightTo(R.next(90,90),R.next(this.meas.armLength\/2,this.meas.armLength\/1.2)),this.setLegLeftTo(R.next(30,90),R.next(0,1.2*this.meas.legLength)),this.setLegRightTo(-R.next(30,90),R.next(0,1.2*this.meas.legLength))}standTall(){this.setCrotch(R.next(170,190),2*this.meas.torsoHeight),this.setArmLeftTo(-60,2*this.meas.armLength),this.setArmRightTo(60,2*this.meas.armLength),this.setLegLeftTo(120,2*this.meas.legLength),this.setLegRightTo(-120,2*this.meas.legLength),this.setArmLeftTo(pointFrom(this.joints.crotch.getNode(0),180,300),this.meas.armLength*R.next(.7,1.1)),this.setArmRightTo(pointFrom(this.joints.crotch.getNode(0),180,300),this.meas.armLength*R.next(.7,1.1)),this.setLegLeftTo(20,1*this.meas.legLength),this.setLegRightTo(-20,1*this.meas.legLength)}standOut(){this.setCrotch(R.next(170,190),2*this.meas.torsoHeight),this.setArmLeftTo(-60,2*this.meas.armLength),this.setArmRightTo(60,2*this.meas.armLength),this.setLegLeftTo(120,2*this.meas.legLength),this.setLegRightTo(-120,2*this.meas.legLength),this.setArmLeftTo(pointFrom(this.joints.crotch.getNode(0),R.next(-90,-180),300),1.25*this.meas.armLength),this.setArmRightTo(pointFrom(this.joints.crotch.getNode(0),R.next(90,180),300),1.25*this.meas.armLength),this.setLegLeftTo(20,1*this.meas.legLength),this.setLegRightTo(-20,1*this.meas.legLength)}squat(){this.setCrotch(R.next(170,190),1.9*this.meas.torsoHeight),this.setArmLeftTo(-60,2*this.meas.armLength),this.setArmRightTo(60,2*this.meas.armLength),this.setLegLeftTo(120,2*this.meas.legLength),this.setLegRightTo(-120,2*this.meas.legLength),this.setArmLeftTo(pointFrom(this.joints.crotch.getNode(0),180,100),this.meas.armLength\/R.next(1.4,1.6)),this.setArmRightTo(pointFrom(this.joints.crotch.getNode(0),180,100),this.meas.armLength\/R.next(1.4,1.6)),this.setLegLeftTo(R.next(20,70),this.meas.legLength*R.next(.2,.8)),this.setLegRightTo(-R.next(20,70),this.meas.legLength*R.next(.2,.8))}outstretched(){this.setCrotch(180,3*this.meas.torsoHeight),this.setArmLeftTo(-90,3*this.meas.armLength),this.setArmRightTo(180,2*this.meas.armLength),this.setLegLeftTo(90,3*this.meas.legLength),this.setLegRightTo(0,3*this.meas.legLength)}getParts(){this.updateFeetAndHands();let e=[];for(let t in this.joints)e.push(cloneArr(this.joints[t].getPoints()));e[1].unshift(pv(this.joints.crotch.getNode(3).x,this.joints.crotch.getNode(3).y)),e[2].unshift(pv(this.joints.crotch.getNode(3).x,this.joints.crotch.getNode(3).y)),e[3].unshift(pv(this.joints.crotch.getNode(0).x,this.joints.crotch.getNode(0).y)),e[4].unshift(pv(this.joints.crotch.getNode(0).x,this.joints.crotch.getNode(0).y));let t=pv((this.joints.crotch.getNode(4).x+this.joints.crotch.getEndEffector().x)\/2,(this.joints.crotch.getNode(4).y+this.joints.crotch.getEndEffector().y)\/2);e.splice(1,0,createPointCircle(t,this.meas.head\/2,this.meas.head\/2,10,!0)),e[0].pop(),e[0].reverse();let n=cloneArrRecursive(this.heart)[0];if(\"squat\"===this.currentPose||\"standTall\"===this.currentPose){let e=this.joints.armLeft.getEndEffector(),t=this.joints.armRight.getEndEffector();n.forEach((n=>{translateArr(n,pv(0,0),pv((e.x+t.x)\/2,(e.y+t.y)\/2-this.heartBB.height\/3))}))}else if(R.next()>.5){let e=this.joints.armLeft.getEndEffector();n.forEach((t=>{translateArr(t,pv(0,0),pv(e.x,e.y-this.heartBB.height\/3))}))}else{let e=this.joints.armRight.getEndEffector();n.forEach((t=>{translateArr(t,pv(0,0),pv(e.x,e.y-this.heartBB.height\/3))}))}return e.push(n),e}}function getBigBB(e){let t=[];return e.forEach(((e,n)=>{\"object\"!=typeof e[0]||Array.isArray(e[0])?e.forEach((e=>{t.push(getBB(e))})):t.push(getBB(e))})),t=combineBB(t),t}function movePersonToBox(e,t){let n=e.getParts(),i=getBigBB(n),s=.9*getScalar(e.proxyBB.p1,e.proxyBB.p2,t.p1,t.p2),r=.9*getScalar(e.proxyBB.p3,e.proxyBB.p2,t.p3,t.p2);n.forEach(((e,a)=>{a===n.length-1?e.forEach((e=>{translateArr(e,pv(i.mp.x,i.p3.y),pv(t.mp.x,t.p3.y-.02*t.height)),scaleArrAxis(e,pv(t.mp.x,t.p3.y),s,\"x\"),scaleArrAxis(e,pv(t.mp.x,t.p3.y),r,\"y\")})):(translateArr(e,pv(i.mp.x,i.p3.y),pv(t.mp.x,t.p3.y-.02*t.height)),scaleArrAxis(e,pv(t.mp.x,t.p3.y),s,\"x\"),scaleArrAxis(e,pv(t.mp.x,t.p3.y),r,\"y\"))})),eachPersonData.push({box:t,figureHeight:0,primaryColor:[R.next(0,360),R.next(0,100),R.next(0,100)]}),eachPersonData[eachPersonData.length-1].figureHeight=e.proxyBB.height*r,eachPersonData[eachPersonData.length-1].inflationAmount=.02*eachPersonData[eachPersonData.length-1].figureHeight;let a=getBB(n[1]),o=pointFrom(n[0][0],pointAng(n[0][1],n[0][0]),a.height\/2);if(n[1]=createPointCircle(o,a.height\/2+eachPersonData[eachPersonData.length-1].inflationAmount\/2,a.height\/2,5),!0===showGoose&&(n.splice(n.length-1,0,[pv(o.x,o.y-a.height\/2),pointFrom(o,pointPerp(n[0][1],n[0][0]),1.5*a.height)]),n.splice(n.length-1,0,[pointFrom(o,pointPerp(n[0][1],n[0][0]),1.5*a.height),pv(o.x,o.y+a.height\/2)]),n.splice(n.length-1,0,createPointCircle(o,a.height\/4,a.height\/4,90,!0))),!0===showAlien&&(n.splice(n.length-1,0,[pv(o.x-a.height\/2,o.y),pv(o.x-a.height\/2.1,o.y-.1*a.height)]),n.splice(n.length-1,0,[pv(o.x+a.height\/2,o.y),pv(o.x+a.height\/1.9,o.y-.1*a.height)])),!0===showSkeleton){let e=pointPerp(n[0][1],n[0][2]);for(let t=0;t<4;t+=1){let i=findPointAlongSpline(n[0],_map(t,0,3,.35,.75));n.splice(n.length-1,0,[pointFrom(i,e+180,quickDist(n[2][2],n[2][3])*_map(t,0,4,.5,.3)),pointFrom(i,e,quickDist(n[2][2],n[2][3])*_map(t,0,4,.5,.3))])}for(let e=0;e<4;e++){pv(o.x,o.y+a.height\/3);n.splice(n.length-1,0,[pv(o.x+_map(e,0,4,-a.height\/2,a.height\/2),o.y+a.height\/4),pv(o.x+_map(e,0,4,-a.height\/2,a.height\/2),o.y+a.height\/2)])}n.splice(n.length-1,0,[pv(o.x-a.height\/3,o.y),pv(o.x-a.height\/3,o.y-.1*a.height)]),n.splice(n.length-1,0,[pv(o.x+a.height\/3,o.y),pv(o.x+a.height\/3,o.y-.1*a.height)])}let h=getBigBB(n[n.length-1]),l=cloneArrRecursive(e.heart)[0];return l.forEach((t=>{scaleArr(t,e.heartBB.mp,getScalar(e.heartBB.p3,e.heartBB.p2,h.p3,h.p2)),translateArr(t,e.heartBB.mp,h.mp)})),n[n.length-1]=l,n}function inflatePersons(e){let t=[];for(let n=0;n<e.length;n++)t.push(inflatePerson(e[n],{amt:eachPersonData[n].inflationAmount*baseInflation}));return t}function inflatePerson(e,{amt:t}={}){return inflated=[],e.forEach(((n,i)=>{if(1===i)!0===showAlien?inflated.push(createPointCircle(getBB(e[i]).mp,getBB(e[i]).width\/1+t\/4,getBB(e[i]).width\/2+t\/4,10,!0)):inflated.push(createPointCircle(getBB(e[i]).mp,getBB(e[i]).width\/2+t\/4,getBB(e[i]).width\/2+t\/4,10,!0));else if(i===e.length-1){let e=[];n.forEach((t=>{e.push(t)})),inflated.push(e)}else inflated.push(easyInflate(n,{dist:t,ends:0}))})),inflated}function personIntersectsShape(e,t){let n=[];return e.forEach((e=>{n.push(curvesIntersect(t,e,{closed:!0}));let i=[];t.forEach((t=>{i.push(pointInsideShape(t,e))})),i.includes(!0)&&n.push(!0)})),!!n.includes(!0)}function circlePackMethod({sz:e=[600,800]}={}){let t=circlePack(getBB(makeRandomRect(pv(0,0),{sz:e})),{dotDia:e[0]*R.next(.15,.35),dotPadding:0});for(let e=0;e<t.length;e+=1)t[e]=makeRandomRect(t[e],{sz:[t[e].dia*R.next(.5,1),t[e].dia]});return t}function gridCellsMethod({sz:e=[600,800]}={}){let t=R.next(6,40,!0),n=sqrt(t),i=ceil(t\/n),s=[],r=[floor(e[0]\/i),floor(e[1]\/n)];for(let t=-e[1]\/2;t<e[1]\/2-r[1]\/2;t+=r[1])for(let n=-e[0]\/2;n<e[0]\/2-r[0]\/2;n+=r[0])s.push([pv(n,t),pv(n+r[0],t),pv(n+r[0],t+r[1]),pv(n,t+r[1])]);return s}function straightRowsMethod({sz:e=[600,800],boxCount:t=2}={}){let n=[];if(R.next()>.93)for(let e=0;e<t;e++)n.push(makeRandomRect(pv(0,e),{sz:[1,1]}));else for(let e=0;e<t;e++)n.push(makeRandomRect(pv(e,0),{sz:[1,1]}));return n}function rectSubMethod({sz:e=[600,800]}={}){return new RectSub(getBB(makeRandomRect(pv(0,0),{sz:e})),{loops:10})}function circleOfFriendsMethod({sz:e=[600,800],bb:t}={}){let n=new QuadTree(t),i=[];for(let e=0,s=0;e<4;e++,s++){if(e>1)continue;let r=createPointCircle(t.mp,map(s,0,6,0,2*t.width),map(s,0,6,0,t.height),10,!0),a=.01;for(let e=0;e<=1;e+=a){let t=makeRandomRect(findPointAlongSpline(r,e),{sz:[map(easingFunction(e,12),1,0,157.5,157.5),map(easingFunction(e,12),1,0,210,210)],closed:!0}),s=fillShapeWithPoints(t,2);!0===n.packPointGroup(s,{minDia:5,padding:0})&&i.push(t)}}return i}class nodeNetwork{constructor(e){let t=[];t=e,this.net=triangulate(t)}}class Bone{constructor(e,{len:t=2}={}){this.pts=[pv(e.x,e.y),pointFrom(pv(e.x,e.y),180,t)],this.len=t}moveTo(e,t){let n=cloneArr(this.pts);translateArr(n,e,t),this.pts=n}rotateTo(e,t){rotatePoint(this.pts,e,radians(t))}}class Chain{constructor(e,{followMouse:t=!1,target:n=pv(e.x,1e3),segments:i=2,segLength:s=10,segs:r=[10,10],constraints:a=[[-360,360],[-360,360]]}={}){if(this.followMouse=t,1==this.followMouse?this.target=pv(mouseX,mouseY):this.target=n,r.length<i){let e=i-r.length;for(let t=0;t<e;t++)r.push(r[0])}this.parts=[],this.parts.push(new Bone(e,{len:r[0]}));for(let e=1;e<i;e++)this.parts.push(new Bone(this.parts[this.parts.length-1].pts[1],{len:r[e]}));this.setConstraints(a),this.chainLength=this.parts.reduce(((e,t)=>{t.len})),this.pinChainRootTo(e),this.setTarget(pv(e.x,1e3)),this.solverFABRIK(),this.setTarget(n),this.solverFABRIK()}pinChainRootTo(e){this.pinPoint=e}setTarget(e){this.target=e}setConstraints(e){if(e.length<this.parts.length){let t=this.parts.length-e.length;for(let n=0;n<t;n++)e.push([-360,360])}this.constraints=e}solverFABRIK(){this.chainLength,quickDist(this.pinPoint,this.target);for(let e=0;e<1e3;e++){let e=this.target;for(let t=this.parts.length-1;t>=0;t--){let n=p5.Vector.fromAngle(radians(pointAng(this.parts[t].pts[0],this.parts[t].pts[1]))),i=p5.Vector.fromAngle(radians(pointAng(this.parts[t].pts[0],e))),s=degrees(n.angleBetween(i));s<this.constraints[t][0]?s=this.constraints[t][0]:s>this.constraints[t][1]&&(s=this.constraints[t][1]),rotatePoint(this.parts[t].pts[1],this.parts[t].pts[0],radians(s)),this.parts[t].moveTo(this.parts[t].pts[1],e),e=this.parts[t].pts[0]}e=this.pinPoint;for(let t=0;t<this.parts.length;t++){let n=p5.Vector.fromAngle(radians(pointAng(this.parts[t].pts[1],this.parts[t].pts[0]))),i=p5.Vector.fromAngle(radians(pointAng(this.parts[t].pts[1],e))),s=degrees(n.angleBetween(i));rotatePoint(this.parts[t].pts[0],this.parts[t].pts[1],radians(s)),this.parts[t].moveTo(this.parts[t].pts[0],e),e=this.parts[t].pts[1]}}}getPoints(){let e=[];return e.push(this.parts[0].pts[0]),this.parts.forEach((t=>{e.push(t.pts[1])})),e}getEndEffector(){return this.parts[this.parts.length-1].pts[1]}getNode(e){return e>this.parts.length-1&&(e=this.parts.length-1),this.parts[e].pts[0]}getOrigin(){return this.parts[0].pts[0]}getTarget(){return this.target}update(){this.solverFABRIK()}}function makeSquiggle(e){let t=[];for(let e=-.5;e<.5;e+=.1)t.push(pv(e,R.next(-.5,.5)));addPointsToShapeEvenly(t,.1),soften(t,{loops:1});let n=getBB(t),i=getScalar(n.p1,n.p2,pv(-e\/2,0),pv(e\/2,0));return scaleArr(t,pv(0,0),i),t}function makeTriforce(e){let t=[];return t.push(pointFrom(pv(0,0),60,e\/2)),t.push(pointFrom(pv(0,0),180,e\/2)),t.push(pointFrom(pv(0,0),300,e\/2)),t.push(pv((t[0].x+t[2].x)\/2,(t[0].y+t[2].y)\/2)),t.push(pv((t[1].x+t[2].x)\/2,(t[1].y+t[2].y)\/2)),t.push(pv((t[0].x+t[1].x)\/2,(t[0].y+t[1].y)\/2)),t.push(pv((t[0].x+t[2].x)\/2,(t[0].y+t[2].y)\/2)),t.push(pointFrom(pv(0,0),60,e\/2)),t}function layerDefinitions(){let e=[\"scribbleHatch\",\"quickHatch\"];return[{layerName:\"outerNet\",target:\"outerNet\"},{layerName:\"innerNet\",target:\"innerNet\"},{layerName:\"outerNetHatch\",target:\"outerNet\",details:{hatchStyle:e[R.next(0,e.length,!0)],hatchRotationAmount:R.next()>.5?R.next(0,360):\"random\",hatchDensity:R.next(2,8),hatchModZoom:R.next(0,5),hatchModStrength:R.next(0,40),useFlag:!1}},{layerName:\"innerNetTriangles\",target:\"innerNet\",details:{triangleOffset:\"random\"}},{layerName:\"innerNetHatch\",target:\"innerNet\",details:{hatchStyle:e[R.next(0,e.length,!0)],hatchRotationAmount:R.next()>.5?R.next(0,360):\"random\",hatchDensity:R.next(2,8),hatchModZoom:R.next(0,5),hatchModStrength:R.next(0,40),useFlag:!1}},{layerName:\"outerShapeBoxes\",target:\"outerShape\",details:{type:\"boxes\",useFlag:!0,gridHorizontals:_constrain(R.gaussian(30,15),10,60),gridVerticals:_constrain(R.gaussian(30,15),10,60),gridRotation:R.next(360),gridWarpZoom:0,gridWarpStrength:R.next(1,40),gridLineShift:R.next(0,20)}},{layerName:\"humanLines\",target:\"humanLines\"},{layerName:\"humanShapes\",target:\"humanLines\"},{layerName:\"hearts\",target:\"heart\"},{layerName:\"innerShapeOvals\",target:\"innerShapeBoxes\"},{layerName:\"canvas\",target:\"canvas\"},{layerName:\"outerNetTriangles\",target:\"outerNet\",details:{triangleOffset:\"random\"}},{layerName:\"innerShapeBoxes\",target:\"innerShape\",details:{type:\"boxes\",gridHorizontals:_constrain(R.gaussian(20,10),10,40),gridVerticals:_constrain(R.gaussian(20,10),10,40),gridRotation:R.next(360),gridWarpZoom:R.next(1,10),gridWarpStrength:R.next(1,20),gridLineShift:R.next(0,20)}},{layerName:\"net\",target:\"net\"},{layerName:\"outerNetBoxes\",target:\"outerNet\",details:{type:\"boxes\",gridHorizontals:_constrain(R.gaussian(10,10),7,45),gridVerticals:_constrain(R.gaussian(10,10),7,45),gridRotation:R.next(360),gridWarpZoom:R.next(0,10),gridWarpStrength:R.next(0,40),gridLineShift:R.next(0,10)}},{layerName:\"outerShape\",target:\"outerNet\"},{layerName:\"innerNetRows\",target:\"innerNet\",details:{type:\"rows\",gridHorizontals:R.next(7,14),gridVerticals:R.next(7,14),gridRotation:R.next(360),gridWarpZoom:R.next(0,3),gridWarpStrength:R.next(0,80),gridLineShift:R.next(0,10)}},{layerName:\"outerShapeHatch\",target:\"outerShape\",details:{hatchStyle:e[R.next(0,e.length,!0)],useFlag:!1,hatchRotationAmount:R.next(0,360,!0),hatchDensity:_constrain(R.gaussian(2,4),2,10),hatchModZoom:R.next(0,10),hatchModStrength:R.next(0,10)}},{layerName:\"mountainNet\",target:\"mountainNet\"},{layerName:\"extras\",target:\"extras\"},{layerName:\"outerShapeRows\",target:\"outerShape\",details:{type:\"rows\",gridHorizontals:_constrain(R.gaussian(30,15),10,60),gridVerticals:_constrain(R.gaussian(30,15),10,60),gridRotation:R.next(360),gridWarpZoom:0,gridWarpStrength:R.next(1,20),gridLineShift:R.next(0,20)}},{layerName:\"outerShapeOvals\",target:\"outerShapeBoxes\"},{layerName:\"innerShapeHatch\",target:\"innerShape\",details:{hatchStyle:e[R.next(0,e.length,!0)],hatchRotationAmount:R.next()>.5?R.next(0,360,!0):\"random\",hatchDensity:_constrain(R.gaussian(2,4),2,10),hatchModZoom:R.next(0,10),hatchModStrength:R.next(0,10),useFlag:!1}},{layerName:\"innerNetTrianglesHatch\",target:\"innerNetTriangles\",details:{hatchStyle:e[R.next(0,e.length,!0)],hatchRotationAmount:R.next()>.5?R.next(0,360):\"random\",hatchDensity:R.next(1,5),hatchModZoom:R.next(0,10),hatchModStrength:R.next(0,60),useFlag:!1}},{layerName:\"outerNetRows\",target:\"outerNet\",details:{type:\"rows\",gridHorizontals:R.next(7,14),gridVerticals:R.next(7,14),gridRotation:R.next(360),gridWarpZoom:R.next(0,3),gridWarpStrength:R.next(0,80),gridLineShift:R.next(0,10)}},{layerName:\"innerNetBoxes\",target:\"innerNet\",details:{type:\"boxes\",gridHorizontals:R.next(10,14),gridVerticals:R.next(10,14),gridRotation:R.next(360),gridWarpZoom:R.next(0,3),gridWarpStrength:R.next(0,80),gridLineShift:R.next(0,10)}},{layerName:\"innerShape\",target:\"innerNet\"},{layerName:\"outerNetTrianglesHatch\",target:\"outerNetTriangles\",details:{hatchStyle:e[R.next(0,e.length,!0)],hatchRotationAmount:R.next()>.5?R.next(0,360):\"random\",hatchDensity:R.next(1,10),hatchModZoom:R.next(0,10),hatchModStrength:R.next(0,30),useFlag:!1}},{layerName:\"innerShapeRows\",target:\"innerShape\",details:{type:\"rows\",gridHorizontals:_constrain(R.gaussian(20,20),6,40),gridVerticals:_constrain(R.gaussian(20,20),6,40),gridRotation:R.next(360),gridWarpZoom:R.next(1,10),gridWarpStrength:R.next(1,20),gridLineShift:R.next(0,20)}},{layerName:\"outerShapeBoxes\",target:\"outerShape\",details:{type:\"boxes\",useFlag:!0,gridHorizontals:_constrain(R.gaussian(30,15),10,60),gridVerticals:_constrain(R.gaussian(30,15),10,60),gridRotation:R.next(360),gridWarpZoom:4,gridWarpStrength:R.next(1,40),gridLineShift:R.next(0,20)}},{layerName:\"oneBigHeart\",target:\"oneBigHeart\"},{layerName:\"elevateHeart\",target:\"elevateHeart\"}]}function definePaintingColors(){let e=[],t=[{name:\"greenInk\",people:[135,95,55],outer:[135,95,55],inner:[135,95,55],glyphs:[135,95,55],in_fill:[0,0,100],out_fill:[0,0,100],paper:[0,0,100]},{name:\"blueInk\",people:[212,100,95],outer:[212,100,95],inner:[212,100,95],glyphs:[212,100,95],in_fill:[0,0,100],out_fill:[0,0,100],paper:[0,0,100]},{name:\"redInk\",people:[0,90,95],outer:[0,90,95],inner:[0,90,95],glyphs:[0,90,95],in_fill:[0,0,100],out_fill:[0,0,100],paper:[0,0,100]},{name:\"xerox\",people:[0,0,0],outer:[0,0,0],inner:[0,0,0],glyphs:[0,0,0],in_fill:[0,0,100],out_fill:[0,0,100],paper:[0,0,100]},{name:\"allBlack\",people:[0,0,100],outer:[0,0,100],inner:[0,0,100],glyphs:[0,0,100],in_fill:[0,0,0],out_fill:[0,0,0],paper:[0,0,0]},{name:\"yellowSlate\",people:[0,0,90],outer:[0,0,60],inner:[0,0,60],glyphs:[48,59,89],in_fill:[120,8,10],out_fill:[120,8,10],paper:[120,8,10]},{name:\"brightRedHeartDark\",people:[0,0,100],outer:[0,0,100],inner:[0,0,100],glyphs:[12,100,100],in_fill:[0,9,9],out_fill:[0,9,9],paper:[0,9,9]},{name:\"brightRedHeartLight\",people:[0,0,0],outer:[0,0,0],inner:[0,0,0],glyphs:[12,100,100],in_fill:[0,9,91],out_fill:[0,9,91],paper:[0,9,91]},{name:\"HappyMeal\",people:[0,0,5],outer:[48,89,100],inner:[48,89,100],glyphs:[0,100,85],in_fill:[0,0,80],out_fill:[0,0,90],paper:[0,0,100]},{name:\"Ikea\",people:[217,96,68],outer:[217,96,68],inner:[217,96,68],glyphs:[48,82,100],in_fill:[120,1,78],out_fill:[120,1,59],paper:[0,0,100]},{name:\"blackLight\",people:[12,62,99],outer:[142,82,95],inner:[253,99,98],glyphs:[304,99,98],in_fill:[246,74,21],out_fill:[246,74,13],paper:[0,0,0]},{name:\"\/\/\/M\",people:[0,0,100],outer:[209,100,53],inner:[204,99,72],glyphs:[6,89,91],in_fill:[223,77,24],out_fill:[0,0,49],paper:[0,0,73]},{name:\"Warhol\",people:[349,74,93],outer:[147,100,60],inner:[151,93,52],glyphs:[30,100,97],in_fill:[126,55,15],out_fill:[132,40,10],paper:[26,44,6]},{name:\"Guston\",people:[356,100,64],outer:[184,64,21],inner:[13,33,72],glyphs:[357,65,85],in_fill:[10,25,85],out_fill:[4,36,89],paper:[31,10,86]},{name:\"Kupka\",people:[55,33,42],outer:[41,63,43],inner:[48,78,96],glyphs:[31,23,87],in_fill:[43,71,85],out_fill:[37,71,61],paper:[40,82,78]},{name:\"Klein\",people:[219,59,90],outer:[225,88,67],inner:[222,72,29],glyphs:[219,38,99],in_fill:[233,92,53],out_fill:[236,97,44],paper:[239,100,23]},{name:\"Twombly\",people:[148,19,79],outer:[146,52,45],inner:[119,44,66],glyphs:[125,6,91],in_fill:[136,68,24],out_fill:[142,66,21],paper:[148,97,11]},{name:\"Nevelson\",people:[0,0,49],outer:[0,0,22],inner:[0,0,24],glyphs:[0,0,63],in_fill:[0,0,13],out_fill:[0,0,10],paper:[0,0,5]},{name:\"MagentaMagic\",people:[327,84,93],outer:[325,79,73],inner:[327,83,77],glyphs:[326,82,100],in_fill:[329,82,62],out_fill:[335,80,55],paper:[332,72,42]},{name:\"OliveGreen\",people:[48,90,100],outer:[86,52,72],inner:[96,61,58],glyphs:[27,98,99],in_fill:[82,56,69],out_fill:[96,66,42],paper:[97,33,22]},{name:\"SmoothBlue\",people:[35,90,100],outer:[172,52,72],inner:[204,51,72],glyphs:[52,90,100],in_fill:[200,50,46],out_fill:[192,71,28],paper:[191,88,20]},{name:\"VioletBrown\",people:[340,50,98],outer:[237,60,49],inner:[262,64,52],glyphs:[306,23,98],in_fill:[306,48,47],out_fill:[198,38,55],paper:[271,71,20]},{name:\"Red\",people:[0,78,56],outer:[350,64,64],inner:[350,64,64],glyphs:[0,0,100],in_fill:[328,30,87],out_fill:[328,30,87],paper:[328,30,87]},{name:\"Blue\",people:[212,85,58],outer:[224,59,54],inner:[224,59,54],glyphs:[24,2,99],in_fill:[211,31,80],out_fill:[211,31,80],paper:[211,31,80]},{name:\"Yellow\",people:[0,0,100],outer:[47,64,100],inner:[47,64,100],glyphs:[0,0,100],in_fill:[53,84,51],out_fill:[53,84,51],paper:[53,84,51]},{name:\"sweetPink\",people:[0,30,100],outer:[0,50,100],inner:[0,50,100],glyphs:[0,80,80],in_fill:[50,7,89],out_fill:[50,7,89],paper:[50,7,89]},{name:\"obey\",people:[358,88,89],outer:[185,10,86],inner:[184,37,61],glyphs:[30,60,0],in_fill:[50,7,89],out_fill:[50,7,89],paper:[50,7,89]}];for(i in e={},t[colorPaletteChoice])Array.isArray(t[colorPaletteChoice][i])?e[i]=HSBToRGB(t[colorPaletteChoice][i]):e[i]=t[colorPaletteChoice][i];if(!0===useUniqueColors){let n=new COB({hue:t[colorPaletteChoice].people[0],saturation:t[colorPaletteChoice].people[1],brightness:t[colorPaletteChoice].people[2],length:colorSpread});e.uniquePeople=n.getColorCount(boxes.length);let i=new COB({hue:t[colorPaletteChoice].glyphs[0],saturation:t[colorPaletteChoice].glyphs[1],brightness:t[colorPaletteChoice].glyphs[2],length:colorSpread});e.uniqueGlyphs=i.getColorCount(boxes.length);let s=new COB({hue:t[colorPaletteChoice].inner[0],saturation:t[colorPaletteChoice].inner[1],brightness:t[colorPaletteChoice].inner[2],length:colorSpread});e.uniqueInner=s.getColorCount(30);let r=new COB({hue:t[colorPaletteChoice].outer[0],saturation:t[colorPaletteChoice].outer[1],brightness:t[colorPaletteChoice].outer[2],length:colorSpread});e.uniqueOuter=r.getColorCount(30)}return e}function definePaintingLayers(e=0){let t=\"solid line\",n=[],i={weight:1,scrawl:1,span:.05},s={weight:1,scrawl:1,span:.03},r={weight:1,scrawl:1,span:.01},a=layerGuide.map((e=>e.layerName));if(0===e){n.push({layerName:\"elevateHeart\",lineStyle:t,colorStyle:\"cob\",drawTimes:12,pauseTimer:!0,refreshLayer:!1,sketchStyleType:s}),n.push({layerName:\"humanShapes\",lineStyle:t,colorStyle:\"cob\",drawTimes:12,pauseTimer:!1,refreshLayer:!1,sketchStyleType:s}),n.push({layerName:\"hearts\",lineStyle:t,colorStyle:\"cob\",drawTimes:12,pauseTimer:!0,refreshLayer:!1,sketchStyleType:r});let e=a.length;for(let s=0;s<e;s++){R.next(0,a.length,!0);let e=s+2;n.push({layerName:a[s],colorStyle:\"cob\",lineStyle:t,drawTimes:6,pauseTimer:!0,cullItems:0===glyphChoice&&R.next()>.8,refreshLayer:!1,pulseRate:e,sketchStyleType:i}),n.push({erase:!0,layerName:a[s],colorStyle:\"cob\",lineStyle:t,drawTimes:12,pauseTimer:!1,cullItems:!1,refreshLayer:!1,pulseRate:e+1,sketchStyleType:i})}boxes.length<20&&(n.push({erase:!0,layerName:\"humanShapes\",lineStyle:t,drawTimes:8,pauseTimer:!1,cullItems:!1,refreshLayer:!0,sketchStyleType:s}),n.push({erase:!0,layerName:\"hearts\",lineStyle:t,drawTimes:8,pauseTimer:!1,cullItems:!1,refreshLayer:!1,sketchStyleType:r}),n.push({layerName:\"humanShapes\",lineStyle:t,drawTimes:8,pauseTimer:!1,cullItems:!1,refreshLayer:!1,sketchStyleType:s}),n.push({layerName:\"hearts\",lineStyle:t,drawTimes:8,pauseTimer:!0,cullItems:!1,refreshLayer:!1,sketchStyleType:r})),n.push({erase:!0,layerName:\"humanShapes\",lineStyle:t,drawTimes:12,pauseTimer:!1,cullItems:!1,refreshLayer:!0,sketchStyleType:s}),n.push({erase:!0,layerName:\"hearts\",lineStyle:t,drawTimes:12,pauseTimer:!1,cullItems:!1,refreshLayer:!1,sketchStyleType:r})}else n.push({layerName:\"humanShapes\",lineStyle:t,colorStyle:\"cob\",drawTimes:12,pauseTimer:!1,refreshLayer:!1,sketchStyleType:s}),n.push({layerName:\"hearts\",lineStyle:t,colorStyle:\"cob\",drawTimes:12,pauseTimer:!1,refreshLayer:!1,sketchStyleType:r}),n.push({layerName:\"outerNet\",colorStyle:\"cob\",lineStyle:t,drawTimes:6,pauseTimer:!1,cullItems:R.next()>.8,refreshLayer:!1,pulseRate:1,sketchStyleType:i}),R.next()>.5&&n.push({erase:!0,layerName:\"outerNet\",colorStyle:\"cob\",lineStyle:t,drawTimes:12,pauseTimer:!1,cullItems:!1,refreshLayer:!1,pulseRate:1,sketchStyleType:i}),n.push({layerName:\"innerNet\",colorStyle:\"cob\",lineStyle:t,drawTimes:6,pauseTimer:!1,cullItems:R.next()>.8,refreshLayer:!1,pulseRate:1,sketchStyleType:i}),R.next()>.5&&n.push({erase:!0,layerName:\"innerNet\",colorStyle:\"cob\",lineStyle:t,drawTimes:12,pauseTimer:!1,cullItems:!1,refreshLayer:!1,pulseRate:1,sketchStyleType:i}),n.push({erase:!0,layerName:\"humanShapes\",lineStyle:t,drawTimes:8,pauseTimer:!1,cullItems:!1,refreshLayer:!0,sketchStyleType:s}),n.push({erase:!0,layerName:\"hearts\",lineStyle:t,drawTimes:8,pauseTimer:!1,cullItems:!1,refreshLayer:!1,sketchStyleType:r}),n.push({layerName:\"humanShapes\",lineStyle:t,drawTimes:8,pauseTimer:!1,cullItems:!1,refreshLayer:!1,sketchStyleType:s}),n.push({layerName:\"hearts\",lineStyle:t,drawTimes:8,pauseTimer:!0,cullItems:!1,refreshLayer:!1,sketchStyleType:r});!0===useUniqueColors&&n.filter((e=>\"humanShapes\"===e.layerName)).forEach((e=>{e.switchColor=\"perGroup\"})),interpretLayerList(n);layers.map((e=>e.layerName));return layers}function interpretLayerList(e){e.forEach((e=>{interpretLayerItem(e)}))}function interpretLayerItem(e){let t=layerGuide.find((t=>t.layerName===e.layerName)),n={layerName:t.layerName,details:{pulseRate:choiceOrDefault(e.pulseRate,1),gradientStroke:!1,erase:choiceOrDefault(e.erase,!1),drawTimes:choiceOrDefault(e.drawTimes,1),cullItems:choiceOrDefault(e.cullItems,!1),lineStyle:choiceOrDefault(e.lineStyle,\"solid line\"),colorStyle:choiceOrDefault(e.colorStyle,\"cob\"),switchColor:choiceOrDefault(e.switchColor,\"perItem\"),pencilDetails:{thickness:t.layerName.includes(\"hatch\")?4:2,pressure:t.layerName.includes(\"eye\")?8:4,density:.25,dotSize:\"erase\"===e[2]?.5:.25},refreshLayer:choiceOrDefault(e.refreshLayer,!1),pauseTimer:choiceOrDefault(e.pauseTimer,!1),wobble:choiceOrDefault(e.wobble,!0),sketchStyleType:choiceOrDefault(e.sketchStyleType,{weight:2,scrawl:10,span:.05})}};return layers.push(n),n}function choiceOrDefault(e,t){return void 0===e||\"\"===e||null===e?t:e}function makeMountain(){let e=[];return e.push(pv(2*canvasData.localSpace.p4.x,canvasData.localSpace.p4.y)),e.push(pv(canvasData.localSpace.mp.x,canvasData.localSpace.mp.y)),e.push(pv(2*canvasData.localSpace.p3.x,canvasData.localSpace.p3.y)),e.push(pv(canvasData.localSpace.p4.x,canvasData.localSpace.p4.y)),e}function HSBToRGB(e){let t=[e[0],e[1],e[2]];t[1]\/=100,t[2]\/=100;let n=e=>(e+t[0]\/60)%6,i=e=>t[2]*(1-t[1]*Math.max(0,Math.min(n(e),4-n(e),1)));return[digifix(255*i(5),0),digifix(255*i(3),0),digifix(255*i(1),0)]}function sketchTest(e,{leadSize:t,weight:n,strokeLength:i,scrawl:s,scrawlPRNG:a,scalePRNG:o}={}){s*=t*=.5;let h=[];if(void 0===e||e.length<=1)return;let l=s,p=i\/splineDist(e);if(p>.3){for(let n=0;n<2;n++){let n=e.map((e=>pv(e.x+R.next(-t\/2,t\/2),e.y+R.next(-t\/2,t\/2))));h.push(n)}return h}for(let i=0;i<1;i+=p\/n){if(i-p\/2<=0||i+p\/2>=1)continue;let n,c,u;n=findPointAlongSpline(e,i-p\/2),c=findPointAlongSpline(e,i),u=findPointAlongSpline(e,i+p\/2);let g=quickDist(n,u)\/(o.getNext()+1);for(let e=0;e<1;e++)if(i+p<1){s=a.getNext()*l;let e=findNormal3Pt(n,c,u),i=pointFrom(c,e+90+s+R.next(-s\/2,s\/2),g*(o.getNext()+1)),p=pointFrom(c,e-90+s+R.next(-s\/2,s\/2),g*(1+o.getNext()));r=R.gaussian(0,t);let d=pointFrom(i,e+R.next(-40,40),r),m=pointFrom(p,e+R.next(-40,40),r);h.push([d,m])}}return h=h.filter((e=>void 0!==e)),h}let painter,paintingLayers,currentPaintLayer,colors,eraseThisNow,pointDepositMethod,showBackdrop,showGoose,showSkeleton,chomaticGlyph,personDistributionMethod,extendedField,features=[],canvasData={},paintingData={},paintingLayerIndex=0,plotz=[],persons=[],stickmans=[],boxes=[],globalHatchFlag=!1,layerGuide=layerDefinitions(),currentPaintColor=[0,0,100],eachPersonData=[],eachHeartData=[],eachPersonToggleState=[],stateMachine=1,layers=[],personOverride=!1,localSpaceSize=[700,800],oilyness=.5,rigidness=.1,poseToggle=!1,timer={paused:!1,capturedTime:0,interval:5e3,now:0},pulse=1,eraserStorage=[],sketchify=!0,useUniqueColors=!1,glyphChoice=0,paintStyles=[],rigidValues=[0,0],colorPaletteChoice=0,colorSpread=0,baseInflation=.1,triangleHatchStyle=0,tempTimer={capturedTime:0,elapsed:0},megaCounter=0,globalPause=!1;function setup(e=!0){tempTimer.capturedTime=millis();let t=1600;extendedField=makeBBofPoint(pv(0,0),t);let n=.8333;!0===e?n=window.innerWidth\/window.innerHeight:!1===e&&(n=.8333),localSpaceSize=n>1?[t,t\/n]:[t*n,t],prepareCanvasData(),resetVariables(),frameRate(60),canvasData.pointDepositor=new PointDepositor,canvasData.lineComposition=new LineComposition(persons),painter=new ImagePainter(canvasData.pointDepositor,canvasData.lineComposition,paintingLayers),translate(width\/2,height\/2),refreshBackground()}function draw(){if(translate(width\/2,height\/2),!0===globalPause&&noLoop(),0===stateMachine){paintingLayers.filter((e=>\"humanShapes\"===e.layerName||\"hearts\"===e.layerName||\"outerNet\"===e.layerName||\"innerNet\"===e.layerName)).forEach(((e,t)=>{painter.realTimeLayerDevelop(e),noFill(),!0===e.details.erase?stroke(canvasData.backgroundColor):stroke(255,0,0),drawEveryArrSketchy(painter.allLayers[e.layerName].arr)})),stateMachine++,noLoop()}else if(!1===timer.paused)if(paintingLayerIndex<paintingLayers.length){let e=!1;if(!0===painter.layerComplete)if(paintingLayers[paintingLayerIndex].details.pulseRate===pulse||1===paintingLayers[paintingLayerIndex].details.pulseRate)if(painter.realTimeLayerDevelop(paintingLayers[paintingLayerIndex]),!0===paintingLayers[paintingLayerIndex].details.erase){let e=eraserStorage.find((e=>e.layerName===paintingLayers[paintingLayerIndex].layerName));void 0===e?(eraseThisNow=paintingLayers[paintingLayerIndex],eraseThisNow.arr=painter.allLayers[paintingLayers[paintingLayerIndex].layerName].arr):eraseThisNow=e}else eraseThisNow=void 0;else e=!0;!1===e?void 0===eraseThisNow?painter.drawLayer(paintingLayers[paintingLayerIndex].layerName,paintingLayers[paintingLayerIndex].details):painter.drawLayer(eraseThisNow.layerName,paintingLayers[paintingLayerIndex].details):painter.drawLayer(\"skip\",paintingLayers[paintingLayerIndex].details)}else R.next()>.35?paintingLayers=paintingLayers.filter((e=>\"elevateHeart\"!==e.layerName)):paintingLayers.find((e=>\"elevateHeart\"===e.layerName))||paintingLayers.unshift(interpretLayerItem({layerName:\"elevateHeart\",drawTimes:12,pulseRate:1,pauseTimer:!0})),paintingLayerIndex=0,pulse++,rigidValues[0]=(rigidValues[0]+R.next(.005,.015))%2,rigidValues[1]=(rigidValues[1]+R.next(.01,.02))%2,!0===useUniqueColors&&(shiftArrayIndexes(colors.uniquePeople,1),shiftArrayIndexes(colors.uniqueGlyphs,1)),pulse===Math.floor(paintingLayers.length\/2)&&(refreshPaintingLayers(),pulse=1,megaCounter++),5===megaCounter&&(refreshBackground(),megaCounter=0),eraserStorage=[],eraseThisNow=void 0;else timer.now=millis(),timer.now-timer.capturedTime>=timer.interval&&(timer.paused=!1)}function resetVariables(){R=new Random(tokenData.hash),R.purge(1e3),globalPause=!1,paintingData={},layers=[],eraserStorage=[],paintingLayerIndex=0,pulse=1,personDistributionMethod=R.next(0,7,!0),pointDepositMethod=R.next(0,3,!0),glyphChoice=R.next()>.12?0:R.next(1,7,!0),colorPaletteChoice=R.next(0,27,!0),oilyness=.75,megaCounter=0,useUniqueColors=3!==colorPaletteChoice&&4!==colorPaletteChoice&&5!==colorPaletteChoice&&R.next()>.6,colorSpread=0,useUniqueColors&&(colorSpread=R.next()>.2?R.next(20,180):360,oilyness=.85),showGoose=R.next()>.9,showAlien=R.next()>.94,showSkeleton=R.next()>.92,chomaticGlyph=2===glyphChoice||R.next()>.9,baseInflation=!0===showAlien||!0===showSkeleton?.3:R.next(.1,5),triangleHatchStyle=R.next(0,7,!0),eachPersonData=[],eachHeartData=[],eachPersonToggleState=[],rigidValues=[R.next(0,.2),R.next(0,.6)],generatePersonsAndBoxes(),colors=definePaintingColors(),paintingLayers=definePaintingLayers(0),layerGuide=layerDefinitions(),globalHatchFlag=!1,showBackdrop=!0,canvasData.backgroundColor=colors.paper}function generatePersonsAndBoxes(){persons=[],eachPersonData=[];let e=personDistributionMethod;e<=3?0===e?boxes=circlePackMethod({sz:[extendedField.width,extendedField.height]}):1===e?boxes=gridCellsMethod({sz:[extendedField.width,extendedField.height]}):2===e?boxes=rectSubMethod({sz:[extendedField.width,extendedField.height]}):3===e&&(boxes=circleOfFriendsMethod({sz:[extendedField.width,extendedField.height],bb:extendedField})):4===e?boxes=straightRowsMethod({sz:[canvasData.localSpace.width,canvasData.localSpace.height],boxCount:1}):5===e?boxes=straightRowsMethod({sz:[canvasData.localSpace.width,canvasData.localSpace.height],boxCount:2}):6===e&&(boxes=straightRowsMethod({sz:[canvasData.localSpace.width,canvasData.localSpace.height],boxCount:3})),0!==boxes.length&&void 0!==boxes||boxes.push(canvasData.localSpace),boxes=fitBoxesToScreen(boxes),boxes.forEach((e=>{stickmans.push(new Stickman(glyphChoice)),persons.push(movePersonToBox(stickmans[stickmans.length-1],e)),eachPersonToggleState.push(R.next()>.5)})),paintStyles=[_constrain(map(boxes.length,0,30,20,3),3,20),_constrain(map(boxes.length,0,30,3,5),3,5),_constrain(map(boxes.length,0,30,30,6),6,30)]}function fitBoxesToScreen(e){let t=getBigBB(e),n=getScalar(t.p1,t.p2,canvasData.localSpace.p1,canvasData.localSpace.p2),i=getScalar(t.p3,t.p2,canvasData.localSpace.p3,canvasData.localSpace.p2);return e.forEach(((s,r)=>{scaleArrAxis(s,t.mp,n,\"x\"),scaleArrAxis(s,t.mp,i,\"y\"),translateArr(s,t.mp,canvasData.localSpace.mp),e[r]=getBB(s,{padding:5})})),e}function removeExtraBoxes(e){return e=(e=e.filter((e=>!curvesIntersect(bbToRect(e,{closed:!1}),bbToRect(canvasData.localSpace,{closed:!1}),{closed:!0})))).filter((e=>{let t=bbToRect(e),n=[];return t.forEach((e=>{n.push(pointInsideShape(e,bbToRect(canvasData.localSpace,{closed:!0})))})),!n.includes(!1)}))}function updatePersonPoseBoxes(e,t){persons=[],eachPersonData=[],e.forEach(((e,n)=>{R.next()>.9?eachPersonToggleState[n]=eachPersonToggleState[n]:eachPersonToggleState[n]=!eachPersonToggleState[n],!0===eachPersonToggleState[n]?(pose=\"standTall\",R.next()>.95&&(pose=\"random\"),R.next()>.8&&(pose=\"standOut\")):(pose=\"squat\",R.next()>.95&&(pose=\"random\"),R.next()>.8&&(pose=\"standOut\")),t[n].strikePose(pose),persons.push(movePersonToBox(t[n],e))}))}function prepareCanvasData(){canvasData={},canvasData.padding=0,scaleAgnosticCanvas([window.innerWidth,window.innerHeight]),canvasData.localSpace=getBB(makeRandomRect(pv(0,0),{sz:localSpaceSize,padding:canvasData.padding})),canvasData.bounds=getCanvasAsBB({padding:min(width,height)*canvasData.padding}),canvasData.scalar=motherGloveScalar(canvasData.localSpace,{motherBB:canvasData.bounds,padding:0*min(canvasData.bounds.width,canvasData.bounds.height)}),canvasData.strokeWeight=1*canvasData.scalar}class PointDepositor{constructor(){this.box=makeBBofPoint(pv(0,0),1600),this.qt=new QuadTree(this.box),pointDepositMethod<1?this.depositRadial():pointDepositMethod<2?this.depositGrid():pointDepositMethod<3&&this.depositRandom()}getPoints(){let e=this.qt.getAllPoints();return e=e.filter((e=>pointInsideShape(e,bbToRect(canvasData.localSpace,{closed:!0})))),e.push(...this.depositCornerPoints(canvasData.localSpace)),translateArr(e,getBB(e).mp,pv(0,0)),e}depositRadial(){let e=R.next(30,80,!0),t=R.next(30,80,!0),n=0,i=R.next(0,20),s=R.next(3,20),r=R.next(1,20);for(let a=e;a<=quickDist(this.box.mp,this.box.p3);a+=e){n+=i;for(let e=0;e<=360;e+=t){let t=pv(this.box.mp.x+Math.sin(radians(e+n))*a,this.box.mp.y+Math.cos(radians(e+n))*a);this.qt.packPoint(t,{dia:s,minDia:s,padding:r})}}}depositGrid({gridOffset:e=!1,jitter:t=!1}={}){let n=R.next(10,20,!0),i=R.next(10,20,!0);t=!0===t?(this.box.height\/n+this.box.width\/i\/2)\/2:0;for(let s=this.box.p2.y,r=0;s<=this.box.p3.y;s+=this.box.height\/n,r++)for(let n=this.box.p1.x,a=0;n<=this.box.p2.x;n+=this.box.width\/i,a++){let i=pv(n+R.next(-t,t),s+R.next(-t,t));if(!0===e&&r%2!=0){i=pv(n+this.box.width\/10\/2+R.next(-t,t),s+R.next(-t,t))}this.qt.packPoint(i,{dia:1,maxDia:1,padding:1})}}depositRandom(e=R.next(2,20)){let t=R.next(100,500,!0),n=R.next(300,1200),i=n,s=0;for(;s<t&&i>0;){let e=pv(R.next(this.box.p1.x,this.box.p2.x),R.next(this.box.p1.y,this.box.p3.y));this.qt.packPoint(e,{dia:20,minDia:20,padding:1})&&(s++,i=n),i--}}depositTraceLines(e,{dia:t=10,minDia:n=10,padding:i=1}){e.forEach((e=>{qt.packPoint(e,{dia:t,minDia:n,padding:i})}))}depositCornerPoints(e){let t=bbToRect(e,{closed:!0});return addPointsToShapeEvenly(t,50),t}}class LineComposition{constructor(e){this.qt=new QuadTree(canvasData.localSpace),this.rs=new RectSub(canvasData.localSpace,{loops:1}),this.stickForms=[],this.extras=[],this.preparePersons(e),this.prepareOneBigHeart(),this.prepareElevateHeart(),this.packExtras(),this.createMountain()}preparePersons(e){this.sticks=e,this.stickForms=inflatePersons(e)}prepareOneBigHeart(){let e=[],t=getBB(makeRandomRect(pv(0,0),{sz:[120,120]})),n=makeHeart(t),i=getScalar(t.p1,t.p2,canvasData.localSpace.p1,canvasData.localSpace.p2),s=getScalar(t.p3,t.p2,canvasData.localSpace.p3,canvasData.localSpace.p2);scaleArrAxis(n,t.mp,i,\"x\"),scaleArrAxis(n,t.mp,s,\"y\"),translateArr(n,t.mp,canvasData.localSpace.mp),e.push(n);for(let t=0;t<30;t++){let i=cloneArrRecursive(n)[0];scaleArr(i,canvasData.localSpace.mp,map(t,0,30,1,.01)),e.push(...splitLongLines(i,6))}this.oneBigHeart=e}prepareElevateHeart(){let e=[],t=\"elevate\",n=\"heart\";0===glyphChoice?n=\"heart\":1===glyphChoice?(n=\"elevate\",n=\"punks\"):2===glyphChoice?(t=\"chromie\",n=\"squiggle\"):3===glyphChoice?(t=\"creative\",n=\"coding\"):4===glyphChoice?(t=\"node\",n=\"network\"):5===glyphChoice?(t=\"crypto\",n=\"crypto\"):6===glyphChoice&&(t=\"good\",n=\"idea\");for(let n=0;n<t.length;n++)e.push(makeLetter(t[n],pv(n*canvasData.localSpace.width\/t.length+20*n,0),[canvasData.localSpace.width\/t.length,10]));for(let t=0;t<n.length;t++)e.push(makeLetter(n[t],pv(t*canvasData.localSpace.width\/n.length+20*t,12),[canvasData.localSpace.width\/n.length,10]));let i=[];e.forEach((e=>{i.push(getBB(e.flat()))})),i=combineBB(i);let s=getScalar(i.p1,i.p2,canvasData.localSpace.p1,canvasData.localSpace.p2),r=getScalar(i.p3,i.p2,canvasData.localSpace.p3,canvasData.localSpace.p2);e.forEach((e=>{e.forEach((e=>{scaleArrAxis(e,i.mp,.9*s,\"x\"),scaleArrAxis(e,i.mp,.9*r,\"y\"),translateArr(e,i.mp,canvasData.localSpace.mp)}))})),this.elevateHeart=e}packExtras(){this.sticks.forEach(((e,t)=>{e.forEach((e=>{lineToCircles(e,eachPersonData[t].inflationAmount).forEach((e=>{this.qt.insertPoint(e,{dia:e.dia})}))}))}));let e=[];for(let t=0;t<30;t++){let t=this.qt.findRandomPointWithinBounds(R.next(10,150));if(!1!==t){!0===this.qt.packPoint(t,{dia:t.dia,padding:0,edgeAware:!0,minDia:t.dia})&&e.push(t)}}let t=R.next(0,3,!0);e.forEach((e=>{0===t?this.extras.push(makeStar(e,e.dia)):1===t?this.extras.push(makeSpiral(e,e.dia)):2===t&&this.extras.push(makeScribble(e,e.dia))}))}createMountain(){this.mountain=makeMountain()}}function makeLine(e,t,n,i){let s=[];return s.push(pv(e,t)),s.push(pv(n,i)),s}class ImagePainter{constructor(e,t,n){this.nodeNetwork=new nodeNetwork(e.getPoints()),this.lineComposition=t,this.createCoreLayers(),this.layerComplete=!0,this.nestingCount=0,this.layerItemIndex=0,this.layerItemTotal=0,this.nestedItemIndex=0,this.nestedItemTotal=0,this.lv4Index=0,this.lv4ItemTotal=0,this.wobbleNoise=new Noise1D({float:\"down\",smoothCycles:R.next(200,1e3,!0),stringLength:R.next(300,2e3)}),this.woggleDirs=[R.next()>.5?1:-1,R.next()>.5?1:-1],this.scrawlNoise=new Noise1D({float:\"axis\",smoothCycles:R.next(200,1e3,!0),stringLength:R.next(300,2e3)}),this.scrawlNoise2=new Noise1D({float:\"up\",smoothCycles:R.next(200,1e3,!0),stringLength:R.next(300,2e3)})}createCoreLayers(){this.allLayers={},this.allLayers.canvas={arr:[[canvasData.localSpace.p1,canvasData.localSpace.p2,canvasData.localSpace.p3,canvasData.localSpace.p4,canvasData.localSpace.p1]]},this.allLayers.net={arr:cloneArrRecursive(this.nodeNetwork.net)[0]},this.allLayers.netEdgeCount=extractEdges(this.allLayers.net.arr).length,this.allLayers.outerNet={arr:cloneArrRecursive(this.nodeNetwork.net)[0]},this.lineComposition.stickForms.forEach(((e,t)=>{this.allLayers.outerNet.arr=this.allLayers.outerNet.arr.filter((t=>!personIntersectsShape(e,t)))})),this.allLayers.innerNet={arr:[]},this.lineComposition.stickForms.forEach((e=>{let t=this.nodeNetwork.net.filter((t=>personIntersectsShape(e,t)));for(let e=0;e<this.allLayers.innerNet.arr.length;e++)for(let n=t.length-1;n>=0;n--)this.allLayers.innerNet.arr[e][0]===t[n][0]&&this.allLayers.innerNet.arr[e][1]===t[n][1]&&this.allLayers.innerNet.arr[e][2]===t[n][2]&&t.splice(n,1);this.allLayers.innerNet.arr.push(...t)})),this.allLayers.mountainNet={arr:cloneArrRecursive(this.nodeNetwork.net)[0]};let e=this.nodeNetwork.net.filter((e=>{let t=[];return e.forEach((e=>{pointInsideShape(e,this.lineComposition.mountain)?t.push(!0):t.push(!1)})),!t.includes(!1)}));this.allLayers.mountainNet.arr=e,this.allLayers.extras={arr:cloneArrRecursive(this.lineComposition.extras)[0]},this.allLayers.oneBigHeart={arr:cloneArrRecursive(this.lineComposition.oneBigHeart)[0]},this.allLayers.elevateHeart={arr:cloneArrRecursive(this.lineComposition.elevateHeart)[0]},this.createPersonLayers()}createPersonLayers(){this.allLayers.humanLines={arr:cloneArrRecursive(this.lineComposition.sticks)[0]},this.allLayers.humanLines.arr.forEach(((e,t)=>{let n=[];e[e.length-1].forEach((e=>{n.push(e)})),e.pop(),this.allLayers.humanLines.arr[t].push(...n)})),this.allLayers.humanShapes={arr:cloneArrRecursive(this.lineComposition.stickForms)[0]},this.allLayers.hearts={arr:[]},this.allLayers.humanShapes.arr.forEach((e=>{this.allLayers.hearts.arr.push(e[e.length-1]),e.pop()}))}checkIfLayerExists(e){return!!Object.hasOwn(this.allLayers,e)}developLayer(e,t,n){if(n||(n={}),!this.checkIfLayerExists(t)){let t=layerGuide.find((t=>t.layerName===e)),n=layerGuide.find((e=>e.layerName===t.target));this.developLayer(n.layerName,n.target,n.details)}this.generateTheLayerContent(e,t,n)}generateTheLayerContent(e,t,n){this.allLayers[e]={arr:[]},Object.hasOwn(n,\"useFlag\")||(n.useFlag=!1),e.includes(\"outlines\")||e.includes(\"Outlines\")?e.includes(\"human\")&&(this.allLayers[e].arr=createOutlinePersonsLayer(this.allLayers[t].arr,n)):e.includes(\"hatch\")||e.includes(\"Hatch\")?e.includes(\"human\")?this.allLayers[e].arr=createHatchPersonLayer(this.allLayers[t].arr,personOverride):e.includes(\"Boxes\")||e.includes(\"Rows\")||e.includes(\"Shape\")?this.allLayers[e].arr=createHatchLayer(this.allLayers[t].arr,n):this.allLayers[e].arr=createTrianglesHatchLayer(this.allLayers[t].arr,n,triangleHatchStyle):e.includes(\"ovals\")||e.includes(\"Ovals\")?this.allLayers[e].arr=fittedShapes(this.allLayers[t].arr):e.includes(\"boxes\")||e.includes(\"rows\")||e.includes(\"Boxes\")||e.includes(\"Rows\")?this.allLayers[e].arr=createDynamicGrids(this.allLayers[t].arr,n):e.includes(\"triangles\")||e.includes(\"Triangles\")?this.allLayers[e].arr=createTriangleLayer(this.allLayers[t].arr,n):e.includes(\"shape\")||e.includes(\"Shape\")||e.includes(\"Shapes\")?this.allLayers[e].arr=makeIslands(this.allLayers[t].arr,{netEdgeCount:this.allLayers.netEdgeCount}):(e.includes(\"scrawl\")||e.includes(\"Scrawl\"))&&(e.includes(\"human\")?this.allLayers[e].arr=createScrawlLayer(this.allLayers[t].arr,!0):this.allLayers[e].arr=createScrawlLayer(this.allLayers[t].arr,!1))}realTimeLayerDevelop(e){if(![\"net\",\"innerNet\",\"outerNet\",\"humanLines\",\"humanShapes\",\"extras\",\"canvas\",\"mountainNet\",\"hearts\",\"oneBigHeart\",\"elevateHeart\"].includes(e.layerName))if(this.checkIfLayerExists(e.layerName)){layerGuide.find((t=>t.layerName===e.layerName))}else{let t=layerGuide.find((t=>t.layerName===e.layerName));this.developLayer(t.layerName,t.target,t.details)}}developTheLayers(e){e.forEach((e=>{if(this.checkIfLayerExists(e.layerName));else{let t=layerGuide.find((t=>t.layerName===e.layerName));this.developLayer(t.layerName,t.target,t.details)}}))}drawThis(e,t){if(\"solid fill\"===t.lineStyle&&(stroke(currentPaintColor),noStroke(),fill(currentPaintColor),!0===t.erase&&(t.gradientStroke=!1,fill(canvasData.backgroundColor),currentPaintColor=canvasData.backgroundColor),e.length>2?drawArr(e,{closed:!1}):2===e.length&&(noFill(),stroke(currentPaintColor),strokeWeight(canvasData.strokeWeight),line(e[0].x*canvasData.scalar,e[0].y*canvasData.scalar,e[1].x*canvasData.scalar,e[1].y*canvasData.scalar))),\"solid line\"===t.lineStyle&&(noFill(),strokeCap(SQUARE),!0===t.erase&&(stroke(canvasData.backgroundColor),currentPaintColor=canvasData.backgroundColor),void 0!==e))for(let t=0;t<e.length-1;t++)line(e[t].x*canvasData.scalar,e[t].y*canvasData.scalar,e[t+1].x*canvasData.scalar,e[t+1].y*canvasData.scalar);\"pencil line\"===t.lineStyle&&(Object.hasOwn(t,\"pencilDetails\")||(t.pencilDetails={thickness:2,density:2,pressure:4,dotSize:1}),noStroke(),fill(currentPaintColor),!0===t.erase&&(t.gradientStroke=!1,fill(canvasData.backgroundColor),currentPaintColor=canvasData.backgroundColor),pencilLine(e,{enableGradient:!0===t.gradientStroke,thickness:t.pencilDetails.thickness,density:t.pencilDetails.density,pressure:t.pencilDetails.pressure,dotSize:t.pencilDetails.dotSize}))}drawLayer(e,t){if(0===this.layerItemIndex&&0===this.nestedItemIndex){if(\"skip\"===e||pulse!==t.pulseRate&&1!==t.pulseRate)return void this.advanceLayer();if(e.includes(\"human\"),this.wobbleDirs=[R.next()>.5?1:-1,R.next()>.5?1:-1],!0!==t.cullItems||e.includes(\"human\")||!0===t.erase?!0===t.erase?(currentPaintLayer=eraseThisNow.arr,this.wobbleDirs=eraseThisNow.details.wobbleDirs):currentPaintLayer=0===this.allLayers[e].arr.length?this.allLayers[e].arr:cloneArrRecursive(this.allLayers[e].arr)[0]:currentPaintLayer=getArrSubset(this.allLayers[e].arr),void 0===currentPaintLayer||0===currentPaintLayer.length)return void this.advanceLayer();this.localEraserStorage=[],this.layerComplete=!1,this.layerItemTotal=currentPaintLayer.length,this.nestingCount=countNestingLevels(currentPaintLayer),this.switchColor(\"perItem\",e,t),this.switchColor(\"perGroup\",e,t),this.switchColor(\"perSubGroup\",e,t),this.switchColor(\"perLayer\",e,t),strokeCap(SQUARE),t.erase,rigidness=e.includes(\"human\")?rigidValues[0]:e.includes(\"heart\")?.1:rigidValues[1]}if(this.nestingCount>4)return paintingLayerIndex++,!1;let n;0===this.nestedItemIndex&&3===this.nestingCount&&(this.nestedItemTotal=currentPaintLayer[this.layerItemIndex].length),0===this.lv4Index&&4===this.nestingCount&&(this.nestedItemTotal=currentPaintLayer[this.layerItemIndex].length,this.lv4ItemTotal=currentPaintLayer[this.layerItemIndex][this.nestedItemIndex].length,this.switchColor(\"perSubGroup\",e,t)),2===this.nestingCount?(n=cloneArr(currentPaintLayer[this.layerItemIndex]),wobble(n,{dist:50*this.wobbleNoise.getNext()*rigidness,dirs:this.wobbleDirs})):3===this.nestingCount?(n=cloneArr(currentPaintLayer[this.layerItemIndex][this.nestedItemIndex]),wobble(n,{dist:50*this.wobbleNoise.getNext()*rigidness,dirs:this.wobbleDirs})):4===this.nestingCount&&(n=cloneArr(currentPaintLayer[this.layerItemIndex][this.nestedItemIndex][this.lv4Index]),wobble(n,{dist:50*this.wobbleNoise.getNext()*rigidness,dirs:this.wobbleDirs})),this.localEraserStorage.push(n),this.switchColor(\"perItem\",e,t);let i=currentPaintColor;for(let s=0;s<t.drawTimes;s++)if(currentPaintColor=s<3?canvasData.backgroundColor:i,this.makeOily(e,t),\"solid line\"===t.lineStyle)if(e.includes(\"human\")||e.includes(\"heart\")?!0===t.erase?strokeWeight(1.5*canvasData.strokeWeight):strokeWeight(1*canvasData.strokeWeight):strokeWeight(.7*canvasData.strokeWeight),!0===sketchify){let i;i=sketchTest(n,{leadSize:R.next(1,paintStyles[0]),weight:R.next(2,paintStyles[1]),strokeLength:R.next(5,paintStyles[2]),scrawl:1,scrawlPRNG:this.scrawlNoise,scalePRNG:this.scrawlNoise2}),void 0===i?this.drawThis(n,t):i.forEach(((n,s)=>{e.includes(\"heart\")&&!0===chomaticGlyph&&!1===t.erase?(colorMode(HSB),stroke(map(s,0,i.length,0,360),100,100)):stroke(currentPaintColor),this.drawThis(n,t)}))}else stroke(currentPaintColor),this.drawThis(n,t);else stroke(currentPaintColor),this.drawThis(n,t);if(2===this.nestingCount?this.layerItemIndex++:3===this.nestingCount?(this.nestedItemIndex++,this.nestedItemIndex>=this.nestedItemTotal&&(this.switchColor(\"perGroup\",e,t),this.layerItemIndex++,this.nestedItemIndex=0)):4===this.nestingCount&&(this.lv4Index++,this.lv4Index>=this.lv4ItemTotal&&(this.nestedItemIndex++,this.lv4Index=0,this.nestedItemIndex>=this.nestedItemTotal&&(this.switchColor(\"perGroup\",e,t),this.layerItemIndex++,this.nestedItemIndex=0,this.lv4Index=0))),this.layerItemIndex>=this.layerItemTotal){if(colorMode(RGB),!1===t.erase){let n=eraserStorage.find((t=>t.layerName===e));void 0!==n?(n.arr=this.localEraserStorage,n.details=JSON.parse(JSON.stringify(t)),n.details.erase=!0,n.details.wobbleDirs=this.wobbleDirs):(eraserStorage.push({layerName:e,arr:this.localEraserStorage,details:JSON.parse(JSON.stringify(t))}),eraserStorage[eraserStorage.length-1].details.erase=!0,eraserStorage[eraserStorage.length-1].details.wobbleDirs=this.wobbleDirs)}else{eraserStorage.findIndex((t=>t.layerName===e))}this.advanceLayer(),this.wobble=new Noise1D({float:\"down\",smoothCycles:R.next(200,1e3,!0),stringLength:R.next(300,2e3)}),!0===t.refreshLayer&&e.includes(\"human\")&&(poseToggle=!poseToggle,updatePersonPoseBoxes(boxes,stickmans),this.lineComposition.preparePersons(persons),this.createPersonLayers(),delete this.allLayers.humanHatch,delete this.allLayers.humanOutlines),this.checkForTimerPause(t)}}advanceLayer(){this.layerComplete=!0,this.layerItemIndex=0,this.nestedItemIndex=0,this.lv4Index=0,paintingLayerIndex++}checkForTimerPause(e){!0===e.pauseTimer&&(timer.paused=!0,timer.capturedTime=millis())}switchColor(e,t,n){Array.isArray(n.colorStyle)?currentPaintColor=[123,234,12]:n.switchColor===e&&(t.includes(\"human\")?(colorMode(RGB),currentPaintColor=colors.people,!0===useUniqueColors&&(currentPaintColor=colors.uniquePeople[this.layerItemIndex%boxes.length])):t.includes(\"inner\")?(currentPaintColor=colors.inner,!0===useUniqueColors&&(currentPaintColor=colors.uniqueInner[R.next(0,colors.uniqueInner.length,!0)])):t.includes(\"outer\")?(currentPaintColor=colors.outer,!0===useUniqueColors&&(currentPaintColor=colors.uniqueOuter[R.next(0,colors.uniqueOuter.length,!0)])):t.includes(\"heart\")?(currentPaintColor=colors.glyphs,!0===useUniqueColors&&(currentPaintColor=colors.uniqueGlyphs[this.layerItemIndex%boxes.length])):(currentPaintColor=colors.outer,!0===useUniqueColors&&(currentPaintColor=colors.uniqueOuter[R.next(0,colors.uniqueOuter.length,!0)])))}makeOily(e,t){R.next()>oilyness&&\"solid fill\"!==t.lineStyle&&(currentPaintColor=e.includes(\"human\")?R.next()>.1?colors.people:colors.paper:e.includes(\"inner\")?R.next()>.1?colors.inner:colors.paper:e.includes(\"outer\")?R.next()>.1?colors.outer:colors.paper:e.includes(\"heart\")?R.next()>.1?colors.glyphs:colors.paper:R.next()>.1?colors.outer:colors.paper)}}function refreshPaintingLayers(){for(let e=2;e<paintingLayers.length-5;e++)if(paintingLayers[e].layerName===paintingLayers[e+1].layerName){let t=R.next(4,paintingLayers.length,!0);paintingLayers[e].details.pulseRate=t,paintingLayers[e+1].details.pulseRate=t+1,paintingLayers[e].details.cullItems=1===glyphChoice&&R.next()>.4}}function refreshBackground(){if(background(canvasData.backgroundColor),!0===showBackdrop){painter.realTimeLayerDevelop({layerName:\"outerShape\"});let e=cloneArrRecursive(painter.allLayers.outerShape.arr)[0];void 0!==e&&(fill(colors.out_fill),noStroke(),e.forEach((e=>{addPointsToShapeEvenly(e,10),wobble(e),drawArr(e)}))),painter.realTimeLayerDevelop({layerName:\"innerShape\"}),e=cloneArrRecursive(painter.allLayers.innerShape.arr)[0],void 0!==e&&(fill(colors.in_fill),noStroke(),e.forEach((e=>{addPointsToShapeEvenly(e,10),wobble(e),drawArr(e)})))}}function makeLetter(e,t,n){let i=n[0],s=n[1],r=[];switch(e){case\"a\":r.push(makeLine(0,s,i\/2,0)),r.push(makeLine(i\/2,0,i,s)),r.push(makeLine(i\/2\/2,s\/2,(i+i\/2)\/2,s\/2));break;case\"b\":r.push(makeLine(0,0,0,s)),r.push(makeArc(i\/2,.25*s,i,s\/2,PI+HALF_PI,TWO_PI+HALF_PI)),r.push(makeArc(i\/2,.75*s,i,s\/2,PI+HALF_PI,TWO_PI+HALF_PI)),r.push(makeLine(0,0,i\/2,0)),r.push(makeLine(0,s\/2,i\/2,s\/2)),r.push(makeLine(0,s,i\/2,s));break;case\"c\":r.push(makeArc(i\/2,s\/2,i,s,QUARTER_PI,TWO_PI-QUARTER_PI));break;case\"d\":r.push(makeLine(0,0,0,s)),r.push(makeArc(i\/2,s\/2,i,s,PI+HALF_PI,HALF_PI+TWO_PI)),r.push(makeLine(0,0,i\/2,0)),r.push(makeLine(0,s,i\/2,s));break;case\"e\":r.push(makeLine(0,0,0,s)),r.push(makeLine(0,0,i,0)),r.push(makeLine(0,s\/2,i,s\/2)),r.push(makeLine(0,s,i,s));break;case\"f\":r.push(makeLine(0,0,0,s)),r.push(makeLine(0,0,i,0)),r.push(makeLine(0,s\/2,i,s\/2));break;case\"g\":r.push(makeArc(i\/2,s\/2,i,s,0,TWO_PI-QUARTER_PI)),r.push(makeLine(i\/2,s\/2,i,s\/2));break;case\"h\":r.push(makeLine(0,0,0,s)),r.push(makeLine(i,0,i,s)),r.push(makeLine(0,s\/2,i,s\/2));break;case\"i\":r.push(makeLine(i\/4,0,i-i\/4,0)),r.push(makeLine(i\/2,0,i\/2,s)),r.push(makeLine(i\/4,s,i-i\/4,s));break;case\"j\":r.push(makeLine(0,0,i,0)),r.push(makeLine(i-i\/4,0,i-i\/4,s\/2)),r.push(makeArc(i\/4,s\/2,i,s,0,HALF_PI+QUARTER_PI\/3));break;case\"k\":r.push(makeLine(i,0,0,s\/2)),r.push(makeLine(i,s,0,s\/2)),r.push(makeLine(0,0,0,s));break;case\"l\":r.push(makeLine(0,0,0,s)),r.push(makeLine(0,s,i,s));break;case\"m\":r.push(makeLine(0,s,i\/4,0)),r.push(makeLine(i,s,i-i\/4,0)),r.push(makeLine(i\/2,s,i\/4,0)),r.push(makeLine(i\/2,s,i-i\/4,0));break;case\"n\":r.push(makeLine(0,0,0,s)),r.push(makeLine(0,0,i,s)),r.push(makeLine(i,0,i,s));break;case\"o\":r.push(makeCircle(i\/2,s\/2,i,s));break;case\"p\":r.push(makeLine(0,0,0,s)),r.push(makeArc(i\/2,s\/4,i,s\/2,PI+HALF_PI,TWO_PI+HALF_PI)),r.push(makeLine(0,0,i\/2,0)),r.push(makeLine(0,s\/2,i\/2,s\/2));break;case\"q\":r.push(makeCircle(i\/2,s\/2,i,s)),r.push(makeLine(i\/2,s\/2,i,s));break;case\"r\":r.push(makeLine(0,0,0,s)),r.push(makeArc(i\/2,s\/4,i,s\/2,PI+HALF_PI,TWO_PI+HALF_PI)),r.push(makeLine(0,0,i\/2,0)),r.push(makeLine(0,s\/2,i\/2,s\/2)),r.push(makeLine(i\/2,s\/2,i,s));break;case\"s\":r.push(makeArc(i\/2,s\/4,i,s\/2,HALF_PI,TWO_PI-QUARTER_PI)),r.push(makeArc(i\/2,s-s\/4,i,s\/2,PI+HALF_PI,PI+TWO_PI));break;case\"t\":r.push(makeLine(0,0,i,0)),r.push(makeLine(i\/2,0,i\/2,s));break;case\"u\":r.push(makeArc(i\/2,s-s\/4,i,s\/2,0,PI)),r.push(makeLine(0,0,0,s-s\/4)),r.push(makeLine(i,0,i,s-s\/4));break;case\"v\":r.push(makeLine(0,0,i\/2,s)),r.push(makeLine(i,0,i\/2,s));break;case\"w\":r.push(makeLine(0,0,i\/4,s)),r.push(makeLine(i,0,i-i\/4,s)),r.push(makeLine(i\/4,s,i\/2,0)),r.push(makeLine(i-i\/4,s,i\/2,0));break;case\"x\":r.push(makeLine(0,0,i,s)),r.push(makeLine(i,0,0,s));break;case\"y\":r.push(makeLine(0,0,i\/2,s\/2)),r.push(makeLine(i,0,i\/2,s\/2)),r.push(makeLine(i\/2,s\/2,i\/2,s));break;case\"z\":r.push(makeLine(0,0,i,0)),r.push(makeLine(i,0,0,s)),r.push(makeLine(0,s,i,s));break;case\"0\":r.push(makeCircle(i\/2,s\/2,i,s)),r.push(makeLine(i\/2+sin(-QUARTER_PI)*i\/2,s\/2+cos(-QUARTER_PI)*s\/2,i\/2+sin(PI-QUARTER_PI)*i\/2,s\/2+cos(PI-QUARTER_PI)*s\/2));break;case\"1\":r.push(makeLine(i\/2,0,i\/2,s)),r.push(makeLine(i\/2,0,i\/4,s\/4)),r.push(makeLine(0,s,i,s));break;case\"2\":r.push(makeArc(i\/2,s\/4,i,s\/2,PI,TWO_PI)),r.push(makeLine(i\/2+sin(HALF_PI)*i\/2,s\/4+cos(HALF_PI)*s\/4,0,s)),r.push(makeLine(0,s,i,s));break;case\"3\":r.push(makeLine(0,0,i,0)),r.push(makeLine(i,0,i\/2,s\/2)),r.push(makeArc(i\/2,s-s\/4,i,s\/2,PI+HALF_PI,PI+TWO_PI));break;case\"4\":r.push(makeLine(i-i\/4,0,0,s\/2)),r.push(makeLine(i-i\/4,0,i-i\/4,s)),r.push(makeLine(0,s\/2,i,s\/2));break;case\"5\":r.push(makeLine(0,0,i,0)),r.push(makeLine(0,0,0,s\/2)),r.push(makeLine(0,s\/2,i\/2,s\/2)),r.push(makeArc(i\/2,s-s\/4,i,s\/2,PI+HALF_PI,TWO_PI+PI));break;case\"6\":r.push(makeArc(i\/2,s\/4,i,s\/2,PI,PI+HALF_PI+QUARTER_PI)),r.push(makeLine(0,s\/4,0,s-s\/4)),r.push(makeCircle(i\/2,s-s\/4,i,s\/2));break;case\"7\":r.push(makeLine(0,0,i,0)),r.push(makeLine(i\/2,s,i,0)),r.push(makeLine(i\/4,s\/2,i-i\/4,s\/2));break;case\"8\":r.push(makeCircle(i\/2,s\/4,i,s\/2)),r.push(makeCircle(i\/2,s-s\/4,i,s\/2));break;case\"9\":r.push(makeCircle(i\/2,s\/4,i,s\/2)),r.push(makeLine(i,s\/4,i,s));break;case\"-\":line(0,s\/2,i,s\/2);break;case\" \":break;default:break}return r.forEach((e=>{translateArr(e,pv(0,0),t)})),r}function makeArc(e,t,n,i,s,r){let a=[];for(let o=s;o<r;o+=TWO_PI\/360)a.push(createVector(e+sin(o-HALF_PI)*n\/2*-1,t+cos(o-HALF_PI)*i\/2));return a}function makeCircle(e,t,n,i){let s=[];for(let r=0;r<TWO_PI;r+=TWO_PI\/360)s.push(createVector(e+sin(r)*n\/2,t+cos(r)*i\/2));return s}",
  "tokens" : [
    {
      "hash" : "0xae5c389e3d45fa137672e38ae5b4f518b140343fe1e3038a40a8554e02dd5ac4",
      "id" : "78"
    },
    {
      "hash" : "0x8e75b763e6c2fd81982ccb527078659b8fe08f53e14f826c2d44edd5d9496dc5",
      "id" : "784"
    },
    {
      "hash" : "0x69ae9f73314de2a74c83e1d74db086343a6c4b0dc99f05c07a4cf0e5221fcac1",
      "id" : "246"
    },
    {
      "hash" : "0xa94a6615d2dc971ddf4c8dd4dc8bfd5a7a5ae1cfe4753f4081bd0cb9ddbd5a87",
      "id" : "313"
    },
    {
      "hash" : "0x2454a8d8b0afe2863d8e2cd8ac09821ac78fe638a9b4c9cdfd60949e70faffb1",
      "id" : "640"
    },
    {
      "hash" : "0x55a94b943f32e9a7c5a1cbab065a6bd62ebcab03241255b473373e4a61eb0189",
      "id" : "180"
    },
    {
      "hash" : "0xa0a33a0eab591b5d28dc34afa197096e22d072f67f4d17c56929bcec302fa10d",
      "id" : "244"
    },
    {
      "hash" : "0x449a390ad6406c58a9be0b654f9f66387ffd2a3d12f5386677362f5f2ccc0a02",
      "id" : "821"
    },
    {
      "hash" : "0x94adaf1d884122d4753872a6c0ab87556633b54eecc1918627ad23781957a6c4",
      "id" : "698"
    },
    {
      "hash" : "0xf4e4a78e235285d0a7f02b7fd54cf232d614d274d935369f07fdc643ef918ec6",
      "id" : "818"
    },
    {
      "hash" : "0x9b1b2f92e94034d8c7d8cc86526e1224f827991dafb2bbb22f1988eca19bdd74",
      "id" : "690"
    },
    {
      "hash" : "0x7f223a95c0b1373b5459b227405c4427115285d4c3f9471878ae7c11fa43c009",
      "id" : "39"
    },
    {
      "hash" : "0xfc599b8bb40a9939608de6bc332c7cf952040af67ba28bab2405e150d54c0e1c",
      "id" : "852"
    },
    {
      "hash" : "0xf323b3536d2fb718c70a6244dd2c225134a7509198c3c6709761fa22e2d104eb",
      "id" : "292"
    },
    {
      "hash" : "0x9d08d7445cfc48888a20797cf5b2152aed00bf40887368d4efec1bbc68da4009",
      "id" : "700"
    },
    {
      "hash" : "0x88bc5da2be1e3354f6bc59f0029f58d3cbc468ff7822c2e17952cd9367b82b27",
      "id" : "174"
    },
    {
      "hash" : "0xeb65e20f91d53a7a0bc08aaf29246fccd7b3fa893e9698c1298a517e09da28e5",
      "id" : "419"
    },
    {
      "hash" : "0x6df59010505c86582ec92de171973cb53934aa9dbc4d4bdc78a70f352ad588b9",
      "id" : "932"
    },
    {
      "hash" : "0x6f4e99611534d344e2efb76836aaa59350a96a3b8dddf45e04aad53dca418adb",
      "id" : "492"
    },
    {
      "hash" : "0xf320eb622c1886d8194ce9c99eff5d1488c377393a9dc5995c7a92af4dd84145",
      "id" : "804"
    },
    {
      "hash" : "0x32226a139abc4bb9f912fc122f3edac604168cb2eabed858e0c9d20f850c08e1",
      "id" : "417"
    },
    {
      "hash" : "0x1bb9a0e4e4520ab01dd02f4830078740485e4977367e5f855072064f0f9442e7",
      "id" : "229"
    },
    {
      "hash" : "0xc15b703bab2c4ea975f4f2664bd593477bad12f2736c5c24a4aaedbfee3cdc04",
      "id" : "223"
    },
    {
      "hash" : "0x829caea80c001cef133dfb565358bb8e98b13f08b67b438a83371d1283a37784",
      "id" : "753"
    },
    {
      "hash" : "0x6ecde5d301d90ebbeaa5a62b4b256971feb0cad4098cafc6109430022dd1c15b",
      "id" : "319"
    },
    {
      "hash" : "0x542b74a155fc0b49d8295eafad2de7b7c596af4a80149ea3328e9725473bd3f7",
      "id" : "402"
    },
    {
      "hash" : "0xbf707fdec22b3168980418fa7a997c217848afa92059389b9a41009d5e8b1182",
      "id" : "314"
    },
    {
      "hash" : "0x8f9e4fc5caa8618345cbd7ca8cf67fa953962e0b704b12d3eef23d1fcc2ae02e",
      "id" : "882"
    },
    {
      "hash" : "0x1bf05ef4bafaac1d5490e2d9e5f3761c565462d7d6d4bac938301ed2d6370015",
      "id" : "280"
    },
    {
      "hash" : "0x513dae9ba7a0483da4b0406f157f704b193cede649b853e5f9c8f809d54b651c",
      "id" : "738"
    },
    {
      "hash" : "0x5c7e7755946f7342fa1d368053347c15f4e17f7e0992875a693f4eb08f25614b",
      "id" : "594"
    },
    {
      "hash" : "0x68591d746204628b9f0d0d12c0b1e2577304fb29056d38263e7b0957eb2e7c25",
      "id" : "724"
    },
    {
      "hash" : "0x37aa76656636e9ef65b6c6d4e6ec6905e613ad1c0c1a5d0d0eff0e21c5257f4f",
      "id" : "757"
    },
    {
      "hash" : "0x707790818f4036c4e32f0c4c7160b4229ce95f24658635e1ab7d8963de75b5bf",
      "id" : "232"
    },
    {
      "hash" : "0x74ba94bd577b074d3d9cb58b3e9b8b13828eb0720bbba82fbb82f1eeb4457ba3",
      "id" : "40"
    },
    {
      "hash" : "0x0a51ad1268684e8ea51456929e821f8530493c42842a3b57b406413d96d033d1",
      "id" : "998"
    },
    {
      "hash" : "0xafe121a4164366e408b34c78a6257f5dbe1028ceadd0b0c209414a504d4d2bf0",
      "id" : "23"
    },
    {
      "hash" : "0x54703e33204d9bb64013b55ddf2701e19aba1fbcd581309fbe17604eadd9c228",
      "id" : "464"
    },
    {
      "hash" : "0x4c3917b87933d1fda7974390ce850c53d0ee0e10143e97aadbfba62310e71b27",
      "id" : "877"
    },
    {
      "hash" : "0x36deef324af3832d3cdf266b0e729e8b268f0d2dd92c69ddd0df3e326c68651d",
      "id" : "61"
    },
    {
      "hash" : "0x4ed0ec735d11e5ac0beef86e97095f2393a0924d6be47c0390a78e6e0361e576",
      "id" : "349"
    },
    {
      "hash" : "0xc6fced64d661de9508b850d6a9281ee8aaedf439cd96cce1a990b17acebd1006",
      "id" : "490"
    },
    {
      "hash" : "0xa9c2d0ef5f51175dec312ba3d78d1a60b73a52b1ad53120f20465c02f5eea36c",
      "id" : "622"
    },
    {
      "hash" : "0xeb6a4c89abef1e06361da00ec2882125d938f82728fb0e3fdea87e4bcd462e24",
      "id" : "423"
    },
    {
      "hash" : "0x81b3a0b8a5a84cbe2ef6f4debd3a95edbd99638abc0229c86ef6ae188c7b41c5",
      "id" : "897"
    },
    {
      "hash" : "0x8f91da356257996008d40c0a69f57666acec545699ab2f128bca4d44d621d192",
      "id" : "691"
    },
    {
      "hash" : "0x8de2ee36587fa5ec2ee0aaf0d473736ba71c7daae9eb5fc03934caee74a12745",
      "id" : "657"
    },
    {
      "hash" : "0xac53394acfc4a415d0f3b95ac69c444a0d5adeb2f11d1747ff06483b2ff430d6",
      "id" : "453"
    },
    {
      "hash" : "0xf6c08f32bc89250ff12b1c6173148b28014f2e4c2610a7d542eb34bb39de40a5",
      "id" : "780"
    },
    {
      "hash" : "0xf0beedcec0f7e8768efa64d468bc734eb38c61b6784d2e55cd28fc17c8bc3e7c",
      "id" : "347"
    },
    {
      "hash" : "0x7f4099758a168a0d5fae288f6a24ddab7bfc28e4d6fae7b812df92ce25d03c90",
      "id" : "762"
    },
    {
      "hash" : "0x86b337243910ffb8d03a05d098926600f8f763c278dbc9531b138fefe9dcd0e3",
      "id" : "43"
    },
    {
      "hash" : "0xe767a74903645584d6ee451999b00d56b151c8d7cd42b943dff96280103fb9b8",
      "id" : "515"
    },
    {
      "hash" : "0x6146e47bf29c41590e2c75ba1ccbf1883dc3615bb9190bdab552d62f5523265c",
      "id" : "304"
    },
    {
      "hash" : "0x3fdc649a1e29b1c28073653262359c3558845ad00a44f042df1a37e3777d3c3e",
      "id" : "12"
    },
    {
      "hash" : "0xb1c23098dd791b156006c6ae4a1b6c0b38d36faf67bf695786b5c68a1b6a6777",
      "id" : "604"
    },
    {
      "hash" : "0xe8768099ecb6b7c20e166d6854b60c57c1cff89eb4559ae64acd3c3e2aa93b29",
      "id" : "788"
    },
    {
      "hash" : "0x690c8d476d92b37790d3cd406a7be4fd0e78e27029d6177359aa0f843a209e0f",
      "id" : "352"
    },
    {
      "hash" : "0xafa0d10c0390a463f6f88a1c2a571745a97bc0528929c79f4c748113dc99a3fc",
      "id" : "293"
    },
    {
      "hash" : "0x70dd8666ea145622e65eefd797d5438f266da7be3b95b8563f4dd74e254a768c",
      "id" : "87"
    },
    {
      "hash" : "0x40ea661a8634824078d58099b0459cf4e33e0c226b222d424c8b8d2f6a8261ff",
      "id" : "41"
    },
    {
      "hash" : "0xc5e50d213cf094f003ea0b780721e2ab645ea9e633b15e20ffcec19d7d5b63f8",
      "id" : "912"
    },
    {
      "hash" : "0xdbb512ed82db12caf73e9d9e57a0691e703e6a4dfc1e63eafaab126153156370",
      "id" : "986"
    },
    {
      "hash" : "0xa1e2aedaa061ddf7f89850980d14c732727834f21d059976e2ad4adf039d0af6",
      "id" : "173"
    },
    {
      "hash" : "0x20befca1a71cb6296fe5a4b6cbeb3e011e8c300ee0278da96a37b0e5fbc8db54",
      "id" : "321"
    },
    {
      "hash" : "0x69387f7ec4622c056ec6b4e6d1e513bf9c6ae9d69a1f0e817829b012dac4dead",
      "id" : "252"
    },
    {
      "hash" : "0x7dbc21e12085806a5fff9a8bb1156df960f3b7a025544a4944e17eb1820ac030",
      "id" : "253"
    },
    {
      "hash" : "0xe5beb9052ec3f7029f1f15e38f50a48615b082d2d7cb26ee3b3b9a77436ecc6f",
      "id" : "609"
    },
    {
      "hash" : "0xdb1613f23ea4024d579604018524a14609c9e36ce26f153d069d38ecfd7dd00b",
      "id" : "634"
    },
    {
      "hash" : "0x2381d04cfb500c4b05280927f46f97d3685b96ba23543b6081eb801f9f200d7b",
      "id" : "623"
    },
    {
      "hash" : "0xb281966850b00e15583dae9bf48c75789d4d0421dcbc5f375d8ee8c517ebe099",
      "id" : "456"
    },
    {
      "hash" : "0x5ce57f2a55d360c7d0e452f0193a380a5861101faf4b29d87c97005fcf5dca0c",
      "id" : "960"
    },
    {
      "hash" : "0xa3bc0709ae0e33d6ddda92b74479bf0c51c0bc9f0409ae31b8bf42b622d768eb",
      "id" : "203"
    },
    {
      "hash" : "0x07088c2d549d36d9281cb6f1fc70a5de5a413528fe745f3f4185649e12f7898a",
      "id" : "285"
    },
    {
      "hash" : "0x4953cabbb09ec6492517c6552d76ee29cf51f137f23eba70946ee07d5a4da249",
      "id" : "723"
    },
    {
      "hash" : "0x20cc57b34066e3117b0941474e7b608ea103b2ab7c113c9da81aad70cfd4211c",
      "id" : "563"
    },
    {
      "hash" : "0xaa5b39abb67bbce3678d6e17add9775f3d5ff7db7b797b116adff9e91157a298",
      "id" : "21"
    },
    {
      "hash" : "0x7afa5df17418f1de418eb26596e2611a4c8b18dc7fa3e918e1aad53803d373d2",
      "id" : "641"
    },
    {
      "hash" : "0x31f16ae703a3342589e474525364c7e6ca7635848b4c132d455b9f07343f83de",
      "id" : "113"
    },
    {
      "hash" : "0x35868ccc8b0b4f6347e00cf31f77c27a5abac27741c5ae39abdbd700478994b5",
      "id" : "475"
    },
    {
      "hash" : "0x4811a4ff36aa0c355f141ecccaed22fa75b3a247ba7020cdc86beea6b6039553",
      "id" : "883"
    },
    {
      "hash" : "0xab30db6d01612983212dd11c92ac9ab8c86a19db66cf7fd62bd37f4793af07e9",
      "id" : "871"
    },
    {
      "hash" : "0x44fbaedb777c92e09118a7ce1608e1ba65dd7533bb0a2bd36c743cd01f82e980",
      "id" : "271"
    },
    {
      "hash" : "0x7fd275497215c84dbb5ab283bd298f6d5f22942859e3bd6a765db110fc5674b4",
      "id" : "474"
    },
    {
      "hash" : "0xd13d6a2368c3d1a991e5299ae795a30376b43a2d724a7ff1ceb0aba7c0f2adfa",
      "id" : "625"
    },
    {
      "hash" : "0x85011c255b0052e3f0da852819120455022d58852fe7d58b395a42b7d550ede8",
      "id" : "84"
    },
    {
      "hash" : "0x6e0328bb22c7d0489fec5668fabf1250eabbc2f7105a3f8116817956660e850a",
      "id" : "56"
    },
    {
      "hash" : "0x91a5a2b63b5df3437b5dc90f01e3dba3655118eae0947822f40d1e4cfe7065c3",
      "id" : "388"
    },
    {
      "hash" : "0xbe87aa16dc8551e4b6e065f472895575d26bcda8ac164a7c30e8afa1c827fa6e",
      "id" : "242"
    },
    {
      "hash" : "0x43a75d7d8955e37075630cc15f910180c897591f7993361a72678dbbfe77ce3a",
      "id" : "303"
    },
    {
      "hash" : "0x3488eff43bb8f6f86a83ba69d03dd27ef38cf66e9f4cd6ae956288bf7cf5ff4f",
      "id" : "527"
    },
    {
      "hash" : "0xa87bb911df89f12e9252e0a4c251e51429c46d17446c8a4c3f33b42a1447429b",
      "id" : "265"
    },
    {
      "hash" : "0x2c1f5312fa2446d3c43a2461d0881506d546565b2f4629ef9bccc77f1fbafe4a",
      "id" : "772"
    },
    {
      "hash" : "0x7667a6edd66f046ea85fabd9b0c77af4d2f47f410a9475bf3d0061a40eb9b593",
      "id" : "488"
    },
    {
      "hash" : "0x2c3e1b79ba62f56ca42b0577eed14e90079b3dc5a83eb2e6956b657cac880dd2",
      "id" : "697"
    },
    {
      "hash" : "0x4a18f2be0a098e81cd8a82747a6e7d59c5e0a7b5d6c652e4e490af0cb3c53f5e",
      "id" : "870"
    },
    {
      "hash" : "0x61ef1ce1a9580dabbae513cb531c8f95f3fe5ca6dc16bcc3e8fccef854c42251",
      "id" : "712"
    },
    {
      "hash" : "0x710d6a0ea42972b31f40e71c46e224385e2ae571303ebe47e61f1cde26a11041",
      "id" : "199"
    },
    {
      "hash" : "0x246f9655c10dd598f1f9aba54ba0af7e251eb556dbfa2280e8356d6a0127b143",
      "id" : "489"
    },
    {
      "hash" : "0x41365b7efdd277a4722ce76b5263de1598e2795f8bf7175bf6d20d2ed5aa9a04",
      "id" : "840"
    },
    {
      "hash" : "0x59d3c1148b9548e5fa2c7efb554c9df899d47260be480cb203e8178183a0ef76",
      "id" : "613"
    },
    {
      "hash" : "0x894bb911181713f399af5c974fe30b48c0a4d75cc7bc7610cbe1f2556d616e19",
      "id" : "363"
    },
    {
      "hash" : "0xfcfba5038da7fd19275fe78010730bc693a97dbd774769c2d4dc8edab5551093",
      "id" : "627"
    },
    {
      "hash" : "0xdc9849b434025343c0618c961e57fcfaed4c9c32600c6b04c8a2e0881212e2fa",
      "id" : "415"
    },
    {
      "hash" : "0xd3345451dfa7fbc19b0fbd91e1a3d824f3e288f679515369a09ba80574352dd2",
      "id" : "4"
    },
    {
      "hash" : "0xd04fcc1457a144dde660cfab5ba16998247ce4ffc64180f0013d3d2a91df5af6",
      "id" : "277"
    },
    {
      "hash" : "0x8900aa5a5e995c928ff8e58bb1d3aab8f0c89dd38252b28e9862f6679301ce72",
      "id" : "181"
    },
    {
      "hash" : "0xe4f144827910ab0f6dc1f6cda6ab26999f83ffe3509345f5c878e4945ee5ac98",
      "id" : "338"
    },
    {
      "hash" : "0xadab7c931d53e17cb0a8ec5df85d93a1154c91e19d7e020f314493165c032813",
      "id" : "305"
    },
    {
      "hash" : "0x1750dcf556cc1b5799fd6491a00969c3919e5979e6e352e951b62b5d24b65356",
      "id" : "428"
    },
    {
      "hash" : "0x83d69ccb4db2d92371148c1f166f26fd14c765969017b80fe94e4e35c35844d0",
      "id" : "440"
    },
    {
      "hash" : "0xe88586bd5fe703c09380371ebdf78beec82bf49f79ba8c989c43a3b00f7d1f4c",
      "id" : "953"
    },
    {
      "hash" : "0x44c9c18b7f6a9d12c749bf28186b2c298dfcab0fb654c3fd1e68df2674079ee3",
      "id" : "377"
    },
    {
      "hash" : "0x565430b642d256fa26466937c5150bd17efd8b87555b79d3c15780219685f3de",
      "id" : "662"
    },
    {
      "hash" : "0xb333dd3461874d6fee04581f483830cfa4af24e299553b518b5e03a5c726d2c6",
      "id" : "719"
    },
    {
      "hash" : "0x0cc052d7f2fd4446ae3ec4ce2472d8cda7b7fd042669e65b99341cf0aa0cdce8",
      "id" : "632"
    },
    {
      "hash" : "0x88ddeeaa39adaf44436fd2cfe361ff9505830bec7648a927b5dd81c165a20eee",
      "id" : "189"
    },
    {
      "hash" : "0x4540dd8c718d93c20608f577eb156b77c4b923aee5f7c3203a5a27c49d579bb6",
      "id" : "718"
    },
    {
      "hash" : "0x9aad0e18b89d0944c6007bbb82d403caaf8d9d96bdeac3279a246c83c43ccb18",
      "id" : "673"
    },
    {
      "hash" : "0x7e159dc7fa9d58e860e250d538f1147d4ab27f322d012742ac4bc5a8665b961c",
      "id" : "775"
    },
    {
      "hash" : "0x8042d78bfcf9aaeb2cc56766a635dc8c34e3c1aef270d10a8fb58ff96554ac76",
      "id" : "601"
    },
    {
      "hash" : "0x084d9cb97937fbb8f3d7a250ccd1706416782ca8972b0076ab75827975016a02",
      "id" : "360"
    },
    {
      "hash" : "0xd115316e3536bb0ec526fdf4218ac7d09b8d97974573cfa4231486aaa1853909",
      "id" : "590"
    },
    {
      "hash" : "0x5ee894b35706f31e0f1a06284fd4757e14307b421fdbdd0fb9adfbc8fa60280f",
      "id" : "74"
    },
    {
      "hash" : "0xd004dfd45451e51a20a3c98d8d86cdc3754cdf71e2509245ca9901db5d7c1e9b",
      "id" : "328"
    },
    {
      "hash" : "0x0deeea9e1a3e8b1127d2c7aeb1b761960b78a189d5fcc9a1118615542cfdfbff",
      "id" : "387"
    },
    {
      "hash" : "0x8e4fc4e89bf3747cdf4d68e4b58469cb04bbc9a23d6cc3ea20b11457dc469272",
      "id" : "459"
    },
    {
      "hash" : "0x8627780bd32346e880cc0e281eb4748aeb61c71970839d800a084d2882c80d9b",
      "id" : "721"
    },
    {
      "hash" : "0xf850ca6faec85ef2c7a52755ceade6acd853f186428e86d461d8722054b139c5",
      "id" : "445"
    },
    {
      "hash" : "0xf6313a5f22f038bed594ad2512f6c59adfd048ef2d44dcf12ed82a1d3d3e4a32",
      "id" : "183"
    },
    {
      "hash" : "0x0ccbe360b8ea29416469064b956375cb42a357761fc9450cda7bfe511f64b06b",
      "id" : "18"
    },
    {
      "hash" : "0x429d04636e12abd347aac7c8214dceff88ca08175d591179e3abb59d17d3aee0",
      "id" : "500"
    },
    {
      "hash" : "0xcfc9592bb76f758d32df7c3fd465667336b44e35e44d62ba9859b6c23609aa8c",
      "id" : "848"
    },
    {
      "hash" : "0x736022a36769b89180fd6389c192db0e0eaea7c71cdf49b51ad95634012ec054",
      "id" : "830"
    },
    {
      "hash" : "0xe1eb46163927952abfee0c1883cf014d4843204d2c5f0f6078483702754c5a43",
      "id" : "224"
    },
    {
      "hash" : "0x95f2ebeef24ac78ce1b2dc34657100dd62f3e6ba192c54f2dc75583cbe182890",
      "id" : "584"
    },
    {
      "hash" : "0x5a276bc328c5dbbe59f6d6f0c7a5e4cc54e74a53b96c35e03ad55b6a76f40421",
      "id" : "926"
    },
    {
      "hash" : "0xa519af8d7a8b3dd1aabd002827306e7cd9d751f6c3ca3e3440c0fbee92cedc55",
      "id" : "574"
    },
    {
      "hash" : "0xbba56859c68be9881340c23ba72fdba42d8b3f36d46fe2d55350507b8b6825e4",
      "id" : "472"
    },
    {
      "hash" : "0xd1d03ebdc2631be553ac94bd640625107c0f504358647a7b6892ec0bb3ab1637",
      "id" : "605"
    },
    {
      "hash" : "0x3e1a191995e499308381ae6821b893123954a262bc356568b4db23172300b4ca",
      "id" : "422"
    },
    {
      "hash" : "0x91ed145d8359b3b2741ab7aacba637bc2138c11f8632f222099c4ca7a4ac5a8f",
      "id" : "178"
    },
    {
      "hash" : "0xb8c5f1d190aff99d0a142b77bd552c915586948da6f09e4ec565b96ecbca1809",
      "id" : "951"
    },
    {
      "hash" : "0x091d42a8517fb9be754ba617dc52e5c52bfe3d67bd022b0d9f07cb4fba01facb",
      "id" : "787"
    },
    {
      "hash" : "0x428e8936914a6276787d37ccc8b1f11d164fccc58be47aa87a01dc6abd0cba72",
      "id" : "747"
    },
    {
      "hash" : "0xa27135c9a2802a96c30bec777b3ff34294882af218748cd4623889430017f6ad",
      "id" : "947"
    },
    {
      "hash" : "0x110542fb061890e334a3ac4365cb08f95711feade598d0417eada09a79794748",
      "id" : "888"
    },
    {
      "hash" : "0x9aabbbd31e5b98496c1751463b7dc405570b0847e66ddecbb8df80920a7ec805",
      "id" : "828"
    },
    {
      "hash" : "0x620b2c15629777720e685dd162b7bc125d002f8722710885eef81185352e24cc",
      "id" : "689"
    },
    {
      "hash" : "0x31d323042992be24d6e84051fe9a3c7102e59b302091e4ffd61124dae9412169",
      "id" : "629"
    },
    {
      "hash" : "0xb4f2706898e27ec57adab8e871bbe4c5709387862498802e7d3b5b0d0a6d0a4b",
      "id" : "663"
    },
    {
      "hash" : "0xe0192c8c420a745df36f5b828acabfcb200f14426f4229a93eb4087903f18e45",
      "id" : "868"
    },
    {
      "hash" : "0x8bb12433e8830933703596b96080fd620728a90c50645bcc4a9fd0e6a1e8afe9",
      "id" : "832"
    },
    {
      "hash" : "0x0ddc52bc333e82adbe5f6e1a9d5dd58dcb15f5282bcae5f1e8524caba4165a3b",
      "id" : "924"
    },
    {
      "hash" : "0xcadc2eefb7602a678dfddfd71f068129d5b8b4c6e6b6b93a0751ac7945aa7705",
      "id" : "969"
    },
    {
      "hash" : "0x184cf54ca13b71d535a86508a4ca1d4676f29808c81d117bc019b7874ce5ca8c",
      "id" : "668"
    },
    {
      "hash" : "0x9b1466bc199ff5f5dc3cd677e408b548653149aab8838117361408897136df08",
      "id" : "814"
    },
    {
      "hash" : "0x13519519037c829e2fbee635bcbcb03b19a984bb0ed116cac8b8ff4bc39d2c2c",
      "id" : "569"
    },
    {
      "hash" : "0x1a661fa4882a4f4be9d2a5d0f033fb20c0b338b5f2b5e1d30e436824b3f1260f",
      "id" : "216"
    },
    {
      "hash" : "0xffac7e1f79fb2f506c952a98831d719a55539d4ec0ca3e48bc6886762e65c7d6",
      "id" : "944"
    },
    {
      "hash" : "0x2018720818247ad5f4a1186a47e8ac8969bb93b0648ada0086111b11ac35ce33",
      "id" : "270"
    },
    {
      "hash" : "0x5e69746553e69ad3376d1441f056761785afe0322f91711955dff5b404eeed41",
      "id" : "952"
    },
    {
      "hash" : "0xe1f5cc8cf15511dbbd4c976b1572fbc333c0378c1e2b9c3a52fa0896ccbf1874",
      "id" : "296"
    },
    {
      "hash" : "0x2c32be5a61150c3eeb8e9acafd7992143ff548c8a8925847a8810ecc5138883f",
      "id" : "225"
    },
    {
      "hash" : "0xec1a0b4582c69cc2eb22f1d605f572b87b7477b2f75f2f6cf8b8e65ab2a914e9",
      "id" : "227"
    },
    {
      "hash" : "0xc91fb5c565bad91d7c35055930d1f1b994f2d5fd33746f5f09d6c36727cce28b",
      "id" : "482"
    },
    {
      "hash" : "0x82efa052bf7f61f1892ed6e4ed3b91b143c89cba1dbd3e265e30b3050e694de1",
      "id" : "392"
    },
    {
      "hash" : "0x0a9df9e610632c41e8ad1bf44cacd747cb6786ba27c9c630df4d1012802602e0",
      "id" : "507"
    },
    {
      "hash" : "0xb8db852ef256cca5095e89816fa64ef1bbfa663b9897679c3141d948ad650ea7",
      "id" : "849"
    },
    {
      "hash" : "0x3e8f0106eed61911ab7c8b10fe8b49819ccb8e9e512d95e9938a53c99d470ba8",
      "id" : "995"
    },
    {
      "hash" : "0x459118a4c32d026e327b7d1a9c21528ffb2c8f15ebe8ccbe275c5e8d8eea3b6a",
      "id" : "839"
    },
    {
      "hash" : "0x81fc58383ba84558e280f4c373fa28864146b2a7ec95d912012054de4b69497e",
      "id" : "83"
    },
    {
      "hash" : "0xe6d19f1c551399641c74eb315cbc5aaf74b3628d8f6b575ecc56c7a0a49bcfb6",
      "id" : "412"
    },
    {
      "hash" : "0x56b7d5fb6d2e814761ecc213e970085be3943d708101d041239bfc13001cb7c0",
      "id" : "148"
    },
    {
      "hash" : "0xd816aabe9ca19f3aaa92d044e5d100fe5b98e4d71ce767fbfb7ed7edd7ecc71e",
      "id" : "478"
    },
    {
      "hash" : "0xe461842fe499415b83d62a045bec4ab48ecc4ae12b64e8da6d9f6e20f4ca8671",
      "id" : "966"
    },
    {
      "hash" : "0x7887df34f070b5fbeb64f135184fc325935d69693b8d6c8c5babb1c98e83ddf5",
      "id" : "898"
    },
    {
      "hash" : "0xb8d311868d0046b2c27283d51d8454224df30735a6bcf7ee9906f1c0532cd4ae",
      "id" : "778"
    },
    {
      "hash" : "0xdef79c04763ca9cb0d0f1121dd0c1395d240da6689e0c13b95d98b383d1f053f",
      "id" : "501"
    },
    {
      "hash" : "0x6a58ebafb873248a0ab35fb072abd250fbbd4c9197df981e1b4c797f6725c65b",
      "id" : "560"
    },
    {
      "hash" : "0xef1b43d90d1f0b8a458aa6606b42a167c972a21c531f099e0a90b0a74d87303f",
      "id" : "833"
    },
    {
      "hash" : "0xbac4e2c7e8460f2ddb8941860ed8fd21246896ce71faefc3a3bfc71722c6177b",
      "id" : "929"
    },
    {
      "hash" : "0x8489be416df23db7dbdcb10391a68e6e1334fde260200143f8c7194f422fbd35",
      "id" : "983"
    },
    {
      "hash" : "0x61149d8cba48a93d0e16946b33c66e9975eb4eb8b5b7b657465d81fae475887e",
      "id" : "893"
    },
    {
      "hash" : "0xb02cc0ea38f084974835c91e0ba23ae98ebeb95a5a834a9b672ee55b133f5e0e",
      "id" : "680"
    },
    {
      "hash" : "0xfea98af1cea1b7f1755f481461b58d463dc0d78f6cd63b5cbbbf5ec1afd9f56b",
      "id" : "431"
    },
    {
      "hash" : "0x514fe1ec5b0004dbbe2237ef21a38ff80cb0aec297e48477be20ad51a244ad94",
      "id" : "316"
    },
    {
      "hash" : "0x27d967747fec3c31aa46f518478405578053c38e3b3b761846579333667838d3",
      "id" : "324"
    },
    {
      "hash" : "0x59ee1b78aab4b23a9c4000a445c840c1522e0a990c69539ab86b3e4b4f562523",
      "id" : "737"
    },
    {
      "hash" : "0x066457d265699608247f1f6dcf006dd932f79e324670d415adf2ce2e3893468a",
      "id" : "931"
    },
    {
      "hash" : "0x4faed7152b3c627b920a2e2c9f93e0d1c1b8310fbbe1efb9e580313211619bcf",
      "id" : "917"
    },
    {
      "hash" : "0xabe417433ded1097fcdc966d80334585a765c971f5c5f110cba85690e64a112d",
      "id" : "471"
    },
    {
      "hash" : "0x7777c468bd34d1eed97fbc30200d83f95dce7cc622523f03c588e10508756608",
      "id" : "681"
    },
    {
      "hash" : "0x80b0e530ae660a872a1588b6cc4586dc3d692047b5069a40f38275f1c9875dfc",
      "id" : "791"
    },
    {
      "hash" : "0xad1fac037ae55d2759f5990463a939e4005f3fca0e7d70f97b9e2503795bb7f6",
      "id" : "911"
    },
    {
      "hash" : "0x100f45c6c05efc1cd79142b6802ba373bf0da411d10a9d6c518aadaefcb215f0",
      "id" : "752"
    },
    {
      "hash" : "0xa34ad522f9088c803dcc3246b0d13bdb85bf882f6cd9f73b8e40ee6cb3f3beae",
      "id" : "561"
    },
    {
      "hash" : "0x237ed4711a64fd597292450a090841cb28daf5b2b5d4c4bea78970ef4f075524",
      "id" : "250"
    },
    {
      "hash" : "0x829b60c1fd82b0bd1adb23c64f37cfc8f0f33fc9e7747d17b26759a2a71ae51f",
      "id" : "985"
    },
    {
      "hash" : "0xa0fc88bd19b2923ff751011f8890f24598ae44753585ddd8d9230826cae36486",
      "id" : "826"
    },
    {
      "hash" : "0x8ffec6cdf30b8960a65e6d8db2ead50a30fac6e95f79ff86dda3874ac5cadb6f",
      "id" : "959"
    },
    {
      "hash" : "0xcd1c5cfcb99739e41c93c0e6ba57f5397b34d64b25cdece196b73978ca3091c2",
      "id" : "802"
    },
    {
      "hash" : "0x4b952ec6b50e44929260147a266b638da958b0d99ae6ae1159837d3ff1dd28b2",
      "id" : "540"
    },
    {
      "hash" : "0xaa5cccbe97cf15635c4bfb93b108a9001cff0b55693c517ae91e09fbff1bc6c0",
      "id" : "335"
    },
    {
      "hash" : "0x90824722f1cea9d10960bf90e5f964ad9481db28f5840b09e938f0d4349338ea",
      "id" : "288"
    },
    {
      "hash" : "0x47820c787557571380aca916f498f48eac25ec20f6fbe3ae49b09adb1f1984c5",
      "id" : "514"
    },
    {
      "hash" : "0x5269721cae649e5ffae24f34e3b399d09769f874503d31e87c6c9301b45a5c0a",
      "id" : "241"
    },
    {
      "hash" : "0xa241f65cc3d1fd5bf16792d416a60fae7c0dc083e555bae421be4c38a275c100",
      "id" : "846"
    },
    {
      "hash" : "0xf4e4a100aa2436e4c0b125be10c416e4a5a49ba6837c5be7b6b25d4394479dce",
      "id" : "491"
    },
    {
      "hash" : "0x99c4d650fa8271f952f5cafa468aacc058d60be235703bf486c251f171034710",
      "id" : "582"
    },
    {
      "hash" : "0x22e3cc2e5abd90acab9622d1a9822ba23944e2940808588fe68d07ee04dc2eed",
      "id" : "522"
    },
    {
      "hash" : "0x7b5980030fb1d31bebe7aed2c844fbfe5d92d9dccc3e8cc976add74ba2ab5439",
      "id" : "703"
    },
    {
      "hash" : "0x8572410c0e4fabf868592462cc489d9c9fbd1e368c21ee40de61850d389df9f8",
      "id" : "891"
    },
    {
      "hash" : "0xbba28d01e7abac7a3fbf2192c70209abe0db60f8361f136e7c7aca90c69f3005",
      "id" : "750"
    },
    {
      "hash" : "0x7eec6ed38dfe7f1e0250e0916bcd4bf68a5b4224fb477e8ed1af374861e83385",
      "id" : "345"
    },
    {
      "hash" : "0x442204b8323ad07821f7956170fae66174c67c1da7026aa43431e21d7f06c624",
      "id" : "716"
    },
    {
      "hash" : "0x736ae9b8890b1a2b7324b07aa8baaa3c6f0df4f28b3c46dfc4c7f3fa47135e76",
      "id" : "894"
    },
    {
      "hash" : "0xb8609d7bcc6cd1e4cab00bb745eb266c5a6f060b72baef6bdb63aa641e10dac5",
      "id" : "816"
    },
    {
      "hash" : "0x540a9c591c4b1579225dc45d920d66ea9cd3d9a2871bb83b688d9fb2efeb4c4f",
      "id" : "90"
    },
    {
      "hash" : "0x05c56d5f0174c2349e1ef3425d319189881271394c05075ee755b6e0dde93aba",
      "id" : "949"
    },
    {
      "hash" : "0x50eb3d4ba83ed42a231832b85d3686dac0c9218b9ff44fa3b6a3e05f8d84d209",
      "id" : "899"
    },
    {
      "hash" : "0x50e946a8302382c6979c4304bbaa283d943da2f1cddd78161b0f8af14ce4840d",
      "id" : "67"
    },
    {
      "hash" : "0xaacec021a35d429ad110e7cf8c52bb604d698b7ca7bed33245be9307f79d35d6",
      "id" : "854"
    },
    {
      "hash" : "0x51edca86812c9fc3885f49256de947ea51a5d6519d69f0a5e4677840f35baad0",
      "id" : "630"
    },
    {
      "hash" : "0x209eb705b57dd0a3ff4d8452f313ba46f3466b6ef9085d5fac8c41185c5d397b",
      "id" : "937"
    },
    {
      "hash" : "0xc2ab319dab777c60255fffb3c01c736f1e00dd58fd78a03f2aec02a723874811",
      "id" : "89"
    },
    {
      "hash" : "0x250955b2fc8e160f09b399ae4db20b39f2ed553dabc121636778c7f7669efa9c",
      "id" : "192"
    },
    {
      "hash" : "0x54b3dade3396706ecf5940dfec79330771c92660c60a824625ff3cecd3cbc48e",
      "id" : "340"
    },
    {
      "hash" : "0xdd145053c0a114d8af51968b438cae9fb17efb46ec6ab432a3e9602bf20cef62",
      "id" : "537"
    },
    {
      "hash" : "0xbeaaace0de97d92038d6cdcb5dee0c5f3f916e121bddde236723fc2320ee15d2",
      "id" : "811"
    },
    {
      "hash" : "0x8f400c11b080d9dd35da48864db107f35aacbfb0c6b67a66bfb72755d50fcacc",
      "id" : "194"
    },
    {
      "hash" : "0x08bd93a3640ddc08c08d1e6c4b4038b9fb5558dee12dea50a1bcf3279c944479",
      "id" : "717"
    },
    {
      "hash" : "0xf71cde46c30ac995405b7c4d4227910a5d8c7f5e54adc5b6159b11ac35b84e59",
      "id" : "790"
    },
    {
      "hash" : "0xdf4c830b4058fde06ea3d6eff1ae672b655c6a0bd94090fb5907a25fcf41524d",
      "id" : "768"
    },
    {
      "hash" : "0x040d46a7968ee54da935370c746da06f69cbf87db7d4b751872b925e91b60fa9",
      "id" : "810"
    },
    {
      "hash" : "0xd75d27528d4e8b8539ec1202b6edb89dbc376ee697cc3c6314cff22f2a36b8fc",
      "id" : "508"
    },
    {
      "hash" : "0x1d9b83e595e1ef339903081a98a3e1d6cd9a509f18447236c8541644c93eec7b",
      "id" : "977"
    },
    {
      "hash" : "0x440a05c0bf800d0a73792d741342ea7e6b4ad3ea86f5ab2d4e797bae41c0f23c",
      "id" : "763"
    },
    {
      "hash" : "0x8d73f13d734c33f28fa4ee3c1b6bbd7ddbcee328a31392e163f3cd99f50406e7",
      "id" : "962"
    },
    {
      "hash" : "0xf62ba6527d426b3a48147c6e1c2829945fd021a7e6b7f27cb32308e0167ade76",
      "id" : "759"
    },
    {
      "hash" : "0x7a13a20e1a56f32955bd58ada4e6116fb901e02b8e5cc52d791bf0f2943eb544",
      "id" : "60"
    },
    {
      "hash" : "0xbda9a0f9d07761691930271c250504b368eef9fc9b3c3700e7a0b91a7cf1946c",
      "id" : "535"
    },
    {
      "hash" : "0x2bcab0e6cce2a1f79382d72ff2bb07e1cfc418701e1120777dfa686e936afe04",
      "id" : "942"
    },
    {
      "hash" : "0x45044ee3413e25bcd29d74679ada4f90cbef13208e491c7c8d02a89536771c8b",
      "id" : "614"
    },
    {
      "hash" : "0x38c5b7823d150747f8ee2d0a3dd5a471181b6e0e31f2f20b2e9eb4e7ba8389b6",
      "id" : "272"
    },
    {
      "hash" : "0x3834291be73b3d878d0fe0f0cadcc64bca8a5087818f5ddabd9e825796855002",
      "id" : "543"
    },
    {
      "hash" : "0x63e2fc184a259a89cda9f438f55931b29b4c47e004d5020dc85f18e9025e1bcd",
      "id" : "822"
    },
    {
      "hash" : "0xad7251d8dfe3b157046881530d1568bc90cbf19878ef9dc3e50fdf48a84bea1d",
      "id" : "3"
    },
    {
      "hash" : "0x4fb01df69a67120e661026cd7f8b189b08ac0d47d13e5fb9d09c832b16743490",
      "id" : "77"
    },
    {
      "hash" : "0x2d080945382563f5b01879c099e980bb469ae38a1a83078f66c9ef6ddac774b5",
      "id" : "251"
    },
    {
      "hash" : "0x7f366af6b4fb6cf17ae5e9dc4a943defddbf04a60f141bcca93c043b6ac02a54",
      "id" : "438"
    },
    {
      "hash" : "0xdf043a9fda237099f076bc2ebc05d52944a630c16909b9cf0f9ef178810b122a",
      "id" : "933"
    },
    {
      "hash" : "0x5af05ae474fa68f5d2cc389f99484e8a658a95487643db4c9dd3a0aa003881ae",
      "id" : "603"
    },
    {
      "hash" : "0xc696ed8d6df03a573372657945aa296ad2245f06c4e936648c9c9c11e6d10675",
      "id" : "997"
    },
    {
      "hash" : "0x2b63cea676e7b151f1f9fcbc2021f29e35abec31a104eb9cc8056b7526a212af",
      "id" : "24"
    },
    {
      "hash" : "0x27270571eeb18da89da0f796b3af8d623e6ad54e5a98df19330bddccbe23c25a",
      "id" : "665"
    },
    {
      "hash" : "0x95a385a902880ea7a3e0a80538b7bbe70279032d469612524e244cf7944bbf83",
      "id" : "92"
    },
    {
      "hash" : "0x9e84f1dafaadb6da1954493574482c2a7dcca4b6ec11fda8ff61c00028ddd541",
      "id" : "179"
    },
    {
      "hash" : "0x91aefb1abe6f610bb5bebde16b142002cd013bea458ccb6c8ccdd539d9e92fae",
      "id" : "531"
    },
    {
      "hash" : "0x70ec8b98dfcab2e1dd53dc4216690cfb6cd84b54ae5e024a228239cecb57a1a6",
      "id" : "396"
    },
    {
      "hash" : "0xa64037b1cbdbefb8054b0112f09aec402aef87219b03c823feefcabb9409dfd3",
      "id" : "27"
    },
    {
      "hash" : "0x5ec80c7bf3349dea3a94cc37c45249265ff0975f27ea9da96bcf07f35fe6a02e",
      "id" : "616"
    },
    {
      "hash" : "0x009ac4de6661629697b106736a78f69f688b7b1082a74ba026f1f3f6deee9551",
      "id" : "696"
    },
    {
      "hash" : "0xde4dde1ee663ece4d4ee3b7b1622cbe35ddaf69068b20127398b47cf79279080",
      "id" : "859"
    },
    {
      "hash" : "0x87f825ddc9bf7dca4e5b61b954a7d4eb3b9895d1586c0640f0358e80b76d1a7d",
      "id" : "198"
    },
    {
      "hash" : "0xb9441439f2d1f44f3982333b3ddad5df186e9355ed842fd14c72bb5005db5f4f",
      "id" : "262"
    },
    {
      "hash" : "0xb7153da61e0f7d855be9852c7dd3735e3c2b6093da557d9d2d366331d92144a6",
      "id" : "669"
    },
    {
      "hash" : "0x0745efb614a8e46a4e29637a168480648ec2c1f5319b6108117f847866f82bc1",
      "id" : "581"
    },
    {
      "hash" : "0xaf34dc210808b2124fd33f3afad502e772c0f20e568cc387ab813e182c6e6949",
      "id" : "972"
    },
    {
      "hash" : "0xf8e2dea1e7144d5b446823c850181107403fa5a39e81a984bdac7a5129087498",
      "id" : "903"
    },
    {
      "hash" : "0xf7c0114d22fe2652bff5973865feb5e07648414ccb4334961e806dfa3b6be481",
      "id" : "28"
    },
    {
      "hash" : "0x85ff667a7a2c1ee846b9c00ef7ddaebd4812c9f46aa8607eefbd9f4398844da3",
      "id" : "34"
    },
    {
      "hash" : "0xa51ba5c04756b8e9d39acac778a63e096c075de04f7bfb0e11ba01de9773e638",
      "id" : "35"
    },
    {
      "hash" : "0xbd47fba3c036abc988bfba9e32b1de4bfb408e23fdfbd1e27a8e67878d6e370e",
      "id" : "310"
    },
    {
      "hash" : "0x43051eda5b9321546d2736bff98c8fdd06f0429adacd1b155f26f55a5e194a81",
      "id" : "881"
    },
    {
      "hash" : "0x3da773ab301c6869d95b758063dfeba339b3e696adbe4329bb10bf1207287084",
      "id" : "462"
    },
    {
      "hash" : "0x74687ea665de32dd8da0fbeb7335fb98b9a1a7d94be8ea6c556cfe30ef7d3d36",
      "id" : "580"
    },
    {
      "hash" : "0x5be6bd5e6d8d6299591899020ef0961b8be13262ad8af7232475e2574e77b7ca",
      "id" : "258"
    },
    {
      "hash" : "0xa52de429df21e08a41d6c7f1717a6389a8cbb96448df0a053f4ce1f72f86544a",
      "id" : "214"
    },
    {
      "hash" : "0xf6b964f04531ece9163508d26ec9205f39b4e297f7b6ca0d83f536f1ab299227",
      "id" : "519"
    },
    {
      "hash" : "0xceeb3f43be9cebe748de7cbb5d45f5e00197a9def14ab3afa9a275fc1772f679",
      "id" : "620"
    },
    {
      "hash" : "0xad720982f8edb591f9f9ebe22593a1e36e09f1f84219b97dc92087aae59fc5be",
      "id" : "649"
    },
    {
      "hash" : "0x769ffdee8c7df435ee72d3054d00c43ea1d09521ad384bdd6cf0036f839cb4c3",
      "id" : "648"
    },
    {
      "hash" : "0x3c83554492c433b08fe01b65196ff6c4cb979d33d927c5d4c7a6f43c510cf6d0",
      "id" : "770"
    },
    {
      "hash" : "0xb68f5da3eb4c7abe7fbf87f45daba1a69ddcee04577b8ecf9576d687c8c7fd3c",
      "id" : "652"
    },
    {
      "hash" : "0xdc50775efea2b724590ea41a5a3d43cf878e1682e36ef8d2e7f28ebec3aec93c",
      "id" : "653"
    },
    {
      "hash" : "0xa3ef0176c824cc9ffe419a5b12aa236ea9053f5f085a1b34012a3e749566c579",
      "id" : "981"
    },
    {
      "hash" : "0x6f0439ddf21b11333a6e68181348e22cf75458ab73972751419a0d0a9e2ecc32",
      "id" : "318"
    },
    {
      "hash" : "0x55eae28e981a8871edd5f2d48adb047dc871f7cf0256f7988d2ce2e8e7dba406",
      "id" : "666"
    },
    {
      "hash" : "0x555fcdd58160dc1a6f3bf322635f52f3daeeff80760ccffa94b0bcba8f6f5a06",
      "id" : "803"
    },
    {
      "hash" : "0x86af3a9a47bc8dcefc6161205f626b5ff1b10db3ceeb78cc42b4da0712494eca",
      "id" : "834"
    },
    {
      "hash" : "0x37cead6881eb80e720680b5edfdde6dddd00c39a402dfc64e1515891a8b305ec",
      "id" : "231"
    },
    {
      "hash" : "0x43d43ae59e8cf65a4ee7e2b4d4a2bddb1b79138ba94491f67bb090038954765c",
      "id" : "15"
    },
    {
      "hash" : "0xe9f5ab2c7066519d0af1eb79e41194f52a94f810e3f4f1c0c7cabec8bc46ce49",
      "id" : "233"
    },
    {
      "hash" : "0x92cf26361ada7b32a1a84be40dc8877ca28404bd07a56507cac531f382b37389",
      "id" : "14"
    },
    {
      "hash" : "0x413919c91d6dc724c621fae0e9fb293bda4bd6a78e054c023a20cd84ae132fac",
      "id" : "249"
    },
    {
      "hash" : "0x75acb8f649858dbc31023ba4f6c4967d8e32448474bb57491a9a857cbb16290f",
      "id" : "221"
    },
    {
      "hash" : "0x7a2e25a0a86c81f4f9fe8f706ad4df6316e19e740ef24daa521f273ce3f81678",
      "id" : "306"
    },
    {
      "hash" : "0x25531b4722494c5933f2ce27d39e50289d68e214a1d2abc90abdb361a5add0da",
      "id" : "860"
    },
    {
      "hash" : "0x1a009d56dc98bd02787d5a31ff54c2e41fc7c7670b4f6819077dfdaec6795255",
      "id" : "266"
    },
    {
      "hash" : "0xeb106285d22ca64deaef3bb3f1d0c41c949814fc873d5f03e5cda2e2dc9bf526",
      "id" : "701"
    },
    {
      "hash" : "0xf2a7351db3ffe9382ec470060b0860fb7d925e611b9ecf9c453570d4d3e78815",
      "id" : "54"
    },
    {
      "hash" : "0xfbf5456474b48b6c8b1857dba43041191557b0cd0a7df05a4e67f5907f8bc075",
      "id" : "273"
    },
    {
      "hash" : "0x219a03083c52fbd1de95de1df26de71f45683b026d7de4d00a72080b100a12e2",
      "id" : "361"
    },
    {
      "hash" : "0x0add701f526027dcc5f2b4d7b4a9755a2627f138b2b3fd412286c4bbda42053c",
      "id" : "469"
    },
    {
      "hash" : "0xe7a8da601be202e55c43c1976ba800e3aa7e708c80d852e06f5fab361be75368",
      "id" : "141"
    },
    {
      "hash" : "0x92c06d08913e6cc49b24f8d274030e46985a9aa637265e0ca46df18d48badb08",
      "id" : "368"
    },
    {
      "hash" : "0x36f2dc57edb48680d94b9d12f0b3cd3258bca1bc3cd39ac6989ec2d8fdec7c63",
      "id" : "346"
    },
    {
      "hash" : "0xe96c1dc67f1eddbe58e11cde35a6ca047c19d45e2dcc6eb6fe6dd72c89cd735d",
      "id" : "47"
    },
    {
      "hash" : "0xcacaae502a4edd0011c41d60c33b6e3c22db6c6ec4cf4b412b92b152b425b3df",
      "id" : "55"
    },
    {
      "hash" : "0x1cbad758834aaf1b436fe3feefa30d6886a920fd8bbe693f21c622cdce09c1c4",
      "id" : "48"
    },
    {
      "hash" : "0xcd81150101f9e5297074efc37e4e65f433a8b2c46c286301c41b227550044856",
      "id" : "49"
    },
    {
      "hash" : "0xeb16891f53516a5aaa5e6914f6f9ccb2b1f51df2d47cefef6d7f42441fe20ab6",
      "id" : "866"
    },
    {
      "hash" : "0x2fad13303eecd6eedceae8027ece9b666032782909e853634d69080f70cc6a6d",
      "id" : "874"
    },
    {
      "hash" : "0xf94ffd75af28ed196826bc960b209360d027ba8d8a4108b0b82a66094c3265e5",
      "id" : "915"
    },
    {
      "hash" : "0xb0b0cce84e190966bf8acf7620532e6b39af870fcd1b609d5fa00fa4ed56548d",
      "id" : "927"
    },
    {
      "hash" : "0xf1acd657ee6bbae91062508652888e4eb5ff5c8260e8fe78e3ea2b36e440665d",
      "id" : "935"
    },
    {
      "hash" : "0xc9907c9f8751ae4f9ff0307a7802e07e2645d3f9053423e89725a40274cf18ea",
      "id" : "948"
    },
    {
      "hash" : "0x82c5a053aca69c45a76a26e3b6e12555e2d97a6efa95d94960cb67c454d8c10a",
      "id" : "57"
    },
    {
      "hash" : "0x59c5b3e147fb6794d3b31266d43b61daacb3fa3b8e9baa1888b180810c7d8d12",
      "id" : "59"
    },
    {
      "hash" : "0x71c6012068bc60a4a9aeb1615d3e182ff4871b7a910a116e8d5347dc819869f4",
      "id" : "58"
    },
    {
      "hash" : "0x372b14f0da2d069fb96fdf79484cfe9843ae8bbd9ee808f0e8881c32c986a902",
      "id" : "294"
    },
    {
      "hash" : "0x18b8116d444048ad7ccf160e8dd110ae5db81b4f88951a6e5f03b8432f1a003c",
      "id" : "62"
    },
    {
      "hash" : "0x85112c0a25c9850e98c04bd7ef70950bdc5fed0f6b52a8918e822e919bf5daab",
      "id" : "65"
    },
    {
      "hash" : "0x6cdd4fb2cd60e91b0dcc99c84f6af61192232276cbd00111d144173457856575",
      "id" : "66"
    },
    {
      "hash" : "0x4c893fe4e78636a28bcf52061fc6a9e835153bff89cdd13aa831532bd6f0e6e0",
      "id" : "69"
    },
    {
      "hash" : "0x81784b968814e6fa244febffcca794cfa5c6f33a5487061390fc0cabe2684e7f",
      "id" : "70"
    },
    {
      "hash" : "0x7be0850d806ff700dda02e453a365ea5726d20681bcd38132fa8da6780ffdab0",
      "id" : "80"
    },
    {
      "hash" : "0x08efddce8933428afedce025544417c3022a5cbce90ce02996194f7a595f5c8e",
      "id" : "72"
    },
    {
      "hash" : "0x1992640798b1568b7d56352393f3d2e38fa859010ee292e989f1cff8dbb1a8b9",
      "id" : "73"
    },
    {
      "hash" : "0x2797d6fc28e4cfc6fe62452646acd89dab345dd37902028b389a1cd45c2493e1",
      "id" : "75"
    },
    {
      "hash" : "0x7ad46587cf0a16a393b6c265e6e56a528daf0d40db8373d9fdaaab27799bf6fa",
      "id" : "81"
    },
    {
      "hash" : "0x393721154cb7d9d8e33f54e7f24e833ec4a87ec94667c1bed7ee96b83e7a9e68",
      "id" : "82"
    },
    {
      "hash" : "0x0811efc25ddd6afce375aa96ea23f4923c2d05b4acfcc3e9b270da9c94b50924",
      "id" : "86"
    },
    {
      "hash" : "0x096d41dab9ba42ec2eea5e67ad5c5db82544ab07411c684516998d13f526aac4",
      "id" : "93"
    },
    {
      "hash" : "0x4d1901317e794cd8311ac6017262ba38b5d81eb0951b27235f9a8881c8a7cac2",
      "id" : "162"
    },
    {
      "hash" : "0x8c134c39c89ea0a82bf66f928877c224048327720ab463dac1697db4dcd162db",
      "id" : "163"
    },
    {
      "hash" : "0x6fcacafb701ec43de1c69e2f5ecbba65d8b08c3b5f766c04f3134a124ce078c0",
      "id" : "33"
    },
    {
      "hash" : "0x99c9727094eae688cda58bc30e4a5dd29769e72af506321fb716794d7ad72f93",
      "id" : "98"
    },
    {
      "hash" : "0x6f019fb3c517bf55c879fcd1ec82a896f9807e85b3f5dd3fce9bf3b52c534ec6",
      "id" : "19"
    },
    {
      "hash" : "0x737148b41afaa038e37f181123adce8292037c6f540ab1c6df708ba3254c197d",
      "id" : "100"
    },
    {
      "hash" : "0x4ca47f7ac63bf95da9bb0779ecbd58ee1efc11c8e50dc293c1790f917780f132",
      "id" : "101"
    },
    {
      "hash" : "0x3333c97dda95d8305cb964b6c2e720f6d6c4e5630608a4b2e0164ff12923022d",
      "id" : "164"
    },
    {
      "hash" : "0xbbc7e4d4264ab08233873866c0ad694c1004973516c47d6f9807806529eb671d",
      "id" : "102"
    },
    {
      "hash" : "0xa4efeacd60679198228868e7d531459c0017fc1383f124e358c24bfb07a404ec",
      "id" : "103"
    },
    {
      "hash" : "0x10ac529c03b3d8bc94302a9dd746811f9ece379b049f9ef38d35a4f753f55299",
      "id" : "105"
    },
    {
      "hash" : "0x50ea76296d3559c1bc176521eda94f5953395f776558953d62b91680a71ba210",
      "id" : "104"
    },
    {
      "hash" : "0x790072732a82330052431a5a3b5d38e92f0035170c997736c4902c3a74c9a0d0",
      "id" : "106"
    },
    {
      "hash" : "0x8ec6096794a19ce200988deb829fb8cda4cef5052af446a65b37d66407fbc65e",
      "id" : "107"
    },
    {
      "hash" : "0x6b9c8176df0f9130a2751af0bbe7b28fb3e291c8285e735419e87a60ed9690de",
      "id" : "168"
    },
    {
      "hash" : "0xfe441f1af79bd0ef90e54ad9591275d44f95c5be46dddebd0d253a270759238e",
      "id" : "108"
    },
    {
      "hash" : "0x1f769b3067aafe22fa225715dba054b39db119eee2ebacd82fb8601ba3c22033",
      "id" : "110"
    },
    {
      "hash" : "0x48de92b79a4f1ed1a27e347f95e18c3b1acbf96e4f199ebafc32ef4138633e44",
      "id" : "111"
    },
    {
      "hash" : "0xde147bea12b494db40e3b6b13684ef256917f661ba72da2e4f4309c0b184ec25",
      "id" : "112"
    },
    {
      "hash" : "0x5d5fcb467b5f2324b826e8f76226e09611aa7be629c86edc5b7ac5357d87674f",
      "id" : "114"
    },
    {
      "hash" : "0x0232da4681889f79249680e1ffc591d62984e953b82df64a977b1f09278c5d2d",
      "id" : "115"
    },
    {
      "hash" : "0xbf2dbbaf775b9732818af83af7c8499427db96586744630f245b5cf5dd71546d",
      "id" : "116"
    },
    {
      "hash" : "0x675b757f50641f602cfc4c34cd449821461ef7e1d78cf7096635a76ae67868c5",
      "id" : "117"
    },
    {
      "hash" : "0xade65a6e3a4785317f48d0f77a1b8312de484c1e04b3a8ec69975ef16c7fdd43",
      "id" : "119"
    },
    {
      "hash" : "0x3b1a073d4c9b90d506abf96ae31d46333a384a36d36bd7d797cef38a36bdaa52",
      "id" : "120"
    },
    {
      "hash" : "0x0c12ae646e5d08514d914494c82916232c0091b5c3e9ac09a5a2c876bcf0a440",
      "id" : "121"
    },
    {
      "hash" : "0xe03024351507c50caabeffd56e2742029e5b8191e25ae8acb550a9e3d2f5d0e8",
      "id" : "124"
    },
    {
      "hash" : "0x29c803998f051adc709a745186bcf6df549b1685ed0f07d96e35e61c573de745",
      "id" : "125"
    },
    {
      "hash" : "0x53df2d64ed46ff9987be693a491ef346736f0b08943a276b753115438b896f00",
      "id" : "127"
    },
    {
      "hash" : "0xd29351bc62c70d2fc4745e62e1de16adb21c74037526dd12a1c9556105ed0ad8",
      "id" : "129"
    },
    {
      "hash" : "0x74efa94244de2da0807fa681d484432d3345e614ce904decf8754095daa34d28",
      "id" : "128"
    },
    {
      "hash" : "0x8329e470345820962f6ca7265192021c0bc7d7f1e416be5a3f382ad88aa92214",
      "id" : "130"
    },
    {
      "hash" : "0x3b8fc7c44337846451d2f80afc6a076039162886132474b7ebf2197656836d74",
      "id" : "166"
    },
    {
      "hash" : "0x08f1d2206ab5e0322fe6308bf8fd4171d1198194009ecf56e95fc58793498082",
      "id" : "137"
    },
    {
      "hash" : "0xe7917ee115506356d1f15d5d291c8897e15e83c7b487100089398cddbe77e6ea",
      "id" : "138"
    },
    {
      "hash" : "0x2aa929cc1f6e5afc537e53c8716559913ee4a884a50a450db2f5e203d0ba2ba3",
      "id" : "139"
    },
    {
      "hash" : "0x30a0636d367fc4713bebdaceac575a96eba5c853453ad5324d42776190981bbb",
      "id" : "140"
    },
    {
      "hash" : "0x574788d4d8c66f08495e4edc1f44c28b7c2b7dfa797036e9264cdc11cc39a1cc",
      "id" : "142"
    },
    {
      "hash" : "0x25731ed521371cf6196108828b54313e31b273cc8f541c6caf891cd1adc87855",
      "id" : "143"
    },
    {
      "hash" : "0x64cdf4153473263ebe3aebb367f6cdac958a63478e25a908da56f69e0a31e6c5",
      "id" : "144"
    },
    {
      "hash" : "0x7caa295654b1ee6b6d9f475ae3effb1ba0e524153d8485fc8c673a6a74bf86e9",
      "id" : "145"
    },
    {
      "hash" : "0x60c68976e2bf32679166add8fd10ff1d79b6c9f5876d37d0c192bc074bbc4ad8",
      "id" : "147"
    },
    {
      "hash" : "0x2789a220818d3236f7ac8ee57a6efc478a90fbe44cc3d6953b6118926ee3ec92",
      "id" : "150"
    },
    {
      "hash" : "0xaed88d6ca2aaaae74c8e891b329dcdcad2aa3ff90386c2f4cea1dc424ab9cd0c",
      "id" : "152"
    },
    {
      "hash" : "0xf4bef70dbc384a52b3ee52436eb3444413b252a731b836046d770b689377e646",
      "id" : "156"
    },
    {
      "hash" : "0xbc2e3227573f795627dbc1d4d72166c91fa43359fcb10dc205dea6c94e508764",
      "id" : "157"
    },
    {
      "hash" : "0x9a5dabdf78e3870694597434073d38836f2dbeef5bb2d93502d5e284ccb068c9",
      "id" : "159"
    },
    {
      "hash" : "0x262abba712aa56a467aad572bb4333c192f4f582c0a28283ce06e5540bf671de",
      "id" : "160"
    },
    {
      "hash" : "0x88f244853c09507e0743b7638f00f945018647a1f5bb881e30f324e9a9f6684e",
      "id" : "184"
    },
    {
      "hash" : "0x306af5b2ee45178d46eca01a1a26be2e40b45211d8d338abf3fc256ce5d3e7a2",
      "id" : "175"
    },
    {
      "hash" : "0xc5b8d456609b858550e5919a26afa0af533b77492f81edd60a1a5b552c88a5b1",
      "id" : "378"
    },
    {
      "hash" : "0x641f7cdaf840f96573c68727a5efd81c4526fd3234a3499ee9b9f521473bbc85",
      "id" : "479"
    },
    {
      "hash" : "0xdcbf9f6cb6417a1e082154c4688949c0db081313077945c5de3b710a4cd05447",
      "id" : "486"
    },
    {
      "hash" : "0x917f4d29dc783d836626a136de7ccc42a88e294e5900f7c058f0758a0f4c6a22",
      "id" : "528"
    },
    {
      "hash" : "0xca306c87f1df28c47bcfc47056426df1940d18a066475d0ff04831b18b65befc",
      "id" : "542"
    },
    {
      "hash" : "0xe60aa4fd6b1a2dfd0a3d3a3b43c5456d9fb5a6d9e2fc20d953ddd5e9989d8055",
      "id" : "85"
    },
    {
      "hash" : "0x0ee3687aed0d9f75cd50dcf429e69a0cebff7168e6162e1fe8929b4472072375",
      "id" : "133"
    },
    {
      "hash" : "0x121340075ab790503fedfc9ec85c3e9dde7f0716bc4adb3fe11d6fec15faa753",
      "id" : "146"
    },
    {
      "hash" : "0x0df821618f204ba7820ef06b10e507ba93287a53135f56ebf7b8f940a3fbccc8",
      "id" : "176"
    },
    {
      "hash" : "0xd2a154743e1256db9a09de18e2fc748f8b62a98d3b5b7a5cc5fad83c22097684",
      "id" : "186"
    },
    {
      "hash" : "0xae0b179ff7c76a64fd7761ee8ca2fa63b471ebe73793368caeff15f848de0f80",
      "id" : "197"
    },
    {
      "hash" : "0x5854cbb3d1fcb3bcf77b34e7d42bf418ac3af267cef07fd9b932b6047d5dd084",
      "id" : "248"
    },
    {
      "hash" : "0x786cb462a39070b5982f9c43b39fb8a1eb249097cade018de42701eb578dddfd",
      "id" : "257"
    },
    {
      "hash" : "0xcfcd9e0abc15716b43eda330f87d1106c6b9c3d899b46924e12c65131f22571d",
      "id" : "259"
    },
    {
      "hash" : "0x97fb468b0f6f5fe1f3570ea779816e461a284318032ed5a0a0a1c66be2126729",
      "id" : "263"
    },
    {
      "hash" : "0x74ac5e385946a93ba043fc8d2fbab611ac229c3089cfa7fd99b9a0915f456597",
      "id" : "334"
    },
    {
      "hash" : "0xfe5e28f55064af1793f8ba93126bf8267a496d363c467febef4446b0b5c55dc9",
      "id" : "339"
    },
    {
      "hash" : "0x48b6d566e44332a7def87a1f719c99ef2911abaff2b7c501d7001c0ce322fac7",
      "id" : "355"
    },
    {
      "hash" : "0xbe3ba213e310352ee475320fc51dfea686206e9ea510a4c789da8737f8c335e6",
      "id" : "366"
    },
    {
      "hash" : "0xa8e0f5f27a7ed578d48954d0cb60e2d774a65f21ac288039989ae0780d361fa2",
      "id" : "393"
    },
    {
      "hash" : "0x070cecc37455e8a867124fe7194629c6cea1ce99b9e8ca22fe315b7d30282e1a",
      "id" : "411"
    },
    {
      "hash" : "0xfc405f3c836bf76e2d31d4184d443697a399d02cff78b787df9a4be8c980883b",
      "id" : "413"
    },
    {
      "hash" : "0xe026ead27cc0292d273d1defb9dfcbc2de24a0d3186bbb48a8b51d0e5e221555",
      "id" : "432"
    },
    {
      "hash" : "0x8951cc46543d6539f82de98392e1d8dcfb073f6ffcceec83e410148f9b569278",
      "id" : "436"
    },
    {
      "hash" : "0x43c94f362781da2a20410458684e0d2ffbfdd0f321bcca8a8eb423b92d608452",
      "id" : "435"
    },
    {
      "hash" : "0x2f6c2ee5e24d72fc6958455f7919403b3169bf599d14aec343e0f37dad79462d",
      "id" : "444"
    },
    {
      "hash" : "0xbb3b11e1c8ca8e312d356241158f73b30be405ce138cb126ba133d04cedbfa10",
      "id" : "477"
    },
    {
      "hash" : "0x91f8f02598a88b50dbd910a9c52760c08f7a13b327dac843ae02c0dd05143cf9",
      "id" : "483"
    },
    {
      "hash" : "0xfe97081b593c3a54518e9c24ab0f85bca51017e0ccd69ddd417b83682d43ac51",
      "id" : "552"
    },
    {
      "hash" : "0x2a326245cfb500b121b3fc106843717a5b8c00e056e6020b835993aca00a3f0a",
      "id" : "611"
    },
    {
      "hash" : "0x29173ae95d91c6d622cea889683875c1032f7b771ca72f5be758886c7edf5128",
      "id" : "660"
    },
    {
      "hash" : "0xbe73b602598a53af7c25a1fbf71b19d54361352c03f843998f06876caf5f978e",
      "id" : "670"
    },
    {
      "hash" : "0x69183d5be968c366a8e449164f07473fb8dde9658d1b1ac0d28f2054859c4a5a",
      "id" : "857"
    },
    {
      "hash" : "0x1c5bafcf19ca3a8a0028724278e5024c481aa8da9f71b0533ecdd3f1a9905286",
      "id" : "869"
    },
    {
      "hash" : "0xf6a974223053244db61d1cc5cd9b6ed4f5d970ff0324b341a45c3b796272162a",
      "id" : "910"
    },
    {
      "hash" : "0xebedafc0666f4f625aef6e55c3698e1a1e4e4fad6a1efdea2d8249342822b277",
      "id" : "963"
    },
    {
      "hash" : "0xe6853ff20f5c082fbe6109e672aa92e39f9e24856c068c57014e9998ef0d18b0",
      "id" : "973"
    },
    {
      "hash" : "0x53cc6bcb1dd095f9876b86615616b3595819d8ccc4652c1a8c64bddf79474c89",
      "id" : "993"
    },
    {
      "hash" : "0xebdbecb49f334ce224c05aed7e052fbde1c936e5e12fd220e1ffb0165ed8c1b0",
      "id" : "370"
    },
    {
      "hash" : "0xcf65255a320aef3b3701865459a2da050728dcf53701b1e025a4a02e81e7f928",
      "id" : "26"
    },
    {
      "hash" : "0x86a3cc5870da35b00cce2a94370b55ff9899909caee04fd8dc2c6d4f7cf3615f",
      "id" : "350"
    },
    {
      "hash" : "0x5f3d1f05ca56c49465993434b19f8a8c2b7adacad0d2f058aa7312733f22364d",
      "id" : "351"
    },
    {
      "hash" : "0x5840dad7a91a7dfd3cb788047310423f577f232496664fde5c5efa488b546a20",
      "id" : "369"
    },
    {
      "hash" : "0x96ddf5a36fc0bce34d1e91b82d3de7bbcb051813ea1c36ca22be290c07eecb06",
      "id" : "210"
    },
    {
      "hash" : "0x7d87bdb63c84fc13fdf8ef5b11ba946f650bdbaad193bd37bb587b9c0a1d2982",
      "id" : "503"
    },
    {
      "hash" : "0x346ef4251469df111975867a3aeac967ec87963bbca94cbe6964aec5a5927df2",
      "id" : "247"
    },
    {
      "hash" : "0x916a6cbd9aeea5d5fd3dd0af83a5b803a461ad9ace3a77cc194b109665d35531",
      "id" : "240"
    },
    {
      "hash" : "0xab323d9c1ce660c1ad14a353f4fac14f6381d6303ba6915c44fd18a48651bad8",
      "id" : "536"
    },
    {
      "hash" : "0x4b80e465b1b5da3a664839081ed7e7c76e343f6074b30d1e78a1d46e08005671",
      "id" : "636"
    },
    {
      "hash" : "0x0a12445c771d822d7e6821cacf0d6e949b792e740d3de94453b9ff7a9bf33c0d",
      "id" : "789"
    },
    {
      "hash" : "0xf2a852517919b18d8b1f19d381ef405797b0c6c44a18570451c75f6cc4fd9c4a",
      "id" : "731"
    },
    {
      "hash" : "0xa0e6123e069e1d1a6ff903f2a624df29505da1d550eb2f066936d47269101626",
      "id" : "829"
    },
    {
      "hash" : "0x2de3e09f53ca34edb89620d68951fb078c1659f48165cca79ed67a65454eeb2a",
      "id" : "709"
    },
    {
      "hash" : "0xef6d12e89fbcc92114519daf9c1ce8e7beb14ec40c2a3d2410fe2f1ecb40d3de",
      "id" : "618"
    },
    {
      "hash" : "0x44a28a0999f00c28501dc085ef2f3c0607ec33afb451363b1c6f840af612c4fe",
      "id" : "645"
    },
    {
      "hash" : "0x71ac4ec5acaae7366e84befe21ba2479a5dcfb6fe63f12c25e748378014b3e11",
      "id" : "583"
    },
    {
      "hash" : "0x059a4196d93a6dd4ff677756b7947a15d402a0fa5259ea8b22caf6779c49a7b5",
      "id" : "938"
    },
    {
      "hash" : "0x37f53469cff4b9b474397da7cf0fd8d44fc9e4ee60b10212c1d5c4f60af9a697",
      "id" : "808"
    },
    {
      "hash" : "0x86562e8c2e2660321f275d63c2d3f1255bbad07c2931a76dc654e185ba7053e2",
      "id" : "823"
    },
    {
      "hash" : "0x324561725910306d180b7c30d5f9ca2d329bcd410fa1bc5deeb842fc49817379",
      "id" : "895"
    },
    {
      "hash" : "0x22e9d4721254bf86d868b08a138c6b695f1a16643db0821d523ef682c195d211",
      "id" : "886"
    },
    {
      "hash" : "0xe2f9cbed9c2782fbafd84a526af3af70c81a78c2c74b529d2cbaafa5e1cba1d8",
      "id" : "940"
    },
    {
      "hash" : "0xc8d202c48755529959ac586e30548454375d51ab4cf6d73db0345a1f907f583f",
      "id" : "909"
    },
    {
      "hash" : "0x31ec9c02ddf7e6cb37b14bebc31c08929545ea6c143a39472bfd7a7074767e0c",
      "id" : "956"
    },
    {
      "hash" : "0x6d370d1f57955103a324e68107b0ab2fcb02c7e46345ca756a9bff76532331a1",
      "id" : "720"
    },
    {
      "hash" : "0x53eee4acdd0431114f9e531113efc4eb1bffed3e6ed43192a361d56553ad7386",
      "id" : "245"
    },
    {
      "hash" : "0x2e444968933dd8ed6e36bbd91a1493ff10d1a80bf055b93b9f8ef1720a09d843",
      "id" : "158"
    },
    {
      "hash" : "0xef72b42a1c6d30c2e875a3bcbeb927cb508dff9e0d2574b807eb4dec315ac043",
      "id" : "688"
    },
    {
      "hash" : "0x9ba8adb6349e46c614730df7f0daf398cb1dc0bdae4f308217394f2388c463d8",
      "id" : "873"
    },
    {
      "hash" : "0x9b4f45483524a7936efa883d9988d8dee1fb4e56389cb7552e48ec102c8b268b",
      "id" : "806"
    },
    {
      "hash" : "0x0bd7aee569383d1d6f64ee598fc3b17d2dc8302eac92c0d67e0a862b14ac0f17",
      "id" : "275"
    },
    {
      "hash" : "0xca42c628b298c6ab4b04d7e737f9fba7da3c1b877f7b88aa72d2db7a76642443",
      "id" : "578"
    },
    {
      "hash" : "0x6ae0a3512507205c914e1e67a89811c605493825839665261fe98153213778f2",
      "id" : "589"
    },
    {
      "hash" : "0x3593fc5bfedec27cf960507c80054544dc3ed6bc8b1df7610a03609cec2a3b9f",
      "id" : "600"
    },
    {
      "hash" : "0x0d9ccd49d146e24e49a3ab26b7ff4bc76a66b8c6512cd823384bb0ac7eb14892",
      "id" : "608"
    },
    {
      "hash" : "0x9d1a144c540511b5242cbea920a831c390527fc78f83aeeb3c895c905022c15e",
      "id" : "863"
    },
    {
      "hash" : "0x626bc1e9f6adde5ffd2769ae2216717208f95be08daef4a103714ec625696e97",
      "id" : "598"
    },
    {
      "hash" : "0xa702697a01f677cff83756990ffebd16391b005c776af1672c01c770eacfc8f0",
      "id" : "900"
    },
    {
      "hash" : "0xb2517552226c1a1725b22e72d1302061ebe03ca4e91b0350a59b7a0380d65d4b",
      "id" : "838"
    },
    {
      "hash" : "0xddbd425b2bc210e3525fae871a969e1eeee58b6c4f086ada65df2e58d478df25",
      "id" : "239"
    },
    {
      "hash" : "0x3982b32c7b9b2af72d49be8919309ae12b58c8c4fee6058fd8356bed284bbb6b",
      "id" : "735"
    },
    {
      "hash" : "0x44f1f05853bb0e54aeff17ab924a9353c0cd6d4e9b63970a3d5639db1479e21d",
      "id" : "799"
    },
    {
      "hash" : "0xa111c3ea5fd3b44a710b4657f2366ca73cf29a4b4efc8bcd6730a4f06f3f1c73",
      "id" : "726"
    },
    {
      "hash" : "0xcd6fbf36f364cb969905818d453303bfcd9fdc5d73d91df9c32bd71746cea3dd",
      "id" : "733"
    },
    {
      "hash" : "0x9e1820f5040c38fda24bf7437428a0af9efb1629f144757fcbe12581c50f0ada",
      "id" : "725"
    },
    {
      "hash" : "0xb1712845698d3994809fb5ab95969c058d9a9946058bdb4a742e259dc41d7133",
      "id" : "958"
    },
    {
      "hash" : "0xfd2ef80ec20e929e8e6ad9b6af1f7548377ad0a41ecd4380bf39e1b620160a82",
      "id" : "971"
    },
    {
      "hash" : "0x2e2e5f97d9faa62b0deac0f79479108d074d0368a22a79030f528cae44a3b246",
      "id" : "545"
    },
    {
      "hash" : "0x9184e3da0bce75ffa63c854711e6c941cd7deabaebd9a726dc892fd550eb6b4e",
      "id" : "865"
    },
    {
      "hash" : "0x8e98dc5128bb2aa58b24bd040342602d2389031233301cbdc350179add4679c5",
      "id" : "798"
    },
    {
      "hash" : "0x8d191b8b542c5d924754b6fab5601108e8845b2c1673d6417180367a2b81bc68",
      "id" : "813"
    },
    {
      "hash" : "0x6181d2699cc17e0d0d67eb9ffeb514220d332914c5aac8905a37245418ae50b4",
      "id" : "856"
    },
    {
      "hash" : "0x4f873e292143d753eafc6fb4425cb843b53ec5ce4e4ee0b5ba35c4f94535c1f1",
      "id" : "914"
    },
    {
      "hash" : "0xe440c39fa30c356c14cdf555cd13e9852aedbf7a9e434d304b6f6cd4a6feeb9a",
      "id" : "928"
    },
    {
      "hash" : "0x56bf5861fa8d68f7ec52a44e2b73165a671aae0778a99c0e48e7ca21322e6f22",
      "id" : "711"
    },
    {
      "hash" : "0x13dadb1591fa9fb864f8c3cc7dea09ecb1d5d77468757b19cb035906e4fb0c78",
      "id" : "710"
    },
    {
      "hash" : "0xb42e960429b513890b634d7e1c5f31d5ed495329b034d86cb53168f11b762559",
      "id" : "901"
    },
    {
      "hash" : "0x9500c97e8825f0a43f3768945a30e41f257b3762740c1d59eb69ee025d572e98",
      "id" : "921"
    },
    {
      "hash" : "0x536d5817af48bf8d87ba1a7bc7c17e35e222f26388c788cd7855dc022b0d02fe",
      "id" : "950"
    },
    {
      "hash" : "0xc5308f11801aa2aa334b0cbeb6205b11bd4a40d360fa79b16ceb0ab8ec1d9517",
      "id" : "831"
    },
    {
      "hash" : "0xfa289bc45eaf57060132e69f52b7cacf4f9d26c7cad3dc4ff46dec4dbc1b3936",
      "id" : "571"
    },
    {
      "hash" : "0xe284f3c3172b71129f872f690bfe529e38eb3877f00f1ab44d38d60c35833542",
      "id" : "907"
    },
    {
      "hash" : "0x6700d50dc9f52943cea178af151fb83eeb1e0dba48cf03430587c8d0ac7fc37f",
      "id" : "699"
    },
    {
      "hash" : "0xe68d9525875d4d0927fde285af88b9a5ab821547baeae5a735143190d8d4d700",
      "id" : "541"
    },
    {
      "hash" : "0x0bd54066d3d96b1289ceeedc9fbaae73d1da0b7a0db130817e5d74610175860d",
      "id" : "682"
    },
    {
      "hash" : "0x11ae0441bc4acfafc1f1b439ac66a4078d2be9658755ab137c040da5e2d60d56",
      "id" : "207"
    },
    {
      "hash" : "0x7a0548d8eab3a7bccba30709e3b27d4746068b4aa6bcea589d07363f3a48c7b7",
      "id" : "878"
    },
    {
      "hash" : "0xed0b82d228e2a2372178d83cf813e734e70d7ba00c9faadf3a2f8e2191b08c16",
      "id" : "371"
    },
    {
      "hash" : "0xb2ffebae2c61abbc612668cc47c5979916a4b967790b74a62d077d71f5dbfaff",
      "id" : "447"
    },
    {
      "hash" : "0xfaccd06cdb48afb751bcd88f663a82f5ec53638a4ffb79e0e8ce0fa1f516fde4",
      "id" : "394"
    },
    {
      "hash" : "0xca45e2d03c93ac7f9d79c96788207ade8a3f99a55748bfc4f59ae42410bdec38",
      "id" : "424"
    },
    {
      "hash" : "0xc9a907cec26f0bda6053f102c30811bb9fa936024b7a9d1b19c090feec95d400",
      "id" : "916"
    },
    {
      "hash" : "0xc9a8a2dad560e3629ab6310ba306b168bdbbe63f59d27d8a0bb08932600d598a",
      "id" : "510"
    },
    {
      "hash" : "0x43d72ef9705650f72a4ff8be9fbd6a7ae00152d3551bda6e9268e29658a2f6cb",
      "id" : "425"
    },
    {
      "hash" : "0x136372b73e474886b79fa976c6c3985511ab490015060538585de080ae4a1328",
      "id" : "22"
    },
    {
      "hash" : "0x59aa8821b0b1196d406ba6f8249800a58fd8306364a0c0fd61fe8a1a2a19cf23",
      "id" : "153"
    },
    {
      "hash" : "0xd28bc268bb7df4c8dd3e495777a0bbf519d353ea39596ebc2e7339d7450e332d",
      "id" : "46"
    },
    {
      "hash" : "0x3aa749dd73cc83b24f5367b75093752d38aa6b57d2fea923b539a50318a2ea22",
      "id" : "76"
    },
    {
      "hash" : "0x5bf8488ed1ca5bff4e28c4276035c5bfcb3bc99f4b7d89c2bf87eab1db772bcb",
      "id" : "96"
    },
    {
      "hash" : "0x9d9fb460371beefcf3417e87c3322f3e47c7ba496a353089d30427f01cbeec69",
      "id" : "63"
    },
    {
      "hash" : "0x07786904501a627cb3ce004b554c90a3f8eec0f0f4c99cd3a1623c794528449f",
      "id" : "88"
    },
    {
      "hash" : "0x6a2c2bcbfd6d73a5c1634e9446fd66255867f96ccda210948384d7d228076a98",
      "id" : "97"
    },
    {
      "hash" : "0x0465b9836e4c174e4118f8002c1d081aec827bf8b0befce6a71d2443f2f407ce",
      "id" : "211"
    },
    {
      "hash" : "0x3836631b2813597e6e682616766c0fae05818f098cfe028b265be8e110c0414b",
      "id" : "32"
    },
    {
      "hash" : "0x2eb725c8341b5cb01525b03a12ecc21d8517d2e09d47f7466cbabcb8f055ce42",
      "id" : "68"
    },
    {
      "hash" : "0x1c8b9eeb89c8759f390482cda9c55536cf67425cd6d293390dfffaeb60fac3e8",
      "id" : "13"
    },
    {
      "hash" : "0x2c9a94fb8c0e56df777df2be70f58d6f7546b7da97e710f9a6b3eda0c89813c8",
      "id" : "122"
    },
    {
      "hash" : "0x88a2223d0a9118ef1ee758e1ec1924e9da6b4511d17c9670a1c75b59351fc8fb",
      "id" : "11"
    },
    {
      "hash" : "0xc73638864d52a53f37ce7057697966dc947ce40c0fe60485c04cd62579807f31",
      "id" : "20"
    },
    {
      "hash" : "0x0c0d6e9f2ab7e600fcaf45e32f2591c81c752b4afe81e283a6e31754332a6d42",
      "id" : "190"
    },
    {
      "hash" : "0xcde4799c03b5763793599f384d85ed08130f9b9ee6f8ebad5d15c031708dc457",
      "id" : "165"
    },
    {
      "hash" : "0xa93035564fe305d9b9e023374d9dd9f66121e63ac3aed5e8627c734967d7795f",
      "id" : "219"
    },
    {
      "hash" : "0x7607cac0fd52c86c4e15641ce00301e69ee3770b42cee1af3f51105ce5a0833d",
      "id" : "17"
    },
    {
      "hash" : "0x9c49e558e979754c4b9ccb41594de1af30e133230a7127bdadc454e15761e432",
      "id" : "512"
    },
    {
      "hash" : "0xfb05eb6cf14b884684dae42ecc0344bc0c91eb544f73dd48f4363a8491ec8f88",
      "id" : "429"
    },
    {
      "hash" : "0x57643ffcce6f8f24f49d06542af2447269d4e17d83144ca40f8a55f3dfb59856",
      "id" : "487"
    },
    {
      "hash" : "0xf57d945e624265e85cff5b03ced1695f0f6ab3635d27a20e4a01401c0e32661c",
      "id" : "42"
    },
    {
      "hash" : "0xd02ca91bcd45cfe5ad6e073138277503a68563af7d158d214a1e1bd9ba25c14b",
      "id" : "91"
    },
    {
      "hash" : "0x9d0f247ed9f99b555cc709d3369b6bb03a89da726abb00a9474ea3d402cfe512",
      "id" : "167"
    },
    {
      "hash" : "0x75559f18ac1d1bb2a91bef1f5ef8d6493d19e044c0bf5d0710b21b573269a5cf",
      "id" : "132"
    },
    {
      "hash" : "0x1393945c2fcefcf290674cdbe0eba739b6e867dfecf7260bc801d628d2272609",
      "id" : "185"
    },
    {
      "hash" : "0x22575e93358b9d69b1c1f087e40e97d5d0ebea9eabd6dfbccf34eb7d00583f3e",
      "id" : "644"
    },
    {
      "hash" : "0x33759b5a7e76654256a0e094544439de2c14bd4d16080d37ec63b002308db76f",
      "id" : "617"
    },
    {
      "hash" : "0xbbdb2de8dd66d7f24ad8b5364af2f5562745fe3f5fe02e9a12609300ec72ec55",
      "id" : "674"
    },
    {
      "hash" : "0x53b1f3d6747b675e71a990fde26d7616be343c31d0da518b4338e69f6fc515ac",
      "id" : "518"
    },
    {
      "hash" : "0xef6db2352e41e3440407b61b3042b844bd00c9b8c0019e2af068d40093c61a5a",
      "id" : "549"
    },
    {
      "hash" : "0xc39f6b69c9788fbc051a08f29a8a7c3e0d01fae1ab856080a36a1b128a5e922e",
      "id" : "533"
    },
    {
      "hash" : "0xcfb3581bd85b6aaac6a9076f65d1f164596df2f8b4324fde30cb1c760bf9e0df",
      "id" : "559"
    },
    {
      "hash" : "0x76572936fbcc6eb719932769f9037ca44e313ba42d17f432d9b7158f4c8f9fb6",
      "id" : "511"
    },
    {
      "hash" : "0x06348709547cc4ab1a5ead5fd3fe3913dc0310c6fe17fa3fd70a30c87a641d94",
      "id" : "566"
    },
    {
      "hash" : "0x605137382144091de526d8abf0de97c182779a837b75b384e7a8c0e164abf0c8",
      "id" : "526"
    },
    {
      "hash" : "0x2c06367c1acf82c473d56c55471b5ab9d2f7baa41cc810429c00ffce615d44b7",
      "id" : "505"
    },
    {
      "hash" : "0x8ba1ed412a52db547aad063492ab3291a2e7381811a112dc49c3356167d08aaf",
      "id" : "504"
    },
    {
      "hash" : "0x8746acf974362902e6e3da30c20fd4a59d6801f327ae1027e3d35007c004178c",
      "id" : "596"
    },
    {
      "hash" : "0x3d2ab9db43495bb2bbee835a18cf697c35b84b60ccd21cf8492b9e15d83a2680",
      "id" : "592"
    },
    {
      "hash" : "0x0e41b87396b51d7e0e519916905cbb19a142aa1a726934eceda332e1eff07ba6",
      "id" : "612"
    },
    {
      "hash" : "0xa9fb941c8105376a244f78a446a4d73a9be93b9944019275605c32e493c2ff33",
      "id" : "597"
    },
    {
      "hash" : "0x90c2efbd7cd9e4cd465b5797b7bece576162c3836f4e30e7473fb700e42c42c0",
      "id" : "628"
    },
    {
      "hash" : "0x131880a299252b0c85e6ab574244174184c51f89f8ac5b8800ae43d5ec00ee24",
      "id" : "595"
    },
    {
      "hash" : "0xcb8f2f87da92459499fa41f2fbe4c6ec805046253d9d0ca6fe25d3515917fcaf",
      "id" : "624"
    },
    {
      "hash" : "0xbebcee47651b96a36f574522c3c251b3cc98c6335e2e50e4e2e12e928b37e854",
      "id" : "151"
    },
    {
      "hash" : "0x0846411d5a0534ffd121d7ab57d1a6f7791c3f69eb6f263606feb54a143a4266",
      "id" : "182"
    },
    {
      "hash" : "0x34b4d18518c87d7025166636154df4ad1655867a7fa9ae38509f3311ed73cf5d",
      "id" : "264"
    },
    {
      "hash" : "0xfdb7edfafba10bf3f1b443386ee9c5064f68be4121c91e433d81aed4c6f56ca8",
      "id" : "619"
    },
    {
      "hash" : "0xabf56e5e0b3f0524956ffd60ea1d4454c1da83fe7642592c7d3844428f205dba",
      "id" : "639"
    },
    {
      "hash" : "0xac4c8219d3a4fea74bcacca9a3e495cc3108d17386409befd62ed01e1a10a3db",
      "id" : "647"
    },
    {
      "hash" : "0x303a9e65acd00639b82925e143d801643df14a14612bee4f18e345caa30d5e52",
      "id" : "671"
    },
    {
      "hash" : "0xc8190f00b095affd26f0ff41aba9137089d0ba7954cf26301d6c2688ca16e563",
      "id" : "587"
    },
    {
      "hash" : "0x229bf27c7f0b081bf0561157f865c76cb7232a0eb9a68b7e62448a332059d2da",
      "id" : "633"
    },
    {
      "hash" : "0x68c6502c196c086ca6aaf7ec148d342123c47c6455077f244aac2e072551b2a0",
      "id" : "685"
    },
    {
      "hash" : "0x582c6fc10b4c973bdbffa5a9033a6b99c031990336f87c90a7b487f353b4c4ec",
      "id" : "322"
    },
    {
      "hash" : "0xb39addb4937f3dda89631a3938b3a242083d658adf1a8392f35e3d7ec788f85d",
      "id" : "473"
    },
    {
      "hash" : "0x142b67c6c07be71023dd48838d37e893df7b1cd2d13394cba1448ccb7a0a5b9d",
      "id" : "656"
    },
    {
      "hash" : "0xc22f7b30f54d0fe2b94de87cad67f54838b28efa0c237002bb269c9fa2b93119",
      "id" : "621"
    },
    {
      "hash" : "0x53c54b3f7159f5dca1766792cd0e839ab2a3314aeb35bb89ef5052481fff31b2",
      "id" : "470"
    },
    {
      "hash" : "0x6bfb78475c6afc001b4bda17e3274e191616ab0a8e819289b0b53d9a903b4bdc",
      "id" : "308"
    },
    {
      "hash" : "0x17cc08e84e41cdfbe1f6686ab7cc2f5fb244c118b172f98352d10ff809f71a31",
      "id" : "744"
    },
    {
      "hash" : "0xe9f3dfc9f160f68013f5d519f1a85ce9cdad242d67a7954ca36f9eef52384a79",
      "id" : "256"
    },
    {
      "hash" : "0xb4e62af896e8eca4e35c64eb9d10479d48f3c150e1d146cad9103f7fc50c74ab",
      "id" : "714"
    },
    {
      "hash" : "0xe173c4fbe74db2c0d0ee2caf13aa4144204d42cfbd9aa5d4593850741645bc82",
      "id" : "341"
    },
    {
      "hash" : "0x2d5f34bd29c4a3b8db4b415eb0ff4ca8b7c52653faf5db31d1952449f4350253",
      "id" : "437"
    },
    {
      "hash" : "0xef6bb230795843f15516284dd36e8e4c32cad53c5b84b7571fce9fa73505081a",
      "id" : "235"
    },
    {
      "hash" : "0xa161ab4123f24280a62be65b95205a5e18534b5fa9b90715692851369fe01234",
      "id" : "405"
    },
    {
      "hash" : "0x017de4082509579848f9fa38332ab8e575c4aa4646a99005b72cac0762e36a0e",
      "id" : "835"
    },
    {
      "hash" : "0xc9e78ee612d056a48f35b58d782cca2478ad6cd2e3d301ac20cdcc18e1f70bfe",
      "id" : "809"
    },
    {
      "hash" : "0x9b815924ca634821da61883ed58748376e401c5428ecc60f0fe5300ebe4cf5a4",
      "id" : "364"
    },
    {
      "hash" : "0x2d7f312c0ea124a88b74908aa14017e301c1a8ff2cbd9e0761907bdd3a3d4c36",
      "id" : "455"
    },
    {
      "hash" : "0xa182ffd8fe5324f0b636a3c3a3ff8dc74d48958a5ebe3b944c7b3c2e609fb57a",
      "id" : "409"
    },
    {
      "hash" : "0x23a5c8c84ff94cc31bc88e3a88a0dc533c2607090110cd33411e7462cb07d3cb",
      "id" : "774"
    },
    {
      "hash" : "0x21da19611995894f1afe8e23f302742722ebac3e0eacc218f88de60df4fa1d62",
      "id" : "842"
    },
    {
      "hash" : "0x66a2a38ff07a85bf3382cf1cb910b67179d5e0f4c74c2464257503064bfc2828",
      "id" : "843"
    },
    {
      "hash" : "0x59226fe0feb5247ce83fcc9eba4f86b9558eb395596acb0e768bf7c7688b95d7",
      "id" : "851"
    },
    {
      "hash" : "0x070d0b70462664558c064a631a34b65eac8c192cbb49f356df35507eb23d456e",
      "id" : "918"
    },
    {
      "hash" : "0xc0c2b2757aa4638369b38486b73af1edcaa5ed70fa2a85b81a4858cf9353a26d",
      "id" : "450"
    },
    {
      "hash" : "0x2a35e84047e68ff5783c20f7acb3fbb7c7fe4a957fe16dc48b1ab5f576214b94",
      "id" : "795"
    },
    {
      "hash" : "0x8c9a9ab8dd058bef89f7c296e0df3d717dc554f8d5b0988c4cd795d7302ff08f",
      "id" : "451"
    },
    {
      "hash" : "0x79ac8dedd1dfd7f8c868e73eb6f669956b06266d08aa376c3147652ea202eab0",
      "id" : "896"
    },
    {
      "hash" : "0x862cf1ef1c07e2c712a21346d797e491082e3c59c2d0cba058b4f20576aa45d2",
      "id" : "661"
    },
    {
      "hash" : "0xeba14ef0160be42a7576cad7fd8319ff24e3b2cf13e1963480e71c0e95196fd2",
      "id" : "206"
    },
    {
      "hash" : "0xb04f146b24523ce2566a0e4d2857b5b8980323b5d21c5c3f36f1d737d47476d7",
      "id" : "379"
    },
    {
      "hash" : "0xd2db704b1dba69de66f524ff645d40c2dc5f79dcdd0af179f81081db0e1e5829",
      "id" : "686"
    },
    {
      "hash" : "0xc2f0a10d58af3f09b919c8039475319d92548f8a992be6a5f9eb6e1eb8c7167c",
      "id" : "237"
    },
    {
      "hash" : "0x516995b0236f71ecf29d9369f677500b2fa8950d45c6be2a4c000d8c9220a26b",
      "id" : "758"
    },
    {
      "hash" : "0xa5aa099f7ed5b78174bf05355f4aceacf1ff0aa8d868dce55c3f115b298b9567",
      "id" : "827"
    },
    {
      "hash" : "0xd8834fc6fa6377d03bebe7083fd37e6072c0b6e17d61f6f64c69b4a492698272",
      "id" : "965"
    },
    {
      "hash" : "0x09d594f7358326d6d773f2c2ad7b1893c8f1dc7eae0c5c0a6ee2f80acf4967a8",
      "id" : "906"
    },
    {
      "hash" : "0x5b37c026ddba9eadd7e4440c783bad31858a74d4d880ae5da80d1d86cd84a21b",
      "id" : "742"
    },
    {
      "hash" : "0x401e2cc991dd046350a61a7256c2e704b39be1991cdccdd653a0820d51300fab",
      "id" : "824"
    },
    {
      "hash" : "0x26fcb07d2bfb1e070433d7ad17b7d1a8daacfe96ba1863f19675a6606277d1dd",
      "id" : "970"
    },
    {
      "hash" : "0xaf4d5ca163effb5216bbe0bd0b7022d9eb237fb32d43660285b95ff3b16758e3",
      "id" : "358"
    },
    {
      "hash" : "0xa681e3c7fb94632e9fde7fe04d2b6954096d519c3fed5c67c6e8b3ec8ea99d5b",
      "id" : "385"
    },
    {
      "hash" : "0xbfad88f7f94d3462a7f9769d545aeb1ff93f8270eef15e1b1e6f7bb2ed365799",
      "id" : "446"
    },
    {
      "hash" : "0xe5eaa8706c29db47347325eda6ce4d55a187413936f3fb4e15d4de6c2f16f032",
      "id" : "466"
    },
    {
      "hash" : "0x8cd06b51cad4e57cf96d9fe8718b521157d6fd7df2bc20e15a8fc3a5ce380402",
      "id" : "336"
    },
    {
      "hash" : "0x207c3fe8585eb386f9226b0becbb170c6fc28c8e593024894938a9cb4992cac2",
      "id" : "400"
    },
    {
      "hash" : "0x0e9db7ed53a53458e0735b1bbd200081e460540f40d977dde81e136288d2a6b1",
      "id" : "382"
    },
    {
      "hash" : "0xea75745a91771ff0b43fd637d42c005b68e6bac8670645f4297620b9da52cc3e",
      "id" : "439"
    },
    {
      "hash" : "0x7c7c360aefb20c5fea90f206fc8bc0441c252dd3c347d299d7f2f9a5041ac9d6",
      "id" : "728"
    },
    {
      "hash" : "0x3a531dae587a43da2276c91e73ebb625d2ec1ea1afe47abd28a946d5558eeea0",
      "id" : "354"
    },
    {
      "hash" : "0x37ba547f9e76ed47228a043f43e458ed48b3ffdd70b004d31b1d0ecb303cc104",
      "id" : "373"
    },
    {
      "hash" : "0x43f53ff3c0cf8dba96d2b0c51db2cd451b7707dc29c9b53e5afd121f9c33c91e",
      "id" : "722"
    },
    {
      "hash" : "0x6165321d5e71658b757c6d0d79f55f4222bcb26b99de471db7a6e7e133324536",
      "id" : "739"
    },
    {
      "hash" : "0x821024834f3f6ca5ed4f4740eae7ba0b2774dd46da84ec9febb804da51ebb682",
      "id" : "875"
    },
    {
      "hash" : "0x9713cb5adbed1e2a3b97d8357ec1c8c9d8a56b5f02c4587465e505b02575435e",
      "id" : "841"
    },
    {
      "hash" : "0x71c8fc425f4b564be304d97823396e6e424bf4b7414fa45cda43aa93e12eae11",
      "id" : "858"
    },
    {
      "hash" : "0x440a7f08dbbe864e5948b3d773d2a413a36bc5f7e2f3773f14a3463463090c60",
      "id" : "441"
    },
    {
      "hash" : "0x538ff4c0bc191f782b73627be928c95a7dd7af615473bd2757eda4b44df2a9dd",
      "id" : "761"
    },
    {
      "hash" : "0x9b46c05b1b7b0cb54ba0206bd32d55f1a7840f60985231852d386b8d61e62b16",
      "id" : "792"
    },
    {
      "hash" : "0x6b4db7bd7419d2211c8c2fa8eb2e35c7e129298c68f40e4b90cb8dc9d1591069",
      "id" : "773"
    },
    {
      "hash" : "0x0d2922668f8b96704f78fe5b0567c657733af6de46ad8dfb9534cf6cb09b474f",
      "id" : "497"
    },
    {
      "hash" : "0x614b9d9afa42cad9ae1eefd75f69d9652b752568fa56f06b9b77eedfbcf4cf5f",
      "id" : "967"
    },
    {
      "hash" : "0xc55995fee94ca2e37214d7c3d37bb10e6ee39253c0339202a63fdde30f7aebde",
      "id" : "996"
    },
    {
      "hash" : "0x9b0524603588af0c9a617f9d764db927dc63d4be24a0d579ff7f2695f6d69c17",
      "id" : "964"
    },
    {
      "hash" : "0x265ece0f2fec92281be1d59e2fb93191162500647d77508b06b565f3a96fd55b",
      "id" : "939"
    },
    {
      "hash" : "0x89b966ea8697b0f9962879b7dee89f330b39d8baaca188864667d3a616f50a3d",
      "id" : "975"
    },
    {
      "hash" : "0x7d2315820c58603b46c0fedddca919744e85209e602b11fd185f0a3007a3e2f0",
      "id" : "961"
    },
    {
      "hash" : "0xea48e3a594df004a65d83d7f6e5b7b7bffe1e7622b6b2069e4cca8687d02711f",
      "id" : "989"
    },
    {
      "hash" : "0x22ea400843bd3a5c89f363132ccf341c1084d56e0d07c184c74b47b44fa7254a",
      "id" : "395"
    },
    {
      "hash" : "0x971def8dd22410ced4da314e05de6ff7f7955d874ed77af22bc99cb8a3cc49e2",
      "id" : "800"
    },
    {
      "hash" : "0x296e8aa9db6b088dd1974ac026f66a3041a43f3bb0da2511b502203e736a9e93",
      "id" : "734"
    },
    {
      "hash" : "0xb8dbeadbcc3733b45ca6502e53af3948e3e4a80a3cc69f1c54a1ac018a8c93e5",
      "id" : "815"
    },
    {
      "hash" : "0xebe5200967a84e58b30f5962d3ae8488aef26dbdaca2484a462c1e2223dbed2a",
      "id" : "825"
    },
    {
      "hash" : "0x1e5d4122b1ed342a890051dd3f927c9fdaa777419c0737cbddddcdb34b0f60ff",
      "id" : "936"
    },
    {
      "hash" : "0xaafe61115aef070dcfd2e2efce89ddc1625aab94f7a39f998105ed8ffab3f5c1",
      "id" : "957"
    },
    {
      "hash" : "0x2dbbf37f94564e6bea70ad54d8168056b8d2430bb00267a9fd4a988588f4d9c8",
      "id" : "793"
    },
    {
      "hash" : "0x420847a322a9b02d21b3c4fffc3b74b4bed770fa6f1bd7faacd7598049baa294",
      "id" : "374"
    },
    {
      "hash" : "0x3dd5efd86b2f4bf01ac96bde976adc7600c6bc26940ce7a5ccf13ed4e5e84209",
      "id" : "990"
    },
    {
      "hash" : "0x5b15533e809693947de77c768862efa822e24b26fe0d74284c6772b13df14bf8",
      "id" : "448"
    },
    {
      "hash" : "0x9ca0115424990dcb4a90574e20cefa3bb7a643671215ac107928c59566a37056",
      "id" : "777"
    },
    {
      "hash" : "0x1a2fdc9a9c79c6e75ca5d405afd31bc79607d4487d67be8e9408681e0a2537fc",
      "id" : "702"
    },
    {
      "hash" : "0xb8a8da8b2702a0a34569fabb0f969de73375f00f9f3e01fe5ad770ec720c1b2a",
      "id" : "320"
    },
    {
      "hash" : "0x00d6b8548bb14fb079fd563db3eadfec92b9ebf1b666aed3dbd621612b5266e6",
      "id" : "779"
    },
    {
      "hash" : "0x7abb04ce7691d3479d688d5e3607468d792bcf2a4306a4fb1d34132ac1391db7",
      "id" : "922"
    },
    {
      "hash" : "0xbb368e8bb936103070f127c5cbc3a320374142778812257a69183cbb5a553c88",
      "id" : "430"
    },
    {
      "hash" : "0xc1d494aae3d9820fe7c84bc7f55281df01a99c8c5cce70bcd38979fcb6f49aaa",
      "id" : "389"
    },
    {
      "hash" : "0x06367d461a4004fa25a99c24929d64761dca32c259632449e31123b4b1914bd6",
      "id" : "484"
    },
    {
      "hash" : "0xa977d23e3d97fbe1a522796840d6571bb80c87eaed5d24f2ac57b35f050a6948",
      "id" : "408"
    },
    {
      "hash" : "0x8452e63ce4d5d13d764bc60691a429b9d3088d28be2be24f17300d72f80394ca",
      "id" : "407"
    },
    {
      "hash" : "0xce32623d081162c57732aafd0ff00a3b05b36d538aad7543daed686791e36199",
      "id" : "416"
    },
    {
      "hash" : "0x3e2c43a9d10f0dcf4e8eaaa32dbdc23e8378c77a9c17cc43fc65d5cde98e4772",
      "id" : "520"
    },
    {
      "hash" : "0xaf9435e57ee296367aabcc07a347f24aaf1378db5a2abcaf73e68986cffdffc2",
      "id" : "550"
    },
    {
      "hash" : "0x23f8e842aec403870e6d0ed54073859505dc2622980399c6de71bf78dd9453af",
      "id" : "988"
    },
    {
      "hash" : "0x81dc9e1e0b94ac63ac883d5fca13d00431c275c05531713d33155977eadad4b1",
      "id" : "987"
    },
    {
      "hash" : "0x803742388adf2fedd188a9dbfd93b0961e03ccb0577bd9bd6ce6b7c872238890",
      "id" : "452"
    },
    {
      "hash" : "0xb6ca1ddde421275782a9aed2629d08b51623a04f00d3f7d94615de4684a405e5",
      "id" : "465"
    },
    {
      "hash" : "0x145b30f54a02457fcd04522023f3653734bc13c4b48f2f6b23ef4b49c3ce0354",
      "id" : "375"
    },
    {
      "hash" : "0x4abbecf227beb5dde8337d404bfef18ca331b352423ad251a5d23ad44e161350",
      "id" : "260"
    },
    {
      "hash" : "0x1e937fb9e9da1838a3f5e3b58ae87aa28e3fed48150b1a77f41fa3652af30853",
      "id" : "261"
    },
    {
      "hash" : "0x1fb43fc3c812454fe371cb0beb945e319b9bb4e10e00db3e6ee61321e3766979",
      "id" : "283"
    },
    {
      "hash" : "0xf804fc6a98b3e9fcd11d8c304bb4fd191468d137a616a28c3df784c4ab45dbfa",
      "id" : "284"
    },
    {
      "hash" : "0x59e94a3b57bb18dd3e13bfefc6f4217e7b9cbc0e4538473d45f2127ef52c56cf",
      "id" : "299"
    },
    {
      "hash" : "0x07ff89db9ec6bf3a31dfcf0312f7721c4dd7b12d548409f3c8eda0764e5669f6",
      "id" : "230"
    },
    {
      "hash" : "0xbab689cc0d634384fc3729671ff1c6e5d6e79c8c807f2763ceb30e95ace0b41f",
      "id" : "333"
    },
    {
      "hash" : "0x3cea02efb362cd01cb8809cb9934d8f640fd364d3bf0c084709f76d451060173",
      "id" : "547"
    },
    {
      "hash" : "0x784e3570f2d6cf81a4a27202febdbfe9c1464c64746035808965e7ec60b5f7cb",
      "id" : "420"
    },
    {
      "hash" : "0x3ebc54b3f3435298060922787e83fbe47cb702c12aaa2e27e5a47566e02c35ed",
      "id" : "381"
    },
    {
      "hash" : "0x77807acb9c5a6b05d04fb858bff59cbc5ad51bf79a7b944e56266fcd81004185",
      "id" : "365"
    },
    {
      "hash" : "0x7af52a74edd99ecc1d869f5548a9f353f68789e0746f12d6066f932c3bb5c20d",
      "id" : "539"
    },
    {
      "hash" : "0x5a7a8804b3e614f11fc7d7317f2af21fc320f5ae8fbf7308e88ade0d9d2bbadb",
      "id" : "301"
    },
    {
      "hash" : "0x5d255b8ea330de0c575334c8ea6274e807c4c5742036972846b81d3935ef2ec5",
      "id" : "467"
    },
    {
      "hash" : "0xd7370eea55e98b2b59ee1b6515a1d0a9b1c1b3c400ca7025a680a2470e1282d9",
      "id" : "300"
    },
    {
      "hash" : "0x44423ffdb42d5c540d1a516e1ec5abfbc017069ea215d88263665cc330565256",
      "id" : "397"
    },
    {
      "hash" : "0xfd2bd194e4b5303519ac54859c880bbcb217844f4d40896bd3800199d1c924b7",
      "id" : "403"
    },
    {
      "hash" : "0xf1a2a3fee368c1f1515bbbb71e96f4c87429eaf564703b82cc56fa2f6fcd1451",
      "id" : "693"
    },
    {
      "hash" : "0x19a096bb8dbb482f66064ebe6d41d0034be3a36b4465a1bde734aa393f848c13",
      "id" : "323"
    },
    {
      "hash" : "0xcb22a0a59ff4f69183b48b2ac4beb1e3a6b912eee8c8f1f834361623144fc8d9",
      "id" : "443"
    },
    {
      "hash" : "0x744e054dc51039ca8fb612bb34c1eded9c8468ee893a676db751ade9fb189bbb",
      "id" : "976"
    },
    {
      "hash" : "0x2731877808b582c844335e9fae78181457fd8a6f2393b1abc56c88f9d313da41",
      "id" : "968"
    },
    {
      "hash" : "0xf0f8d046c7cbe64c0e0baea1f3fcee586b4065b9e4332f3dcc339d20f5f40e6b",
      "id" : "554"
    },
    {
      "hash" : "0xc46a466fa5c0362143f7d3fa09f5813f6da5a51cf37f1a234a51b81a9f1292f8",
      "id" : "776"
    },
    {
      "hash" : "0x74a8f5d6a4d6f6041eefb525df9132211441aae49fa0e13c4efa791d38dce8d2",
      "id" : "801"
    },
    {
      "hash" : "0xe9c19606091847b11e9fc1ac2b435bfc47b5843234743de78da90b221dd5cf0f",
      "id" : "523"
    },
    {
      "hash" : "0x153a51291a03689d36319b778e150d1ad2018370c670c7a34cfa759f1bb062cc",
      "id" : "202"
    },
    {
      "hash" : "0xc741262ca66e552b74aaee5b632058b51a262905c9a4f329f33ff1dd3bbffe63",
      "id" : "401"
    },
    {
      "hash" : "0x4a6b28a4c6987152b870210bbcc4f28a396c5529938584b5e60097af7f2028a0",
      "id" : "421"
    },
    {
      "hash" : "0x4ff2b0fd13ecd2fbf9dcd059bff1d6c027e289d8120edafdd1f2d630558e551c",
      "id" : "372"
    },
    {
      "hash" : "0x0ed8855bdc892ea66a905432b62f612a81ebf0cda7dd6bf5410443056f473c47",
      "id" : "376"
    },
    {
      "hash" : "0xfb035e8e39159e58a5250ad4865d52f974a58f07874bf8b82a2a20bdff50594c",
      "id" : "418"
    },
    {
      "hash" : "0xad3f79123127d430ac3741140ea4fc3fc8e9ea468a32b1f7f3a30c9185d457b8",
      "id" : "414"
    },
    {
      "hash" : "0x2e27a84a853cb26e4df81aa8556d674495b82d0460995f9c46038eea8e0a85d7",
      "id" : "234"
    },
    {
      "hash" : "0x2912e9cfab9c67a0dcb431b0c4e1528924742633f87f01a7bb6adc12e0010147",
      "id" : "729"
    },
    {
      "hash" : "0x9417b6ce286539754ac954cdcbebe018fbfa74df14fe9517740b7f2e9eb731b4",
      "id" : "329"
    },
    {
      "hash" : "0x432b9ef55fea23a4f75f22a08a9c618cb54270a8c675171a8e69d943cbefcb26",
      "id" : "746"
    },
    {
      "hash" : "0x811de2cd4ac70997923569d0a2e4a7883dc7c06202c811316d1eabb9f17957cd",
      "id" : "493"
    },
    {
      "hash" : "0xc572e66b2891cacb63f27b45a890b8e79906bcba7a2110e26da6dae076daa97b",
      "id" : "864"
    },
    {
      "hash" : "0x1563099c1129c45caefc7ba306c00e7dd12a26b366c921c00e47d619648e9e5b",
      "id" : "749"
    },
    {
      "hash" : "0x6ff12937afcd450f9a1921ecf797ff459cc765ec661e85da3bb17049527a530e",
      "id" : "785"
    },
    {
      "hash" : "0xa93b810bee4e82a46dfbcf388fdd5bf9066d9ccc42a9598960844af5f0a675f4",
      "id" : "853"
    },
    {
      "hash" : "0x6318d48b161c6903694e53a44d3cf9d647c2fab0f84e20c19efc156446a00005",
      "id" : "426"
    },
    {
      "hash" : "0xc5dc8683bf283f2b756056f6407236d3e8ac8f73561934317fec617317bc08f4",
      "id" : "406"
    },
    {
      "hash" : "0xf425980cb518e4d2bb32af177b53915109bba701322ba8b3a35978846896adc3",
      "id" : "521"
    },
    {
      "hash" : "0x797f5eceb13477a4efe74f88804ba6c656abc3f46d1d5b8df9fe5d49f4bb07b5",
      "id" : "538"
    },
    {
      "hash" : "0x71bbae2ad32880ad7d6f568b1d012afe0fb0692b9be65e781f932c6ecc415137",
      "id" : "449"
    },
    {
      "hash" : "0x97940eeb8c4285136a3274ea8be674a4a7f824958f97d6a935365115ac5c03e8",
      "id" : "684"
    },
    {
      "hash" : "0x849c1cdabd9f5688bfd4f97c214b9d9a4b6fa97a5dd67dde770966e1f9b5ec51",
      "id" : "876"
    },
    {
      "hash" : "0xca0738e1f4cb255928b2cdb9faab3326c65dd4ccff75d1e52a8f506b1aa8b6e5",
      "id" : "564"
    },
    {
      "hash" : "0x29b04a3e1b1572b72c62760e31cc91ab298375cee5bb2b8b6af6a68c83918054",
      "id" : "923"
    },
    {
      "hash" : "0x83012606d07cc68dbd348c6fe7b93cd07c5418163f977757795dcc5f6f870bca",
      "id" : "631"
    },
    {
      "hash" : "0x7197a7cf1fb3de19ccacfd401706d32044ac00978649b936805ae66d48632596",
      "id" : "708"
    },
    {
      "hash" : "0x937954bd0a488b27fa79c2b3741293f100cc02b7e6c9553b26081320b5098c4a",
      "id" : "499"
    },
    {
      "hash" : "0x7855b52654465622edbcea6517dc411c19b1e33a0ac0642bb02e316377a23338",
      "id" : "506"
    },
    {
      "hash" : "0x5e17f4aeed57c2d7081faa54eca919e4920676dacf728232416dcaf619d24a73",
      "id" : "398"
    },
    {
      "hash" : "0x01ec3c38dc9ba7127cf0ac1bba7b634b06b7c2e79c4febdd995983d939da3bac",
      "id" : "386"
    },
    {
      "hash" : "0xfda933508caaa03cd710c5f4891cb23e797eb19104926c2f3fdcc4432af43149",
      "id" : "513"
    },
    {
      "hash" : "0xe1ca4362fa3f14dfb8fc29649685b349ce7f5eb7bed0b056044b852e1bbf1958",
      "id" : "516"
    },
    {
      "hash" : "0x98343d6546fceaa5b8e304194866e11e4b23fb2d7a943cb3cc69be2e77d4c86b",
      "id" : "994"
    },
    {
      "hash" : "0xb8c7a5559a96bdfe2dde54d690d420b7f17e28ed46d572f919aa259821a3ee90",
      "id" : "343"
    },
    {
      "hash" : "0x95f6bead319b838a969e46a6cc789742b43e960aeab89b3051750462638a2986",
      "id" : "551"
    },
    {
      "hash" : "0x888113dbb108344a6e4647200822c5fbe5ba266706439e1dd1842c9388915ecc",
      "id" : "383"
    },
    {
      "hash" : "0x8ad731ec975b9a88487b4a7d3015abf0fc46ea28c57fd661ee17a8949661b7b8",
      "id" : "279"
    },
    {
      "hash" : "0x0de5e9325d250c14d61186ba50f6582220838d6b448059a6606e2a22b1692735",
      "id" : "302"
    },
    {
      "hash" : "0xbf5696b37d2598c77c5fe114819a0a3c84537675e129b26b1515380180b23795",
      "id" : "534"
    },
    {
      "hash" : "0xeb8739ef25948e5b5a69b49473c9f5d285839963d3445a25e7564cbb04ef07fc",
      "id" : "579"
    },
    {
      "hash" : "0x6ab2a04eff64fdb19bede51be1e18ca751dd94f494d2351b0f8303a941bbbbe4",
      "id" : "760"
    },
    {
      "hash" : "0xfedd835f88f72f4852b84b450ef9be6fee3a12605d80bbb810149546845d809d",
      "id" : "461"
    },
    {
      "hash" : "0xa16bcf55702f651a21d16effeb7f05d540f3e8f52342934ff442f542b9cf2a03",
      "id" : "687"
    },
    {
      "hash" : "0x40fbd1b37857995f5befeb6974c6b5cffc424aba12531e17bbff342fb57b8955",
      "id" : "218"
    },
    {
      "hash" : "0x3eb2de9ea969ecb4f9bdf7496fca2d7ac7792b06e9098ccd4449f3b6ece9a3fb",
      "id" : "278"
    },
    {
      "hash" : "0x39d431be0a2089071d8ae92d1b07bb7faddbfd6f5469449615e097ef59fa0e54",
      "id" : "568"
    },
    {
      "hash" : "0xb7dfdcb057e25b647d4edbf38e2e2c63ae480ac4c752493dad1daff875febafb",
      "id" : "254"
    },
    {
      "hash" : "0xa21e433708121440733f4de7ad1ae6129af9103970f76426605fa2bac33a397d",
      "id" : "553"
    },
    {
      "hash" : "0x96433064a9a5da946956db1fb49f8696da0d6cd5e26737479262809935b71fe9",
      "id" : "890"
    },
    {
      "hash" : "0x500b51528187388e5622720adc9f4f2a41770b5615e87d7e4318e0d22bfc2ea8",
      "id" : "771"
    },
    {
      "hash" : "0xc57193436a12e381dab9df75946e8da9c7f03bd87140f03bc4665a6dd8cadbf9",
      "id" : "919"
    },
    {
      "hash" : "0xa78af6134c4b44a90abee68812a11468751a20037dbee5806830cad8a881fa61",
      "id" : "532"
    },
    {
      "hash" : "0xc3e92b0d74862248fd82116867dc0f9b156ae2dbc4d1d4c9511aaf3919d809d6",
      "id" : "546"
    },
    {
      "hash" : "0x4bf74114bf19fad53215c59e8e2cffcfa8c074a143cd607e52450a43b7560e34",
      "id" : "267"
    },
    {
      "hash" : "0xf9334f551b132a4e24fa50777f88b814c18d1963db81e4d62a8707a6f2313b2f",
      "id" : "781"
    },
    {
      "hash" : "0xcd0cce614d936ecfe24b9ab07d5984d74399591c67383e332c6a94ae0025ad3e",
      "id" : "836"
    },
    {
      "hash" : "0x261b60479cbe71034491768ecb91eefe070754bc05d9c5836631a102c68a584d",
      "id" : "855"
    },
    {
      "hash" : "0xfa27dc6747a12a54d6812c9d162520a5eb09682e6998ab01b609258684ae3946",
      "id" : "705"
    },
    {
      "hash" : "0x9e4f6bb7a85daff57d313904a265b08d352da05e1055d7132fb0d4b1d2b18137",
      "id" : "602"
    },
    {
      "hash" : "0x4ae04b96f4fa552086d8ccc67039c1276a714e398e1ebf4e6d671b606f7eff8e",
      "id" : "331"
    },
    {
      "hash" : "0xc710db64dd1c9dd4eb87db4b2dad236cd509f1604a8a493f549659ce62e4b1dd",
      "id" : "344"
    },
    {
      "hash" : "0x44d1509b6e6ae1a14e2cc57cd66d26aeee5f23eed09c21328c6a93cbf9f175b4",
      "id" : "327"
    },
    {
      "hash" : "0xc075e06f760a7c7428ba2268056f7458bbd0b4b0b50df59bddc69274cbdd6ffa",
      "id" : "332"
    },
    {
      "hash" : "0x92ce324d837077a7854f6f02a6540986411a4f73a223d9c2d1cee12028399d12",
      "id" : "502"
    },
    {
      "hash" : "0x0a84976361b259e052490c63da5f7984147b81b2d7bd2ea5c75b3f113dc5bbe7",
      "id" : "575"
    },
    {
      "hash" : "0x826257fe21012f0015e5bc7c1cf482bae05513127ae1cfa6e951aaecff3dd567",
      "id" : "548"
    },
    {
      "hash" : "0x8aa47d853728a42e3dfe2ee9d94c8f212b151e775ce83ab8ca0ea6341041fa98",
      "id" : "797"
    },
    {
      "hash" : "0xfcad766d43cd56173573157c5796245dc6f9b5fc518c2247cef05a46bad873b9",
      "id" : "667"
    },
    {
      "hash" : "0x9d5b225890e25623937704016ade1ba537b8ecdd15590577fba02f57f88bdabb",
      "id" : "544"
    },
    {
      "hash" : "0xecd0f0c99394956306f2c7ff849b050a076aab0a18d888a6ceb2db403535a2a9",
      "id" : "289"
    },
    {
      "hash" : "0xa9975367d58554723bc39e0a2729ccd6632fca818f68a5429368e8ac00df0dc6",
      "id" : "391"
    },
    {
      "hash" : "0x76f32ef84a50a45cb9e8d75e78145b47d6ab5049d0356761b41b80eaadd8df13",
      "id" : "741"
    },
    {
      "hash" : "0x64966fc1895e037b9c050fb01c6300a595bd09ef31c6abf5273d6525cdd7f54b",
      "id" : "664"
    },
    {
      "hash" : "0x940d29a9b4e7379f462d8e19bbf309a54d4ac6181f66951fa74a7f388e8a73d7",
      "id" : "307"
    },
    {
      "hash" : "0xd96d8bd94b729e736998087cec228e6fc41aaa7a1cd1d2bcafe24f79e4702eb8",
      "id" : "984"
    },
    {
      "hash" : "0x030d133cb3822046fd8a9be2801346fa9ad4163c003d97e911b894cf84f9fd4b",
      "id" : "454"
    },
    {
      "hash" : "0xc8ef487d43fa75d86797bda3695ab9517f0cb704346112cd83d354a6783f888b",
      "id" : "463"
    },
    {
      "hash" : "0x40f81d6598bb14b5e7f582e52e6be4878923832f06cf795bf2ed011bac83afa8",
      "id" : "748"
    },
    {
      "hash" : "0xf57b22d79ccba82b86bf31b14c68174a333c16d2aa388aeb1de54d3d775ca6e5",
      "id" : "679"
    },
    {
      "hash" : "0xb00d14bcdc7126cf8dc3537f87fef1a198e8955bfde8eb9bdb4a5304a2824067",
      "id" : "384"
    },
    {
      "hash" : "0x17e8f5c68111ed3dbeca3237561b4b52141fe1202a3b928a8a4e74530fd02232",
      "id" : "404"
    },
    {
      "hash" : "0x9e676cdf141ac40e701db0e593c8af27da8bc163eeaa0b8da5ed32d831271308",
      "id" : "330"
    },
    {
      "hash" : "0xe63b381f3d685653ac0489ad6f5cf1f91c80930f27b8c379b9839cc3ae62dd24",
      "id" : "715"
    },
    {
      "hash" : "0x3b2f284d701409c1d7285d0892bcd9c4c695535c97e9cd18f53af3761b6dc659",
      "id" : "196"
    },
    {
      "hash" : "0x3f3ff88280e660aee61efcd897dc171ff70f74022469a6d9b9c1c7a054bff193",
      "id" : "767"
    },
    {
      "hash" : "0xec0b76eabdfc744dc93d2275fa3b337f43c2c33d2ee730096d43eb51940940eb",
      "id" : "982"
    },
    {
      "hash" : "0xdd526df07ead5d338f726a0855aee884729e9d2286e0c36fafeabf425f638e2b",
      "id" : "562"
    },
    {
      "hash" : "0x3e0ca1e8628177664dc1e80888f6d8f1b22752741bd96e550136b9ad3b4c0e82",
      "id" : "945"
    },
    {
      "hash" : "0x882776d859a058fb7a5bf93f9f2d99cd40d8e7f70aa39cc14f585a462f4451cc",
      "id" : "565"
    },
    {
      "hash" : "0x2c9d7013f2e82ccbe6eebfb7d149e49325d7faa2a3d75f20d3f96fb9e63f955e",
      "id" : "380"
    },
    {
      "hash" : "0x567fdf16244ed035826f5c315688dd56cd650495c47097ee4e7d879ab6e1e472",
      "id" : "357"
    },
    {
      "hash" : "0x569f6a231911221e362ca13488d809e3bdf4e2b402a76885e3f90de1cda166be",
      "id" : "442"
    },
    {
      "hash" : "0xceea50a50f499d240f259a2f070508e677a20992607822542e2984b12cc73153",
      "id" : "765"
    },
    {
      "hash" : "0xebf72626ad52e2b31a8636d07eba68a1b8b8f8d5d35c275c88af1ecfd613de3d",
      "id" : "161"
    },
    {
      "hash" : "0x12bb776f1ecda7ebbd256580ea31bd27f93917e004f0aec9217532811f155544",
      "id" : "999"
    },
    {
      "hash" : "0xb029cf484aa13d0008fef2b10bd303dc82c92264047332ad0aa3887d4d33aa81",
      "id" : "187"
    },
    {
      "hash" : "0x5c23e1c857b83cfe3411b8597fb76f3a95fbb3245f753b5f6841c500676901ee",
      "id" : "191"
    },
    {
      "hash" : "0x11050dbbbb14e4ed4bd5a88fda3dbf7dfbfd4e400f5dffe19d84e6d0ca30ad9f",
      "id" : "226"
    },
    {
      "hash" : "0xe9274445825ad469109744777a1671363c3def8e1a6288b4b2c7a0647ac59f6f",
      "id" : "212"
    },
    {
      "hash" : "0xe7e4a386eb7294b53c541f03190c3877794bca76ac8501c7f51ea898e37943e9",
      "id" : "337"
    },
    {
      "hash" : "0x1f094bfaf906f41471b98245c23096baa0b59e4b05062529c95bbe1c92b7f4f4",
      "id" : "0"
    },
    {
      "hash" : "0x67423ce3f80bc7dffdc229db9405df48e242defc171caa5ac2017d909a2ff6a5",
      "id" : "136"
    },
    {
      "hash" : "0xf5c481590a4d04011c738749605bb60b1d6892d27ff109655d2c850fdcd8b6d2",
      "id" : "298"
    },
    {
      "hash" : "0x4a6a90ef3357e57831dd2d9989a9b0d42e81d7aec43b8a9c44e4e9305bc4c64a",
      "id" : "315"
    },
    {
      "hash" : "0x5bec4a32ecfd39b0f234a60c1a9efe6b84bdbbe5771c9437875d657d1408c862",
      "id" : "44"
    },
    {
      "hash" : "0x2aa8fb6a5e56570b78b818b9be98918504b8a77444cf2384b376ef6d776d8241",
      "id" : "52"
    },
    {
      "hash" : "0x62163c6e09402ca4660883185d07871b73082c45e822d40b2992d23d127cf677",
      "id" : "53"
    },
    {
      "hash" : "0xa1c4ee32bd8b0b8bf4377b12439228b63404d96ad9159254324ab99f2eec59b6",
      "id" : "172"
    },
    {
      "hash" : "0x0a92d985a5480bed57ea66f9f53fc1a98399b93378f0a74202b9905cb4cf014b",
      "id" : "353"
    },
    {
      "hash" : "0x7bc411e99f857836d1d04895fa1a2b6f8eda43caddfba0b277cd72a448467cf2",
      "id" : "367"
    },
    {
      "hash" : "0x5b8969e191b725f4d424f6a0c06571b02e4e5577fd71e0fccfd2bc2774a85bd0",
      "id" : "485"
    },
    {
      "hash" : "0x205a73d93b8d03cb2044789f159fc5685bfb204a559d3386e5b0219b902891d7",
      "id" : "79"
    },
    {
      "hash" : "0xed75878656ccce33c72da9e32772c93f56bf550415ea9c2a9be4ce746ce47cec",
      "id" : "7"
    },
    {
      "hash" : "0x8f9310f6b00b8d0f2c898950dd8a38600a00f881b53474ca8f3ab92328798c14",
      "id" : "10"
    },
    {
      "hash" : "0xbabbf1e2a5c17fbf2da47bbb682a500c0181af172f38d5ee3d3318d5b832990e",
      "id" : "399"
    },
    {
      "hash" : "0xbe9e686bacf68a676200ad18eecf646be0f71603a53183504fc2ec6f64ccec03",
      "id" : "149"
    },
    {
      "hash" : "0xeda7845f93567d1ddf55ead24f32add0fbea5890f2f6f2dce51ddb566fe74100",
      "id" : "200"
    },
    {
      "hash" : "0xa6e32905dd7ef2c624808d451361fe2e70f1c9ffc065ac4e0a8af26cddeb3c23",
      "id" : "457"
    },
    {
      "hash" : "0x85d7e2a12a216470c682afad29daaa42d3a475ab4cbb2a222e533a79ab16aa66",
      "id" : "427"
    },
    {
      "hash" : "0xc60fdf6aad868525918e3da0f18d217e168b34d0dfece9dec7c86fd55ed24973",
      "id" : "213"
    },
    {
      "hash" : "0x373e2162038fcdf345a94dd2bedff30bf7cf2ca2040c5694555044e6a19f9419",
      "id" : "297"
    },
    {
      "hash" : "0xa048b4b19fd0ab225a8ab1b4e83a3e706394925af51a67b95d4e21b03486b21d",
      "id" : "509"
    },
    {
      "hash" : "0x7bd59f83339da8be1671119fae85ffa864908f3c5a2058b8ec50e3cb377f8d89",
      "id" : "517"
    },
    {
      "hash" : "0x07840c7f273b305a979414942a83cad83ac295037c006ab54157d13676fbae3a",
      "id" : "572"
    },
    {
      "hash" : "0xe0005ef89ce3600660b03d35b4399ebb0f8ec272bb352898bdbe5a096d658c5b",
      "id" : "468"
    },
    {
      "hash" : "0x1f08a44408af3ce6d54f6c2f266d1f937396c6db1c02b38c73dd76cf2feb6cc7",
      "id" : "573"
    },
    {
      "hash" : "0x4214c962995d25b9c0f7c392eeadd84df8b7b488fd50931719f433400e251439",
      "id" : "460"
    },
    {
      "hash" : "0xc35587aecd65a17a116512885177ae2e10db71f44385910a680ef6a1d1018005",
      "id" : "694"
    },
    {
      "hash" : "0xbd58591da7850394ec7f4f8b477f0ffc6c546536e2441176d1894b5d511d2701",
      "id" : "255"
    },
    {
      "hash" : "0xb9b78b3065286de3cc9465e3a90e39daf79a42c63497066cd94b303cac56518f",
      "id" : "570"
    },
    {
      "hash" : "0x57278cb5cf163234249c54ede4de8d78137291e352d32844a32fdd6b399e80b8",
      "id" : "615"
    },
    {
      "hash" : "0xa8b30487447a77a4868be03785515403a8c5c5cc5ff8c6f2faf94a784b79920d",
      "id" : "134"
    },
    {
      "hash" : "0x4026ec79c5d9eaf9e21e5b4ffa84d4cad470b5c7850d7186976907bae316ef12",
      "id" : "325"
    },
    {
      "hash" : "0x52b25c30afa67df110366ede57ce29153269ff0d21a1c3b581b26b6535b753a3",
      "id" : "745"
    },
    {
      "hash" : "0x118b9bab52090db4c3e321c00530399137693fa244749abfbd8cf5791c0524b4",
      "id" : "650"
    },
    {
      "hash" : "0xf1f008ffae6225eb613c6387e6044f8f3eac86170c775bd979c1338d57333bcc",
      "id" : "651"
    },
    {
      "hash" : "0x37b3bcd5fefa5b2e5397f1b8cb6b02fe7ab90ed39f1dab567afaa30d038b7397",
      "id" : "109"
    },
    {
      "hash" : "0xcc4de0ef8a4cb40123a48b976621ba11387e3ce1b4d6368d327f82013ee179f2",
      "id" : "123"
    },
    {
      "hash" : "0x2738bcc2e1ac6fb703af19b7a70e3c7ae0a29e3dac0e0d04b89d0e905bbe2078",
      "id" : "135"
    },
    {
      "hash" : "0xd27ada56e8626e7ac5d481c17c5b79f454a1d3390dc5439fee9f2ad35a95b9d9",
      "id" : "672"
    },
    {
      "hash" : "0x5756834d17525f8205402dfd9588d11cca83a01e44a6708e57873d33564612ca",
      "id" : "908"
    },
    {
      "hash" : "0x9a27ea1b46054b7ae6f2ea60cde3ca905ee44109bfafc5dd830e21c5c0789d06",
      "id" : "290"
    },
    {
      "hash" : "0xf59687d098dde2c693cb60455b8366c4f2c292672c2d59e12825cca0ecb20230",
      "id" : "359"
    },
    {
      "hash" : "0x29ada296da74eb6205210365448fd4a08d954197ca1fd023334d2038440f78ee",
      "id" : "390"
    },
    {
      "hash" : "0xc1f9de4b44cfdbf260300ff038140ae7114abbfaab3e7fa5911fc825fc64ca2f",
      "id" : "805"
    },
    {
      "hash" : "0x6f7c18ead4965b789a7a7644ef01ab72e72668654439c02ae30a7fc51b4542f3",
      "id" : "274"
    },
    {
      "hash" : "0x14e59dc861659132a5b06d94eabaaca8408b2f18d492a6384f1135ac5e8bf891",
      "id" : "282"
    },
    {
      "hash" : "0x633c8851aff17d2955ff74fa5d6686271cb5af190e475aaf7137d1425a5da86b",
      "id" : "586"
    },
    {
      "hash" : "0xa8f0e97c8f67e9f7adff391340202c36e2f51edc5e7083d44b61517fdd087096",
      "id" : "606"
    },
    {
      "hash" : "0x2590bdcd164120a2461d615f2043ee496e7f84e16ad952d9da120240541c365e",
      "id" : "978"
    },
    {
      "hash" : "0x0cc69f4e8dfae7ffd8aa6abee87dc9a93a1846042e7585a206cd6aace09b7f26",
      "id" : "867"
    },
    {
      "hash" : "0xc9ce6f91fdaf973c53bcb7a6448b15720662ade946eb2f2fa2fdd4091e4ade12",
      "id" : "889"
    },
    {
      "hash" : "0x83d1271b40824662676489a9884249bd54aeb3f88d54e42492242a1741202764",
      "id" : "755"
    },
    {
      "hash" : "0xbe1d14c89b4fc4dfd218e3b65604f75f167d026e0eb0b87bd63ef50c2bb218a4",
      "id" : "496"
    },
    {
      "hash" : "0x01fc6fc8db2e5abc030af2c09e31e20b36a5a9c5b123ef5c08637f8b33c3262a",
      "id" : "782"
    },
    {
      "hash" : "0xba517dd58cd72ba0ff26e41a5180f659afe49472af80008c8cd722c73227e442",
      "id" : "291"
    },
    {
      "hash" : "0x1772461fcf9fd7749b8a255a252a5d13357449e77ed147acd5488bcadd8aad12",
      "id" : "326"
    },
    {
      "hash" : "0xe2f5264c46248ba47cae93d0baa3e104214534535b79972a26eca0b378f5cc9a",
      "id" : "498"
    },
    {
      "hash" : "0x93e2aca3eae575be5d90fdc5d4edbf4badc708d245b14db7378c4e7828b79363",
      "id" : "348"
    },
    {
      "hash" : "0xf6f9556e9dcba673703951a0bec4e52c73c2011b7f55dd094734c4a1e6ee2923",
      "id" : "730"
    },
    {
      "hash" : "0xa9ebb0c03b60053ea036c18b8aeaf60858082818b057008478ed93d536c5b8df",
      "id" : "71"
    },
    {
      "hash" : "0x110748fc5741a35129ba5e80c6f97fde0c91971c9be041ceb2f1d8ca5663f246",
      "id" : "236"
    },
    {
      "hash" : "0xcd1d1f010d115697b5bb656054fe0188df3c2d9d52886115402ab1185b304c56",
      "id" : "930"
    },
    {
      "hash" : "0x6108fac5b745dc18bf9fa60433e0499e04fb04cb0f6b33d4d416b45f8d101b2a",
      "id" : "556"
    },
    {
      "hash" : "0xdbafed6da57376ec5e425b3ad801f54ebc8620470380926a97d86c136918b7a2",
      "id" : "558"
    },
    {
      "hash" : "0x53a0234a014cb8416507553646f22067192054881e8d8dc854ba8c09ca9985ef",
      "id" : "887"
    },
    {
      "hash" : "0x67db522c21d73e000eca4fc13b5b4355cf607da66ce5e1f2f2daeeabc6d80175",
      "id" : "783"
    },
    {
      "hash" : "0xe73c210c6e8b66d1a6838ed1dc4cc5da75081304f370b996836da9f765464123",
      "id" : "433"
    },
    {
      "hash" : "0x2006d1605f95c5922343d0f836e8fb683f22bbb3346f83cdc7f4665c3dd32fe7",
      "id" : "2"
    },
    {
      "hash" : "0x7a46b918290d7e6908ed0112234236c7cf4ad20776403f3dbde43fa509a892c6",
      "id" : "220"
    },
    {
      "hash" : "0x396d8460331ab6f047e3dd8a1663cbc69c8eae980b86ea5928e4cd7fa873e2f2",
      "id" : "201"
    },
    {
      "hash" : "0xa2df983349b66c2ec1bcef403357b92a8867abc30ceb1a32225d5f30329c6d91",
      "id" : "925"
    },
    {
      "hash" : "0xd4194ab57e592aa6bb7da51d56d426d053f11040cb2a3912d3ae1cb5767c1141",
      "id" : "317"
    },
    {
      "hash" : "0xd22d00e223304f08889c5f3d0f3fdab4f7c28b3c993fe880fdccb357dccc494f",
      "id" : "769"
    },
    {
      "hash" : "0xa508779cea962a58aaabd2d45b62fc6ff95aa31249d2a158824243ee2e096c00",
      "id" : "126"
    },
    {
      "hash" : "0x2b8fb212096f5276bb98c96ea32b1c57a654d3e510983b9bf772d3f37ea2b928",
      "id" : "751"
    },
    {
      "hash" : "0xe19fd9e4bef512795c78ded3b43ec184154ceb60c7014477718ec758b666cbea",
      "id" : "796"
    },
    {
      "hash" : "0x7d8cf61004813d716bac49d5523aa17b6475886bdae602ac27a72e6faf637fe1",
      "id" : "217"
    },
    {
      "hash" : "0xabb654f07e8e42cfbe9339fdc675477477019aa2382c60b45e2186a41cd1315c",
      "id" : "934"
    },
    {
      "hash" : "0xf097fc03f30cf43b655bdace8b53e48e711388fa5d596b54125aa56485c96929",
      "id" : "268"
    },
    {
      "hash" : "0xeb53625935102229b3412e71ca694589f44b37c205c728b353aef4b8bdb2c9d0",
      "id" : "281"
    },
    {
      "hash" : "0xa5add0c606d3d2882838d1591be251a4e90e4ce9e01e89e0e89df3ee7cae99c4",
      "id" : "754"
    },
    {
      "hash" : "0x10f6dc2663b544fc4c2ba05b18c9934da7b8a572173e48eaaf444f0ab3e670bc",
      "id" : "837"
    },
    {
      "hash" : "0xb81004242a70aac08226ccb2cef924f9adfcb35a813e95f8c522bc43027b42fb",
      "id" : "707"
    },
    {
      "hash" : "0x3fd8960e5a6535ea272e15009e5aafcb5c89234d339189c9ad97a6ccb75d0b35",
      "id" : "99"
    },
    {
      "hash" : "0x183af6cfa239450a0f16ed8856092090c9873bbcf09c3cd5af089eea8656eb0e",
      "id" : "892"
    },
    {
      "hash" : "0xb959ae194e50feeba364d4e62669c0ed3b8cde361dfbd1011a33347736fdafd3",
      "id" : "879"
    },
    {
      "hash" : "0x3c39f17fa47e03757487b447b081d200b306034a61708ccf5cfb1a72ed90f226",
      "id" : "209"
    },
    {
      "hash" : "0xeeb5632ccb917c0f797601ca903f7a51e5e9e4c0f3833012720dc445b3214fc6",
      "id" : "311"
    },
    {
      "hash" : "0x8b8cab04adc2e048693ed4a2cd76f82a806d1930971f89aebbdfb4ac6c08359e",
      "id" : "1"
    },
    {
      "hash" : "0x30853e620a60cacab958df9379e49e99f5967e6751c2e49c3f2d6ba1815fb9db",
      "id" : "704"
    },
    {
      "hash" : "0x7abc48e0bfd0487b15989eaf6341b6cb509f95130c60c821b546c56210d0aa26",
      "id" : "557"
    },
    {
      "hash" : "0x669e092b7a8ef49656f722b3afd2e1f6940016918991459b478916efa0f72d9a",
      "id" : "695"
    },
    {
      "hash" : "0x71e7a4ddecae6d4ad5ae6391e8328ffd1e417f006e9e000a4b57665d8dc52797",
      "id" : "195"
    },
    {
      "hash" : "0xf38b56f90da3bc9490679e65131f7f9fdf8cb21ec04fbabc51811c283494fc20",
      "id" : "37"
    },
    {
      "hash" : "0x7d8e8dbf8c5d1dd3b56a0a357651c9bd45aea4934ec5a67a92562ba0edb1287b",
      "id" : "36"
    },
    {
      "hash" : "0xe14ec49bc74c8661318b19a619c0d7ba457ff7392581e76e48cd4f3b35be9ada",
      "id" : "38"
    },
    {
      "hash" : "0xc6b78bab32d1b7e0709c160493304cd8764a0996b671f99d53e0c8d7c83533a2",
      "id" : "6"
    },
    {
      "hash" : "0x6006944b00bc6304c45da0167e8d48b3cb53352c5bb53ecde16dd11b4f7b8351",
      "id" : "5"
    },
    {
      "hash" : "0xba5e663be8319194379b3c5afcd9767ecc4829926e7fb067a88b1363a6982df4",
      "id" : "25"
    },
    {
      "hash" : "0xec9e03dd9620019b1fec882cbba178bfdc09c08c6d8a06eef9774bda074e3827",
      "id" : "30"
    },
    {
      "hash" : "0xba4cdd53b35444be81e669f435f9581edc2665023926ecc481211b0be17fe716",
      "id" : "177"
    },
    {
      "hash" : "0x6cf381bca48cf3b88526e2952460f19163d7d365e530cc0789393e0b18d21562",
      "id" : "45"
    },
    {
      "hash" : "0x095a10091478e0be9ee12aa6596ba95f9c67ff47e88a0a46f5c8a0d90e653675",
      "id" : "50"
    },
    {
      "hash" : "0xc83eac7a8400f0527eeb37a205b2a6bb6bb37587969d948d3b3b5f411d1cd94e",
      "id" : "51"
    },
    {
      "hash" : "0x7009b403753161199732e40a8b471ca0bab4d2c1800635940eced7e13b446266",
      "id" : "991"
    },
    {
      "hash" : "0x15ebd14f0e1a7cd1ed54eaffe20f0d93f515d0e0f7f7610ef4e2752b897d7d8a",
      "id" : "480"
    },
    {
      "hash" : "0x97d42a0f7514f5c5ab80dc18de038c51e19594f26c013ce4fa63333f86102321",
      "id" : "16"
    },
    {
      "hash" : "0x3f9395ef021a0731817ce3d7a30f711b97fb95e4ce9896bbfe87d0db6ba16f90",
      "id" : "29"
    },
    {
      "hash" : "0x52d6b1f4c10cbbab40921469d0d890a2b6f41c5de35c10a3454c849590f011ac",
      "id" : "64"
    },
    {
      "hash" : "0x1f501e72d925c11fab2fa0379cee8c5674505c273e6e50fc43adaf57fec1a178",
      "id" : "567"
    },
    {
      "hash" : "0x7093ff534155e0998be6291ce95dd4b02f5a1153d3998acbc80311a65ff26c44",
      "id" : "434"
    },
    {
      "hash" : "0xc323112e867f030b78c1ff82b264c33dac1a1b0d2115df50348205b0e302d1d2",
      "id" : "131"
    },
    {
      "hash" : "0x05ad7cd6ff9187d496af51c98d8dd22534259bec45f4b92ebbd74803985e499f",
      "id" : "786"
    },
    {
      "hash" : "0x9fd5858e76ad3c26a473ef8a25aae35e1cf30d04709050cdba51c094b9f2ff5d",
      "id" : "31"
    },
    {
      "hash" : "0x139169e72fa9fcacf76c4ebf5134c30eaff828ce224fea506a2640b4a400b25c",
      "id" : "481"
    },
    {
      "hash" : "0x15f09c8161cf5b8baf771626bb3365ffca6160d7c0c4e53e9e8449fb3f7d843f",
      "id" : "585"
    },
    {
      "hash" : "0xdd423dc6627f6063afb63e7f5d509dd5c4281db893534a5d5504a813fda58468",
      "id" : "599"
    },
    {
      "hash" : "0x074a72ad7bce130dd55e84710fcfb40a2b217000468f4b2f28bbd3fc848afc29",
      "id" : "524"
    },
    {
      "hash" : "0x58849144743ed5c3994aacb1ecbdbeca7966bbe535c69639eecca005891767a2",
      "id" : "525"
    },
    {
      "hash" : "0x1d66ba77409b8637344b905ce952fa2fcd44897ab831f8c523f220183e952d42",
      "id" : "205"
    },
    {
      "hash" : "0xf8e32c1023516d8a71b4789f1bbb4a856e8071a5380bb9a786ef267e9a19e4c9",
      "id" : "638"
    },
    {
      "hash" : "0x525880890b494c42fcb95928b9e88d9034847e4c513feca1e9cd026208b6ff8a",
      "id" : "646"
    },
    {
      "hash" : "0x7134e2fc165de8a50b16aaadf6501b8846ff71e78ea4340a053c2736a4135c3a",
      "id" : "819"
    },
    {
      "hash" : "0xd399cbdc386090f9d3f6f8958f3978c0129306395098b3cbc386b28c232d285e",
      "id" : "588"
    },
    {
      "hash" : "0x23094c424c6a19c16c515babf5fec757ef26d1277478459d56eaa4414a9d3855",
      "id" : "576"
    },
    {
      "hash" : "0x8da7dbfab8313ba78de78c3016cd28153766342d04f34a7cc2e2a4d973351cab",
      "id" : "577"
    },
    {
      "hash" : "0x27d37276c1725561f3c57884c6703c24e96083dc57c3760389c3238c7e718c37",
      "id" : "626"
    },
    {
      "hash" : "0xd1dc1cd717a57621db9dd3e88817ddeb3af5d3a617e07c25aef0016ae44dbff5",
      "id" : "732"
    },
    {
      "hash" : "0x226f9db41a56a6c9d9b0be665d242b636a8fd68682fa229a31af5fef53d4fdcf",
      "id" : "743"
    },
    {
      "hash" : "0x06e8f04cd4a69aaa0fd7ccffe0ed6131894e24e5504ae1dcb60bd10b34df1604",
      "id" : "820"
    },
    {
      "hash" : "0xfa85312dcd839ad4e3a36349ef900ceaf7aa174969a6b39043e2effb05e7b394",
      "id" : "658"
    },
    {
      "hash" : "0x38be0eaa6da329761a5be8388a2124b8f956c7f0bbd57af692e7f78d06f273cb",
      "id" : "659"
    },
    {
      "hash" : "0x0f6eb9a8d412cc9bbbcb46cd0f6c8abcb14c4b7db90e54d16f8a85f8d670d270",
      "id" : "676"
    },
    {
      "hash" : "0x14ee02adaae4859a3b52ad064c73e7ced618a017a359d37b78f9682fa732c63a",
      "id" : "677"
    },
    {
      "hash" : "0x7379852f1b2497e0732219081fed7755d9d2d5ffa78e0a63ce06665178a7ba9c",
      "id" : "228"
    },
    {
      "hash" : "0xd918f751e469cb76a0052632b2dd64bf62a412be578ee2f6a421ee36c5a3b6ee",
      "id" : "238"
    },
    {
      "hash" : "0x117b9c679726c11ba4733c9a134a2a3c608fb205a8cf323c1327872ac35bb0c1",
      "id" : "692"
    },
    {
      "hash" : "0x4a60c7bfba7197f409aa9996813105fadef741791b482982e13ae270b1ccebcd",
      "id" : "9"
    },
    {
      "hash" : "0xb4e91edb99cc14fc9da743d1c92e8e6b5290d09978b3eff902a26d5f07cd3b28",
      "id" : "8"
    },
    {
      "hash" : "0xdd55b073ba8957ee8a4f14a0086aed070ee11d10adec4822994703e664084be8",
      "id" : "193"
    },
    {
      "hash" : "0x87f77c469239c8a65d3bc306aebd3e6cfb5d2465e8a38fb82ba64486506b3110",
      "id" : "204"
    },
    {
      "hash" : "0x88b8b92ea88a57cd8980ed69a177a7e8fdbd9f1e3160a5f85bf73c0c80b41a33",
      "id" : "269"
    },
    {
      "hash" : "0xc5380c850be5d238ccd6ad969fcbf1725829c54ffbe95f800ee02e4c08e23a6a",
      "id" : "118"
    },
    {
      "hash" : "0x16e4c439a3fd23bd33cfbf63a628e18925865ec17a1dd263d85eab01aa1efb8f",
      "id" : "94"
    },
    {
      "hash" : "0x9183fd991d342ec288cc25924afbaa8dbf2ac7bac8aa38b2ecb37b488f352f9e",
      "id" : "95"
    },
    {
      "hash" : "0x53d7c1853a3bb2ba26c03522dbf471141747dcc6c1b20a5650775bbfa85f1101",
      "id" : "154"
    },
    {
      "hash" : "0x17cce360afc7a70a5d3cb1e71f29b7e74f60446b3ad7d5a8e7c8b7a875af7da9",
      "id" : "295"
    },
    {
      "hash" : "0xb255459b7840e43854070665ccd2adbfd70243bb81f0fcc4018da934128b6b6a",
      "id" : "309"
    },
    {
      "hash" : "0xbf2f46280acc7ab013b092b2809a42cc3fd8b8e3b60eb0f26c6bbcaff57fdb1e",
      "id" : "362"
    },
    {
      "hash" : "0xa46d5d9b6281df6a4adfafeb9cd02ef407b4cd9b799e6f0de4562e1538a2275d",
      "id" : "850"
    },
    {
      "hash" : "0x17d3f85ab34b1a8adce0de94f5f67b702101903fdcf363369cf3160ddb36c825",
      "id" : "862"
    },
    {
      "hash" : "0xc22e23c19b36596ebfc84eb8a18762c3fdd6338a658dd3f199f9e3c3428905d3",
      "id" : "880"
    },
    {
      "hash" : "0x064721a0afd309c5c24449ac06ba8b0f7e080238c64ffd92592a4ee318f00182",
      "id" : "243"
    },
    {
      "hash" : "0x1894622d96fbb8247fa49515a5090a1479219998a31b65d760aa9ffa3fde235d",
      "id" : "654"
    },
    {
      "hash" : "0x8ada3506cbd89e60be74d98c5f66e015c88d49d7845512acfc445f1499b14ae1",
      "id" : "655"
    },
    {
      "hash" : "0x8a053f0a06284c9410cb12906aee35075a849fab35053eb2aae69351784c9956",
      "id" : "678"
    },
    {
      "hash" : "0x26431a76138b0ba0563f10c6fbff0fe955abcb3cb347de293c4403b5a77090ab",
      "id" : "706"
    },
    {
      "hash" : "0xd3b063598db8e3e355535e29f3422a9528ace99d262b8f386bc5e06d796901b6",
      "id" : "171"
    },
    {
      "hash" : "0x6acab257860b7ab1a39b5b9d86481bd8b9a14d4388df036f3c1a6880a7ef6759",
      "id" : "188"
    },
    {
      "hash" : "0x3feb96931c37db78e16ecbb16e32cbac11cd27be55ece1436c04b667a57c1153",
      "id" : "847"
    },
    {
      "hash" : "0xce33ca271eb88187eedade1e09e5a6d230329da0d6201a90bd6871874821b04a",
      "id" : "529"
    },
    {
      "hash" : "0x2e82ad6937e2946c7649db1b66a24446affd9eea119cdbb88ba4890b867385dc",
      "id" : "872"
    },
    {
      "hash" : "0x0757198aff5d5e5d659dc89fb4831075918ab121107c08427f61f33783d5fe82",
      "id" : "902"
    },
    {
      "hash" : "0x93165e3a4a144590641f467f602ec0a6260d70c8406ebfd7ce33fddafceb77e1",
      "id" : "943"
    },
    {
      "hash" : "0x91f72922658278c80565689ba2207ddd4a03e4e1ea45b4ff32baf707d14ad9f9",
      "id" : "955"
    },
    {
      "hash" : "0xbb6b68f954553814e3aa722581263cf60417e9ba88b5e03088db4e4e3b5d7f99",
      "id" : "913"
    },
    {
      "hash" : "0x61debb5562b3baa3ad0f164ae9c571ce9c9bc832c7943b8f50f9273f6f8f65cf",
      "id" : "215"
    },
    {
      "hash" : "0x811c8e299e7791fdb5c7501117fcbb8fbbae1c5b39cb4e83ad91e64f70f879aa",
      "id" : "555"
    },
    {
      "hash" : "0x53762575f86dc4d672ff4cb7626c30088b7cd81d3b9d780c35c86c062e3cf1ad",
      "id" : "946"
    },
    {
      "hash" : "0xf642f8c046a766bba95061060b6dfd96408d7fdd15132ca1360a00c4f00f34cc",
      "id" : "954"
    },
    {
      "hash" : "0xcedbc1160cd62d713b70dfb435863295440db964b46290dc1e6d40c85135dc0d",
      "id" : "974"
    },
    {
      "hash" : "0x230d41050bc951d3b8e495a9abf9515ab3cf02453bb078e41368ea3e34eed864",
      "id" : "155"
    },
    {
      "hash" : "0x7f2ef5521a0ada7809662921da7f71dbf1f14890366494494a9c1c042c254c96",
      "id" : "169"
    },
    {
      "hash" : "0x1a4bb09a4bef4d8016c1815f67c2c9cc9d2fffa2d5943168c1af3c644291c7ee",
      "id" : "170"
    },
    {
      "hash" : "0x4946abb284c593b72b36311db983e3a0d4df40ff2dc14dd96d25e14c332c58cc",
      "id" : "222"
    },
    {
      "hash" : "0x9b60d215c4c4491df94b7ba549c474c2eb59212675ec49e890c5f6a6ed6d7850",
      "id" : "208"
    },
    {
      "hash" : "0x2830878715aa3595c9dc5995c2376d462fdb76f98cb1b02a98d4caad3e43e1b2",
      "id" : "980"
    },
    {
      "hash" : "0x27b56fc07a19bc0907aa614283abf31acef7b2b96538847171fbda72a00449a3",
      "id" : "992"
    },
    {
      "hash" : "0xf80d427a4f53fa08acee0aa4f520a0251950a6556ff5d8b0aec82ddb4e99a6d9",
      "id" : "312"
    },
    {
      "hash" : "0xf468ed313e2d301a5a4e7955e0de1d15c61fbd372225c8044785ed26585c0755",
      "id" : "458"
    },
    {
      "hash" : "0xfca9e8e15dfb4b6d9e861e60bbda00c663d773e238ede9cc899254ed07b2d4e9",
      "id" : "861"
    },
    {
      "hash" : "0x1e87faea0b8641ff1796b7b0cc437f995d9ffc1ead5da38a5bc1b3ba8d0d3e31",
      "id" : "643"
    },
    {
      "hash" : "0x2f38e55fe0b7ace53fb9b597e3eb1fde608389e3b2999f79f42f058703b9b4c0",
      "id" : "593"
    },
    {
      "hash" : "0xe2ae2d5e580fca1a87fcbea8887568caee99cf99f790bc771e498ac72e2ced9b",
      "id" : "607"
    },
    {
      "hash" : "0xdc9ec57a40368f9911b0b575243fd0aca68823b6751a368afe16fab7806b5ad9",
      "id" : "610"
    },
    {
      "hash" : "0x66de76e768eeb52fc69a5e3feff4d83c78426c6d2c19e7ede3872c9f4f57fb50",
      "id" : "637"
    },
    {
      "hash" : "0xd9b9922a311a693144b0e90499fe041fedf607c3e1bd018d5ae6d3903904a685",
      "id" : "642"
    },
    {
      "hash" : "0x8e87653da82eb0c4e63a603007fd45d862ab996372621ab63a2e2ffbe1731524",
      "id" : "920"
    },
    {
      "hash" : "0xdd775a847874839900a152cb83463d1bec6b692cf8d7e6cdd6fa253190fcbc6a",
      "id" : "979"
    },
    {
      "hash" : "0x872e4cea76d56d05cefb5631392f818f7da418038691467520bb71020d6a5cec",
      "id" : "276"
    },
    {
      "hash" : "0x45fb919bdc660221759b697d7326fc45b467f51b2f304c630887f2d55da9ac15",
      "id" : "410"
    },
    {
      "hash" : "0xb20bab91fd977bad057fb0365d8eeec012a019df259ece067bf2f8e77ad79228",
      "id" : "812"
    },
    {
      "hash" : "0x7fc4a1362dd3eb82f97ebda9da50e12d6bd415b2edb9fd57df53872ca4695040",
      "id" : "286"
    },
    {
      "hash" : "0x2768bcf0ad4c552dd445d7b1cedd7f1e9a1c97ea86fd05b3d549a0dac40130a6",
      "id" : "287"
    },
    {
      "hash" : "0xf6e26cdaa7e84dd0e27fbea6ddcd849d8d233851377bfe1fe755ac9fbfb3e184",
      "id" : "342"
    },
    {
      "hash" : "0xb06cae06b94a853a411725aa2983ff7779376ac84653cf0f4184da24c71146f8",
      "id" : "356"
    },
    {
      "hash" : "0xb724178b8e70c6cba92604c47b44eeb50f2fdfd8adc066386e8774d720b0ffce",
      "id" : "675"
    },
    {
      "hash" : "0x0421744625dc5d7f1765bf5aa44e58dfe0c498a337852e187b9ffa050183855d",
      "id" : "794"
    },
    {
      "hash" : "0x8fbc690c8dd0c56e814638d2f9fc1764caf062b1579d0a80f25faf897473a052",
      "id" : "740"
    },
    {
      "hash" : "0xa8d546ff6af4b95ccc24fc3e3df09d5074e19a7916b15ccf4df8911c10739112",
      "id" : "494"
    },
    {
      "hash" : "0xda40834faf0fd2beda4010b29e8dd62ada73fe71dfb86cac7762bf39fb832381",
      "id" : "495"
    },
    {
      "hash" : "0xd0e119d2014e3ca9677cd413871f41f0dac5e82ef3492b7bc1257805a7ad3b94",
      "id" : "530"
    },
    {
      "hash" : "0x599791460c2adeacda18d91177b60d99c26c1a200fd93ea026b50ff7fd64eae3",
      "id" : "904"
    },
    {
      "hash" : "0xf49cfb3604c25b347f9d8ca73aab397321244d5096d33fc9535947e56cf5ebe2",
      "id" : "941"
    },
    {
      "hash" : "0x11f86bd323f3e3f03e984325b6205604397ddbe0ca3110f722a75a88cecbfcb1",
      "id" : "905"
    },
    {
      "hash" : "0x20edcfe185873888580f5b4fda9ec20a8f278042d15ee2021131094d2bfd5dd2",
      "id" : "476"
    },
    {
      "hash" : "0x689ad63ab96314458e0add208f211d6c0059f344558ab56516e8ac42165b34b8",
      "id" : "756"
    },
    {
      "hash" : "0xddd819cae7bdbfb54ae2d0a60e5329024cfc9d380d7636f789d32dd624410455",
      "id" : "764"
    },
    {
      "hash" : "0xfd50ecd7d95c31d5ec99946bd5cd576ef729564819bb595169416dc60527c1eb",
      "id" : "683"
    },
    {
      "hash" : "0x627b752604ae34ab93627acf6fc82485993659f14f7133d6a6c9b46d0149a374",
      "id" : "713"
    },
    {
      "hash" : "0x953a6c01dcadd53362d0680659b2a074d2870dcc09b7a2ea485c950448fc17c3",
      "id" : "727"
    },
    {
      "hash" : "0x68156a7828b514a74327bacc32d62422d1bf8de066454e7f233df101bcf1ca8f",
      "id" : "635"
    },
    {
      "hash" : "0xec013aa333e062062a59404239235e47f38c2eeb243929cf3143f4bdadd61afc",
      "id" : "591"
    },
    {
      "hash" : "0xdeb8a1108a10e5be97b24c42376a65a3577e851bf3ad3c973252dc498a5769ab",
      "id" : "766"
    },
    {
      "hash" : "0x21a65c43929f593a90fb5845cecd0eb760bc3f971eb83525bd0f10fb40701093",
      "id" : "736"
    },
    {
      "hash" : "0xf10f78fe3e957aa0d2c56f24a32f8695359b8874919c157f062345a79d5b208d",
      "id" : "807"
    },
    {
      "hash" : "0xfc6822ef08fe5aaeab0f1585814d314abd09b92eb4868c0926dff23ce9fb9f1c",
      "id" : "817"
    },
    {
      "hash" : "0x563b294426c676fd8be7592980626de5bdb543c5cbddee14c6e7594540febafd",
      "id" : "844"
    },
    {
      "hash" : "0x2e0475d51ebee49aa8943d3b8318263488621e78c16e03fe663fffb3a5cf1c7b",
      "id" : "845"
    },
    {
      "hash" : "0x990a1a918ce96dfa4488d0663af8faf5456e5edf9b14d302c4e0829dc361d227",
      "id" : "884"
    },
    {
      "hash" : "0x57f11ae1e7b8524119dd3ff9497468b10326327eff4a7392680bda83b8d01cf9",
      "id" : "885"
    }
  ]
}