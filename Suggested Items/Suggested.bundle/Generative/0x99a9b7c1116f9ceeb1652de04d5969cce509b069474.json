{
  "contractAddress" : "0x99a9b7c1116f9ceeb1652de04d5969cce509b069",
  "kind" : "p5js",
  "projectId" : "474",
  "script" : "var styles=`\r\nhtml, body {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbody {\r\n  overflow: hidden;\r\n  touch-action: none;\r\n  background: #252525;\r\n}\r\nmain {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\ncanvas {\r\n  width: auto !important;\r\n  height: auto !important;\r\n  max-width: 100% !important;\r\n  max-height: 100% !important;\r\n \/* box-shadow: 0px 0px 40px #000000;*\/\r\n}\r\n`,styleSheet=document.createElement(\"style\");styleSheet.innerText=styles,document.head.appendChild(styleSheet);let hash=tokenData.hash,id=tokenData.tokenId;console.log(\"hash: \"+hash),console.log(\"id: \"+id);let rad,offset=0,blurShader,pix=2,w=1500,angle,tick,sunX1,sunX2,sunY1,sunY2,sunRad1,sunRad2,sunS1,sunH2,sunB1,sunB2,sunH1,sunS2,uRadC2,randomCanvas,uRandStr,uMult,ar,swirlShader,swW,shapeC,dir,h1,h2,uDir1,uDir2,uScale,spaBuf,spaShader,uSc,uRound,radMult,compNames,tanC,tanC2,rotCh,rotChY,seedChooser,nSeed,rSeed,asChooser,asBool,prm,uPi=1,theVertex=`\r\n#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\nattribute vec3 aPosition;\r\nattribute vec2 aTexCoord;\r\nvarying vec2 vTexCoord;\r\nvoid main() {\r\n  vTexCoord = aTexCoord;\r\n  vec4 positionVec4 = vec4(aPosition, 1.0);\r\n  positionVec4.xy = positionVec4.xy * 2.0 - 1.0;\r\n  gl_Position = positionVec4;\r\n}\r\n`,blurFrag=`\r\nprecision highp float;\r\n\r\n#define PI 3.14159265359\r\n\r\nvarying vec2 vTexCoord;\r\nuniform sampler2D uTexture0;\r\n\r\nuniform vec2 uResolution;\r\nuniform float u_amp;\r\nuniform float u_octave;\r\nuniform float u_fbmAmp;\r\nuniform float u_roundness;\r\nuniform float u_angleC;\r\nuniform float u_dir1;\r\nuniform float u_dir2;\r\nuniform float u_randStr;\r\nuniform float u_mult;\r\nuniform sampler2D randomTex;\r\nuniform float u_scale;\r\n\r\nconst float PHI = 1.61803398874989484820459;\r\nconst float SEED = 43758.0;\r\n\r\nvec3 rgb2hsv(vec3 c) {\r\n  vec4 K = vec4(0.0, -1.0 \/ 3.0, 2.0 \/ 3.0, -1.0);\r\n  vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\r\n  vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\r\n  float d = q.x - min(q.w, q.y);\r\n  float e = 1.0e-10;\r\n  return vec3(abs(q.z + (q.w - q.y) \/ (6.0 * d + e)), d \/ (q.x + e), q.x);\r\n}\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec4 K = vec4(1.0, 2.0 \/ 3.0, 1.0 \/ 3.0, 3.0);\r\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\r\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\r\n}\r\n\r\nfloat random(vec2 co){\r\nreturn texture2D(randomTex, mod(co.xy\/0.7,0.2) * PI).y;\r\n}\r\n\r\nfloat noise (in vec2 st) {\r\n    vec2 i = floor(st);\r\n    vec2 fu = fract(st);\r\n    float a = random(i);\r\n    float b = random(i + vec2(1.0, 0.0));\r\n    float c = random(i + vec2(0.0, 1.0));\r\n    float d = random(i + vec2(1.0, 1.0));\r\n    vec2 u = fu * fu * (3.0 - 2.0 * fu);\r\n    return mix(a, b, u.x) +\r\n            (c - a)* u.y * (1.0 - u.x) +\r\n            (d - b) * u.x * u.y;\r\n}\r\n\r\n#define OCTAVES 12\r\nfloat fbm (in vec2 st) {\r\n    float value = 0.0;\r\n    float amplitude = u_amp;\r\n    float frequency = 0.1;\r\n    for (int i = 0; i < OCTAVES; i++) {\r\n        value += amplitude * noise(st);\r\n        st *= u_octave;\r\n        amplitude *= .45; \r\n    }\r\n    return value;\r\n}\r\n\r\nfloat fbm6( in vec2 p )\r\n{\r\n    vec2 q = vec2( fbm( p + vec2(0.0,u_roundness) ),\r\n                   fbm( p + vec2(u_dir1,2.0) ) );\r\n\r\n    vec2 r = vec2( fbm( p + 4.0*q + vec2(4.0,u_dir2)),\r\n                   fbm( p + 4.0*q + vec2(u_angleC * 4.0,0.0)));\r\n    return fbm( p + u_fbmAmp * r ); \r\n}\r\n\r\nvoid main() {\r\n\r\n  vec2 st = gl_FragCoord.xy\/uResolution.xy;\r\n  vec2 uv = vTexCoord;\r\n\r\n  uv.y = 1.0 - uv.y;\r\n  vec2 texelSize = 1.0 \/ uResolution;\r\n  vec2 offset;\r\n  float scale = u_scale;\r\n  float offset2 = 0.1;\r\n  float angle;\r\n  angle = noise(st + uv * 0.2) * PI * 2.0; \r\n\r\n  float radius = offset2;\r\n  st *= scale;\r\n  st *= radius * vec2(fract(angle *  st.x), fract(angle \/ st.y)) + random(uv\/1.0)\/u_randStr;\r\n\r\n  offset = texelSize  * vec2(40.0,40.0) - fbm6(uv) + 0.18;\r\n  \r\n  vec4 color = vec4(0.0);\r\n\r\n  float div;\r\n\r\n  float mult = u_mult;\r\n  \r\n  color -= texture2D(uTexture0, uv + vec2(offset.y, st.y)*mult); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.y, st.y)*mult); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.x, st.x)*mult); \r\n  color -= texture2D(uTexture0, uv + vec2(offset.x, st.x)*mult);\r\n\r\n  color += texture2D(uTexture0, uv + vec2(offset.y, -st.y)*mult); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.y, -st.y)*mult); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.x, -st.x)*mult); \r\n  color += texture2D(uTexture0, uv + vec2(offset.x, -st.x)*mult); \r\n\r\n  vec3 hsv = rgb2hsv(color.rgb);\r\n  hsv.y *= 1.4;\r\n  color.rgb = hsv2rgb(hsv);\r\n    \r\n  color.rgb = ((color.rgb - vec3(0.5)) * 1.1 + vec3(0.5));\r\n    \r\n  div = 2.5;\r\n  \r\n  color \/= div;\r\n                \r\n  gl_FragColor = color;\r\n}\r\n`,spaFrag=`\r\n#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\n#define PI 3.14159265359\r\nconst float PHI = 1.61803398874989484820459;\r\nconst float SEED = 43758.0;\r\nvarying vec2 vTexCoord;\r\nuniform sampler2D randomTex;\r\nuniform vec2 resolution;\r\nuniform sampler2D img;\r\nuniform float u_angleC;\r\nuniform float u_radC;\r\nuniform float u_dirR;\r\nuniform float uScale;\r\nuniform float uRound;\r\nuniform float u_radC2;\r\nuniform float u_tanC;\r\nuniform float utime;\r\nuniform float u_tanC2;\r\nuniform float uPi;\r\n\r\nfloat random(in vec2 co)\r\n{return texture2D(randomTex, mod(co.xy\/0.7,0.2) * PI).x;}\r\n\r\nfloat noise (in vec2 st) {\r\n   vec2 i = floor(st);\r\n   vec2 fu = fract(st);\r\n   float a = random(i);\r\n   float b = random(i + vec2(1.0, 0.0));\r\n   float c = random(i + vec2(0.0, 1.0));\r\n   float d = random(i + vec2(1.0, 1.0));\r\n   vec2 u = fu * fu * (3.0 - 2.0 * fu);\r\n   return mix(a, b, u.x) +(c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\r\n}\r\n\r\nvoid main(  )\r\n{\r\n vec2 st = gl_FragCoord.xy\/resolution.xy;\r\n vec2 uv = vTexCoord;\r\n\r\n uv.y = 1.0 - uv.y;\r\n\r\n vec2 texelSize = 1.0 \/ resolution;\r\n\r\n vec2 offset;\r\n float scale = uScale;\r\n float offset2 = uRound;\r\n float angle;\r\n\r\nif(u_angleC > 0.75){\r\n  angle = noise(st \/ uv * 0.2) * PI * uPi; \r\n}else if(u_angleC > 0.50){\r\n  angle = noise(st * uv * 0.2) * PI * uPi;  \r\n}else if(u_angleC > 0.25){\r\n  angle = noise(st - uv * 0.2) * PI * uPi; \r\n}else{\r\n   angle = noise(st + uv * 0.2) * PI * uPi;\r\n}\r\n\r\nfloat radius = offset2;\r\nst *= scale;\r\n\r\nif(u_radC > 0.85){\r\n  if(u_tanC > 0.50){\r\n   st *= radius * vec2(tan(angle * st.x), fract(angle * st.y)); \r\n  }else{\r\n    if(u_tanC2 < 0.50){\r\n     st *= radius * vec2(tan(angle * st.x), sin(angle * st.y)); \r\n    }else{\r\n        st *= radius * vec2(sin(angle * st.x), tan(angle * st.y)); \r\n    }\r\n  }\r\n}else if(u_radC > 0.68){\r\n st *= radius * vec2(fract(angle \/  st.x), fract(angle \/ st.y));\r\n}else if(u_radC > 0.51){\r\n st *= radius * vec2(tan(angle *  st.x), fract(angle \/ st.y));\r\n}else if(u_radC > 0.34){\r\n st *= radius * vec2(sin(angle * mod(st.x,st.y)), sin(angle \/ st.y *sin(st.x))); \r\n}else if(u_radC > 0.17){\r\n st *= radius * noise(vec2(sin(angle), cos(angle)) \/ st * fract(uv)); \r\n}else{\r\n st *= radius * vec2(fract(angle *  st.x), fract(angle \/ st.y));\r\n}\r\n\r\nif(u_radC2 < 0.50){\r\nst *= radius * vec2(tan(angle\/st.x) * cos(angle *  st.x), sin(angle * st.y) + fract(st.y\/angle));\r\n}else{\r\n\r\n}\r\n\r\nvec4 color = vec4(0.0);\r\nfloat div;\r\n\r\nif(u_dirR > 0.85){\r\n  color += texture2D(img, uv + vec2(st.x,st.y));\/\/\"Sağ\"\r\n}else if(u_dirR > 0.68){\r\n  color += texture2D(img, uv + vec2(-st.y,-st.x));\/\/\"Sağ2\"\r\n}else if(u_dirR > 0.51){\r\n  color += texture2D(img, uv + vec2(st.y,st.x));\/\/\"Norm\"\r\n}else if(u_dirR > 0.34){\r\n  color += texture2D(img, uv + vec2(st.y,-st.x));\/\/\"Norm2\"\r\n}else if(u_dirR > 0.17){\r\n  color += texture2D(img, uv + vec2(st.y*uv.y, st.x));\/\/\"SinsizUst\"\r\n}else{\r\n  color += texture2D(img, uv + vec2(st.x,mod(uv.y,st.y)));\/\/ \"AlttanTarama\"\r\n}\r\n\r\n color -= texture2D(img, uv - noise(vec2(st.x, st.y)) \/ random(uv));\r\n div = 0.45;\r\n color \/= div;\r\n color += vec4(0.03,0.03,0.03,1.0);               \r\n gl_FragColor = color;\r\n }\r\n`,swFrag=`\r\nprecision highp float;\r\n#define PI 3.14159265359\r\nvarying vec2 vTexCoord;\r\nuniform sampler2D uTexture0;\r\nuniform vec2 uResolution;\r\nuniform vec2 uCenter;\r\nuniform float uRad;\r\nuniform float uAngle;\r\nuniform float uTick;\r\nuniform float uShape;\r\nuniform float uDir;\r\nuniform float utime;\r\nuniform float uRadMult;\r\n\r\nvoid main()\r\n{\r\n    float effectRadius = uRad\/uRadMult;\r\n    float effectAngle = uAngle * PI * uDir;\r\n\r\n    vec2 center = uCenter.xy \/ uResolution.xy;\r\n    vec2 uv = gl_FragCoord.xy \/ uResolution.xy - center;\r\n\r\n    float len = length(uv * vec2(uResolution.x \/ uResolution.y, 1.));\r\n    float angle = atan(uv.x, uv.y) + effectAngle * smoothstep(effectRadius, uTick, len);\r\n    float radius = length(uv);\r\n\r\n    vec4 color = vec4(0.0);\r\n   \r\n    color = texture2D(uTexture0, vec2(radius * sin(angle), radius * cos(angle)) + center);\r\n     gl_FragColor = color;\r\n \r\n}\r\n`;function drawRandomTexture($,e){(randomCanvas=createImage(e,9*e\/16)).loadPixels();for(let o=0;o<randomCanvas.width;o++)for(let r=0;r<randomCanvas.height;r++)randomCanvas.set(o,r,color(random(255)));randomCanvas.updatePixels(),randomSeed(rSeed)}function setup(){let $=window.location.search;5e3==(resPrm=(prm=new URLSearchParams($)).get(\"resolution\"))&&(pix=5e3\/1500),4e3==resPrm&&(pix=4e3\/1500),3e3==resPrm&&(pix=2),nSeed=5198510*(R=new Random).random_dec(),rSeed=158191418*R.random_dec(),console.log(\"randomSeed: \"+rSeed),ar=9\/16,noiseSeed(nSeed),randomSeed(rSeed),asChooser=random(1),tanC=random(1),tanC2=random(1);let e=R.random_dec();rotCh=R.random_choice([0,1]),rotChY=0,uRadC2=random(1),random(1);let o=R.random_dec();e>.93?(compNames=\"comp1\",1==(seedChooser=random([1,2,3,4]))?randomSeed(124999210.33866358):2==seedChooser?randomSeed(20088393.962960925):3==seedChooser?randomSeed(102738549.64695875):randomSeed(144955035.23758054),o=0):e>.77?(compNames=\"comp2\",seedChooser=random([1,2,4,5,1,4]),rotChY=random([0,1]),uRadC2=R.random_choice([0,0,0,0,1,1,1]),1==seedChooser?randomSeed(3880058.2605842287):2==seedChooser?randomSeed(18913671.86441485):4==seedChooser?randomSeed(155879.87955448776):5==seedChooser&&randomSeed(150902325.960804)):e>.68?(compNames=\"comp3\",1==(seedChooser=random([1,2,8,1,2]))?randomSeed(109467394.53931598):2==seedChooser?randomSeed(101085646.42482981):randomSeed(9221765.304619182),o=0):e>.63?(compNames=\"comp4\",seedChooser=random([1,1,2,4,2,2,3,3,4,3]),rotChY=random([0,1]),1==seedChooser?randomSeed(24288482.1603664):2==seedChooser?randomSeed(136895108.30131546):3==seedChooser?randomSeed(59956919.715252206):randomSeed(103037819.1500985),o=0):e>.47?(compNames=\"comp5\",2==(seedChooser=random([2,3,4,6,7,8,9,3,7,8,9]))?randomSeed(62106201.516337566):3==seedChooser?randomSeed(15846824.234565198):4==seedChooser?randomSeed(133712810.95889445):6==seedChooser?randomSeed(78641511.83008125):7==seedChooser?randomSeed(127411789.00883949):8==seedChooser?randomSeed(122433972.10454836):randomSeed(45379661.40439634)):e>.35?(compNames=\"comp6\",2==(seedChooser=random([2,3,4,5,2,4]))?randomSeed(86855412.08410487):3==seedChooser?randomSeed(865155.5263759163):4==seedChooser?randomSeed(44013099.49922091):randomSeed(70071837.39923896)):e>.2?(compNames=\"comp7\",uRadC2=0,seedChooser=random([1,2,1]),rotChY=random([0,1]),1==seedChooser?randomSeed(85488884.24835339):2==seedChooser&&randomSeed(117427648.37402885)):e>.16?(compNames=\"comp8\",rotChY=random([0,1,0,0]),randomSeed(7655796.202862505),o=0):(compNames=\"comp9\",rotChY=random([0,1]),randomSeed(29867063.522541113),o=0),createCanvas(w*ar,w),pg=createGraphics(w*ar,w),blurPg=createGraphics(w*ar,w,WEBGL),bg=createGraphics(w*ar,w),blurPg2=createGraphics(w*ar,w,WEBGL),spaBuf=createGraphics(w*ar,w,WEBGL),pixelDensity(pix),colorMode(HSB,360,100,100,1),blurPg.imageMode(CENTER),pg.colorMode(HSB,360,100,100,1),bg.pixelDensity(pix),pg.pixelDensity(pix),spaBuf.pixelDensity(pix),spaBuf.noStroke(),blurPg.colorMode(HSB,360,100,100,1),blurPg.background(30,8,90),blurPg.pixelDensity(pix),blurPg2.colorMode(HSB,360,100,100,1),blurPg2.background(30,8,90),blurPg2.pixelDensity(pix),bg.colorMode(HSB,360,100,100,1),drawRandomTexture(ar,w),blurShader=blurPg2.createShader(theVertex,blurFrag),swirlShader=blurPg.createShader(theVertex,swFrag),spaShader=spaBuf.createShader(theVertex,spaFrag),background(0,0,2),pg.background(0,0,2),bg.background(0,0,2);let r=w\/3.333;sunX1=random(width\/2-r,width\/2-50),sunY1=height\/2,sunX2=random(width\/2+w\/20,width\/2+r),sunY2=height\/2;let a;a=1,sunRad1=random(w\/4.34,w\/3.03)\/a,sunRad2=random(w\/4.34,w\/3.03)\/a;let t=color(20,30,35),s=color(40,30,35),u=color(150,15,30),n=color(190,30,35),_=color(210,30,35),i=color(230,30,35),c=color(250,30,35),l=color(340,15,30),d=color(360,30,35),m=R.random_choice([t,s,u,n,_,i,c,l,d]),f=R.random_choice([t,s,u,n,_,i,c,l,d]);m==f&&(o=0),sunH1=hue(m),sunH2=hue(f),sunS1=saturation(m),sunS2=saturation(f),sunB1=brightness(m),sunB2=brightness(f),h1=random([20,40,30,340,180,200,150,0]),h2=random([20,40,30,340,180,200,150,0]),seaH2=random(1),alp=random(.2,.8),alp2=random(.3,.7);let h=random(1),v=random(1),p=random(1);if(uSc=1,h=h>.75?.76:h>.5?.51:h>.25?.26:0,v=v>.85?.86:v>.68?.69:v>.51?.52:v>.34?.35:v>.17?.18:0,uRadC2=uRadC2>.5?1:0,p=p>.85?.86:p>.68?.69:p>.51?.52:p>.34?.35:p>.17?.18:0,sky(sunH1,sunH2),sun(sunX1,sunY1,sunRad1,50,alp,sunH1,sunS1,sunB1,random([1,1.1,1.2,1.2,1.2,1.3]),2),sun(sunX2,sunY2,sunRad2,50,alp2,sunH2,sunS2,sunB2,random([1,1.1,1.2,1.2,1.2,1.3]),2),o<.85){pg.beginShape();for(let x=0;x<100;x++){let g=random(0,width-0),C=random(height),S=map(noise(C\/20),0,1,-50,50),y=g+S,b=random(30,50),D=random(30,50),P=dist(y,C,sunX1,sunY1);P<sunRad1&&P>sunRad1\/2&&(pg.fill(h1,b,random(30,60),alp+.1),pg.stroke(h1,D,random(30,60),alp+.1),pg.curveVertex(y,C))}pg.endShape(),pg.beginShape();for(let T=0;T<100;T++){let k=random(0,width-0),U=random(height),N=map(noise(U\/20),0,1,-50,50),B=k+N,Y=random(30,50),A=random(30,50),M=dist(B,U,sunX2,sunY2);M<sunRad2&&M>sunRad2\/2&&(pg.fill(h2,Y,random(30,60),alp+.1),pg.stroke(h2,A,random(30,60),alp+.1),pg.curveVertex(B,U))}pg.endShape()}roundInt=4,uOctave=round(random(3,4.5),roundInt),uFbmAmp=round(random(40,80),roundInt),uAmp=.15,uRoundness=round(4*random(1),roundInt),uDir1=round(4*random(1),roundInt),uDir2=round(4*random(1),roundInt),uRandStr=.5,uMult=random(1.5,2),uScale=random([.05,.2,.07,.1]),dir=random([1,-1]),\"comp1\"==compNames?(uRadC2=1,h=.51,v=.35,p=.69,shapeC=.41,uPi=random(1,1.5),uSc=random(1,1.5),uRound=random(.2,.4),rad=R.random_choice([.5,.6,.7,.8])\/1.25,angle=R.random_choice([1,2]),tick=R.random_choice([0,.1])):\"comp2\"==compNames?(h=.51,v=0,p=random([0,.35]),shapeC=.41,uPi=1,1==uRadC2&&(p=.35),0==uRadC2&&(uPi=random([.65,1.4])),uSc=random(.7,1.5),uRound=random(.2,.35),rad=R.random_choice([.5,.5,.5,.5,.6,.6,.7,.8,.6,.8,.7,.8,.8])\/1.25,angle=R.random_choice([1,1,1,1,1,2,1,2,1,1,1,1]),tick=R.random_choice([0,0,0,.1,.2,.3,.3,.2,.1,.3,0,.1,.2,0])):\"comp3\"==compNames?(uRadC2=0,h=random([.76,0,.26,.51,0,0]),v=.18,p=.18,shapeC=.41,uPi=random(1,2),uSc=random(.7,1.2),uRound=random(.1,.25),rad=R.random_choice([.5,.5,.5,.5,.6,.6,.7,.8,.6,.8,.7,.8,.8])\/1.25,angle=R.random_choice([1,1,1,1,1,2,1,2,1,1,1,1]),tick=R.random_choice([0,0,0,.1,.2,.2,.1,0,.1,.2,0])):\"comp4\"==compNames?(uRadC2=1,h=random([.26,0]),v=.86,p=random([.69,.18]),tanC=random([0,0,0,0,1,1,1]),tanC2=random([1,1,1,0,0]),uPi=1,shapeC=.41,uSc=1,uRound=random(.05,.35),rad=R.random_choice([.6,.7,.8])\/1.25,angle=R.random_choice([1,2]),tick=R.random_choice([0,.1,.2])):\"comp5\"==compNames?(uRadC2=0,h=random([.76,.26,0]),v=random([.52,.52,.52,.86,.86]),p=random([.52,.18,.69,.25,0,.35]),shapeC=.41,tanC=0,tanC2=random([0,1,1]),uPi=random([1,1,1,2,1,2,1,2,1,2]),uSc=random(.8,1.2),uRound=random(.1,.2),rad=R.random_choice([.5,.5,.5,.5,.6,.6,.7,.8,.6,.8,.7,.8,.8])\/1.25,angle=R.random_choice([1,1,2,1,1,2,1,2,1,1,1,1]),tick=R.random_choice([0,0,0,.1,.2,.3,.3,.2,.1,.3,0,.1,.2,0])):\"comp6\"==compNames?(uRadC2=0,h=random([.26,.26,.26,.76,.51]),v=.35,p=random([.18,.52,0,.69,.86,.35]),shapeC=.41,uPi=random(.75,1.5),uSc=random(.5,1.5),uRound=random(.2,.45),rad=R.random_choice([.5,.5,.5,.5,.6,.6,.7,.8,.6,.8,.7,.8,.8])\/1.25,angle=R.random_choice([1,1,2,1,1,2,1,2,1,1,1,1]),tick=R.random_choice([0,0,0,.1,.2,.3,.3,.2,.1,.3,0,.1,.2,0])):\"comp7\"==compNames?(h=random([0,.26]),v=0,p=random([.69,.35,.86,.52]),shapeC=.41,uPi=1,1==uRadC2&&(uPi=random(1,2)),uSc=random(.5,1.5),uRound=random(.2,.4),rad=R.random_choice([.5,.5,.5,.5,.6,.6,.7,.8,.6,.8,.7,.8,.8])\/1.25,angle=R.random_choice([1,1,2,1,1,2,1,2,1,1,1,1]),tick=R.random_choice([0,0,0,.1,.2,.3,.3,.2,.1,.3,0,.1,.2,0])):\"comp8\"==compNames?(uRadC2=1,h=.76,v=.86,p=random([.25,.35,.35]),shapeC=.41,tanC=0,tanC2=0,uPi=1,0==p&&(tanC2=random([0,1]),uPi=random(1,1.5)),uSc=random(1,1.2),uRound=.2,rad=R.random_choice([.7,.8])\/1.25,angle=2,tick=R.random_choice([.2,.1])):\"comp9\"==compNames&&(uRadC2=0,h=0,v=.69,p=.69,shapeC=.41,uPi=random(1,2),uSc=random(.74,1.5),uRound=random(.2,.5),rad=R.random_choice([.5,.5,.5,.5,.6,.6,.7,.8,.6,.8,.7,.8,.8])\/1.25,angle=R.random_choice([1,1,2,1,1,2,1,2,1,1,1,1]),tick=R.random_choice([0,0,0,.1,.2,.3,.3,.2,.1,.3,0,.1,.2,0])),swW=random(1.5,3),shapeC=.41,radMult=\"comp1\"==compNames||\"comp4\"==compNames||\"comp8\"==compNames?R.random_choice([1.75,1.5,1.75,1.5,1.75]):R.random_choice([2,2,2,1.75,1.5,1.75,2]);for(let F=0;F<2;F++)blurShader.setUniform(\"uTexture0\",pg),blurShader.setUniform(\"randomTex\",randomCanvas),blurShader.setUniform(\"u_amp\",uAmp),blurShader.setUniform(\"uResolution\",[width*pix,height*pix]),blurShader.setUniform(\"u_octave\",uOctave),blurShader.setUniform(\"u_fbmAmp\",uFbmAmp),blurShader.setUniform(\"u_roundness\",uRoundness),blurShader.setUniform(\"u_dir1\",uDir1),blurShader.setUniform(\"u_dir2\",uDir1),blurShader.setUniform(\"u_randStr\",uRandStr),blurShader.setUniform(\"u_mult\",uMult),blurShader.setUniform(\"u_scale\",uScale),blurPg2.noStroke(),blurPg2.shader(blurShader),blurPg2.translate(-width\/2,-height\/2),blurPg2.rect(0,0,width,height),bg.push(),bg.noStroke(),bg.imageMode(CENTER),bg.translate(width\/2,height\/2),bg.image(blurPg2,0,0,width,height),bg.pop(),starsBg(swW),swirlShader.setUniform(\"uTexture0\",bg),swirlShader.setUniform(\"uResolution\",[width*pix,height*pix]),swirlShader.setUniform(\"uCenter\",[width\/swW*pix,height\/2*pix]),swirlShader.setUniform(\"uRad\",rad),swirlShader.setUniform(\"uAngle\",angle),swirlShader.setUniform(\"uTick\",tick),swirlShader.setUniform(\"uShape\",shapeC),swirlShader.setUniform(\"uDir\",dir),swirlShader.setUniform(\"uRadMult\",radMult),blurPg.noStroke(),blurPg.shader(swirlShader),blurPg.translate(-width\/2,-height\/2),blurPg.rect(0,0,width,height),spaShader.setUniform(\"resolution\",[width*pix,height*pix]),spaShader.setUniform(\"randomTex\",randomCanvas),spaShader.setUniform(\"img\",blurPg),spaShader.setUniform(\"u_radC\",v),spaShader.setUniform(\"u_angleC\",h),spaShader.setUniform(\"u_dirR\",p),spaShader.setUniform(\"uScale\",uSc),spaShader.setUniform(\"uRound\",uRound),spaShader.setUniform(\"u_radC2\",uRadC2),spaShader.setUniform(\"u_tanC\",tanC),spaShader.setUniform(\"u_tanC2\",tanC2),spaShader.setUniform(\"uPi\",uPi),spaBuf.shader(spaShader),spaBuf.rect(0,0,width,height),push(),0==rotCh?(translate(0,0),scale(1,1)):(translate(width,0),scale(-1,1)),1==rotChY&&(translate(0,height),scale(1,-1)),image(spaBuf,0,0),pop();stars(swW,1,2),stars(swW,.25,2.5),console.log(\"Lumina by DistC.\")}function draw(){noLoop()}function keyPressed(){(\"s\"==key||\"S\"==key)&&saveCanvas(\"DistCollective_Lumina\",\"png\")}function sun($,e,o,r,a,t,s,u,n,_){for(let i=0;i<r;i++){let c=random(1);c>.6?pg.beginShape(LINES):c>.4?.7>random(1)?100==r?pg.beginShape():pg.beginShape(TRIANGLE_FAN):pg.beginShape():pg.beginShape(TRIANGLES);for(let l=0;l<TAU;l+=.01){let d=map(noise(offset,.001*l),0,1,-50,50);offset+=.001;let m=o-i*o\/20,f=o-i*o\/20,h=$+cos(l\/n)*m+d\/2,v=e+sin(l\/_)*f+d;pg.noFill(),pg.strokeWeight(1.2*random(1,2)),pg.stroke(t,s,u,random(a)),pg.curveVertex(h^l,v^l)}pg.endShape()}}function sky($,e){pg.push();let o=random([50,50,100,100,100,80])\/2;for(let r=0;r<450;r++){var a=random(width),t=random(height),s=random(width),u=random(height),n=map(t,0,height\/2,200,10);pg.noFill();var _=dist(sunX1,sunY1,a,t),i=dist(sunX2,sunY2,s,u),c=map(_,0,3.5*sunRad1,100,0),l=map(i,0,3.5*sunRad2,100,0);pg.stroke($,o,c,random(.1)),pg.strokeWeight(random(.5,1.2)*w\/250),pg.line(a,t,a-random(-n,n),t),pg.stroke(e,o,l,random(.1)),pg.line(s,u,s-random(-n,n),u)}pg.pop()}function stars($,e,o){for(let r=0;r<w*o;r++){let a=random(width),t=random(height);noStroke(),beginShape(),drawingContext.shadowOffsetX=0,drawingContext.shadowOffsetY=0,drawingContext.shadowBlur=7,drawingContext.shadowColor=\"white\";let s=random(.001,1)*e;for(let u=0;u<TAU;u+=PI\/10){let n=a+sin(u)*s+random(-.5,.5),_=t+cos(u)*s+random(-.5,.5);fill(random([0,20,340,280]),random(7,20),random(90,100)\/1,random(.01,.8)\/1.2),curveVertex(n,_)}endShape()}}function starsBg($){for(let e=0;e<w\/2;e++){let o=random(width),r=random(height);bg.noStroke(),bg.beginShape();let a=random(.01,2);for(let t=0;t<TAU;t+=PI\/10){let s=o+sin(t)*a+random(-.5,.5),u=r+cos(t)*a+random(-.5,.5),n=dist(o,r,width\/$,height\/2);bg.fill(random([0,20,340,280]),random(10,30),random(90,100)\/1,random(.01,.8)\/1.2),n<width\/3&&bg.curveVertex(s,u)}bg.endShape()}}class Random{constructor(){this.useA=!1;let $=function($){let e=parseInt($.substr(0,8),16),o=parseInt($.substr(8,8),16),r=parseInt($.substr(16,8),16),a=parseInt($.substr(24,8),16);return function(){r|=0;let $=((e|=0)+(o|=0)|0)+(a|=0)|0;return a=a+1|0,e=o^o>>>9,o=r+(r<<3)|0,r=(r=r<<21|r>>>11)+$|0,($>>>0)\/4294967296}};this.prngA=new $(tokenData.hash.substr(2,32)),this.prngB=new $(tokenData.hash.substr(34,32));for(let e=0;e<1e6;e+=2)this.prngA(),this.prngB()}random_dec(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}random_num($,e){return $+(e-$)*this.random_dec()}random_int($,e){return Math.floor(this.random_num($,e+1))}random_choice($){return $[this.random_int(0,$.length-1)]}}",
  "tokens" : [
    {
      "hash" : "0x0a1f30ed7ea038b513b50a582bead79385517a94687fbdca8d394b3d27da5f03",
      "id" : "474000000"
    },
    {
      "hash" : "0x04446113f7b607e0ec19582cc23ef04007d0e657469d201b02253b3ca16e7e02",
      "id" : "474000077"
    },
    {
      "hash" : "0xa65e526c855cf7ec107e6df92b4906b465403e11103b5800c2e192a970d73015",
      "id" : "474000018"
    },
    {
      "hash" : "0x9652544f2ac3ef32b86159e146d78cc028c584f91a86ddac15d2ccc32d8923dd",
      "id" : "474000044"
    },
    {
      "hash" : "0xe183011adbb07599bb65635a67e11c8902d58d860e98685144229c4a80112f5e",
      "id" : "474000049"
    },
    {
      "hash" : "0x82ef1d6ef8cd41fe976e491236954ae9b7ad8c9e886090b2b4de746f18adc297",
      "id" : "474000012"
    },
    {
      "hash" : "0xda92cfddb646971a6f60a090c0b2b3023d6a5ab840624a694a7cf67a2d53db8f",
      "id" : "474000039"
    },
    {
      "hash" : "0x58a98d41584097b5dd1dc32fb8f6578bfeb297f2c721c59faad977cb3fd81de8",
      "id" : "474000069"
    },
    {
      "hash" : "0xaf8e526f399135431c1dd4a529902d7004d287e53cbb7a69c09abf18c3b98c93",
      "id" : "474000057"
    },
    {
      "hash" : "0x8ea233cc50caeeacebeb30ff4ac16721ba307d5078d97bdc5dd238236a6adc0d",
      "id" : "474000054"
    },
    {
      "hash" : "0x37fef304c2f0359223a66178fe239a0f8cb48e797dde34d15929518eac2bacc0",
      "id" : "474000076"
    },
    {
      "hash" : "0xfa8464bbe82eb585847a5efab3a922e7f0e9f9be62caa5a115b2f76caf5035da",
      "id" : "474000065"
    },
    {
      "hash" : "0x1741f212da945240b153008c1b2aea0ca1d75206fc2fdd8ac100bc58e98a0843",
      "id" : "474000036"
    },
    {
      "hash" : "0x6510f1a16977d9a4d3bc31b84d68458246465abd9037ef1b86bf92ff4cc7f033",
      "id" : "474000022"
    },
    {
      "hash" : "0xec0a8e311887f6f91e7c90e09b309c0b3f05d0be5af574930df0a00fda95da7c",
      "id" : "474000023"
    },
    {
      "hash" : "0x54481a892a20ee676e4bd0229fbb52a43fc5aeccc93a4e07e88eafaca8e05770",
      "id" : "474000007"
    },
    {
      "hash" : "0xb46f552185032a821a4d28b61ae14d0d1004c06f8abb5ce475bb766c2cac58d4",
      "id" : "474000058"
    },
    {
      "hash" : "0xd30d9aa5199629f6009210ef63a1a37cab255c04e77bf8554790f8f3a8c71aba",
      "id" : "474000019"
    },
    {
      "hash" : "0xb16f2fa54f57b5360ab0baf8fdf9372b3744ac24178601cfb4f5c1e31486eba0",
      "id" : "474000031"
    },
    {
      "hash" : "0xf402d668be39c68344c60dcdad4288a7858011142a0aaf64028a878c0b9f9319",
      "id" : "474000078"
    },
    {
      "hash" : "0xcd7d6ffdb84ec751f106f6b8f2b071caa684779e55cd6542985daa5c29988309",
      "id" : "474000008"
    },
    {
      "hash" : "0x6bd5cf51df2245e1f9bd7bc6fb4a30907acffe67568a8083ef24aa6536212d49",
      "id" : "474000009"
    },
    {
      "hash" : "0x9eac301c34f173bdf77ae33809c25207343aba87df213251254022334ca4b9c5",
      "id" : "474000034"
    },
    {
      "hash" : "0xb0a14a351898441583eb64bd463a9461c240fce6f8846815c9bc085e7b26e7ab",
      "id" : "474000051"
    },
    {
      "hash" : "0x8f532294b6c08d4892c8f97d653654e0e98eabb842a51f93fbecd0ea56a2c06b",
      "id" : "474000032"
    },
    {
      "hash" : "0xd76c253eedd1f2404ba6cd45bde038f772f6d18c41bad62e88130fe4904bd718",
      "id" : "474000006"
    },
    {
      "hash" : "0x496be6826e3792b76e41268e0635a6fd4e7fecc7900aa427b5c1eb9cc3eeb9b4",
      "id" : "474000064"
    },
    {
      "hash" : "0xa3890b635e1aac5bc6bc7494d8abb787e8b687e7bdbab7632ac54ccfc0764a6f",
      "id" : "474000048"
    },
    {
      "hash" : "0x1b1b0a87c629d8ef7e6a9894c963dda253f48a7dfba3726aa907d8ede3e84f4d",
      "id" : "474000079"
    },
    {
      "hash" : "0x7222871c81ebc08c2726052412345529698c031b2daedcad39f23993ac8bd374",
      "id" : "474000043"
    },
    {
      "hash" : "0x5813f959178b080b4ee53fe5841b6e965b3de756dee7899a08cfb5555dac98a3",
      "id" : "474000070"
    },
    {
      "hash" : "0xa4c5a6f2e233c30fdb443fa423a5ad987817147dbcda4768dad979fccaf12e5b",
      "id" : "474000015"
    },
    {
      "hash" : "0x974a6a8301a1ae018a3a9dbbbe4054c1cc821ab19e3905a59ca6adee42a0fe7b",
      "id" : "474000059"
    },
    {
      "hash" : "0x0911ce7b481fca515889b37cf530385566d9e036205467e3c4c1958fc61f3c01",
      "id" : "474000035"
    },
    {
      "hash" : "0x648d89b4ce1d9cc59a85436a991ce0a222520974bcf2d6d4138f6cf90abf7d58",
      "id" : "474000016"
    },
    {
      "hash" : "0xbe1921d6080eb0c585052ddc398706da776469bc610805011c9e9e2aaff54fb8",
      "id" : "474000004"
    },
    {
      "hash" : "0x0d5e9b2864660f3f03070974e328606e8f875837d5bf191ee0d423d1391ca8dc",
      "id" : "474000038"
    },
    {
      "hash" : "0xfc92e8019944cc48efc88baf051d40cd8746abd97868c174a6087df841302234",
      "id" : "474000014"
    },
    {
      "hash" : "0x675254112c3e3458a6347d48dc85c36d6d8c24861fde0d1ad0f40ea258dd2655",
      "id" : "474000001"
    },
    {
      "hash" : "0x14e959e8462d08fd8b7ded0b822ad466c1051f05a4a9e2b84dee1b41977eb489",
      "id" : "474000053"
    },
    {
      "hash" : "0xa523628f796ace679ec21e187596bbaf083352728997dc8ac357ea9c0888d93e",
      "id" : "474000047"
    },
    {
      "hash" : "0x353ee1b54f91e303909483d5aef15fd0a75b34ec5e6e0969310179b23cf73636",
      "id" : "474000052"
    },
    {
      "hash" : "0x5eda4ad53d751b1980f904ab17d50a7e7414982e422a394b43b8fedd2eef6b30",
      "id" : "474000029"
    },
    {
      "hash" : "0xebdf8f8acae46c73483f81a6f501334d2d4f34ada4b9c299f0586e88f9288ef6",
      "id" : "474000025"
    },
    {
      "hash" : "0x98497ebace5164637a67674639becf205edeafcc972e21df3fb016545a2e673b",
      "id" : "474000073"
    },
    {
      "hash" : "0x63f33f262aa832cb0c7d0cb28126ca0b8e3c228f06d61ca5ac1cf7a4313d9afc",
      "id" : "474000062"
    },
    {
      "hash" : "0x096824b96bc41914193219fec5a7bea1c626ecd27b93cebaec0e5836ba9595c1",
      "id" : "474000024"
    },
    {
      "hash" : "0x252fe2de525fdf0c5ea09ece127cb040e81759a257ae68c1ad993549ab511bab",
      "id" : "474000028"
    },
    {
      "hash" : "0xf2a64449d231d73522bfe3d85c6b4db5d975b292e39cb86f517e77de4b7cab4a",
      "id" : "474000066"
    },
    {
      "hash" : "0xaee9233ebcbea04af96f899d2183b159b4d361648651557169b48b62defa98c3",
      "id" : "474000005"
    },
    {
      "hash" : "0xee206ef36a3af6d3b2fab3f94f98effc69e30a0c5f05a64d812ada182ff8a97e",
      "id" : "474000030"
    },
    {
      "hash" : "0x5d4f5a9b1671c8ca6211eda0e270bb9b5e17cdad7923e15ef8388c7251ae5369",
      "id" : "474000041"
    },
    {
      "hash" : "0x89b69ab7e12dc5b7a67f2d6f0a4bbf34769d7dd61e6b4b01c22244fbb9ab10da",
      "id" : "474000013"
    },
    {
      "hash" : "0x6169aebfcc7325d01968df8c8f4ac1d423fe835715fb95e6caa92a795d990f46",
      "id" : "474000003"
    },
    {
      "hash" : "0x22987cd8453814b47380153719cec310382bd944503b710e17a833702055dad2",
      "id" : "474000050"
    },
    {
      "hash" : "0x73bd1e5143c589c042ec5d6dd519b3bc28a470166f6c9db6f78a36d4e438b8a5",
      "id" : "474000033"
    },
    {
      "hash" : "0x4102d1d1b327eb37bea1d6e15a57bbadca2dba29eabe5ed0e905e68517049547",
      "id" : "474000075"
    },
    {
      "hash" : "0xbf03d7a4918db7f787b9ddeef117c718a5078639cf2af8ae75dab5a11c303894",
      "id" : "474000011"
    },
    {
      "hash" : "0xefa570cc93add8b274d1d9237d42be8c0b2a5b91a5d0ff763b48b6c8158d42f9",
      "id" : "474000068"
    },
    {
      "hash" : "0xf04c9b4996226c93d1361bed714828fbd03ea9a4ce29cb15b7d22eefc9773b61",
      "id" : "474000010"
    },
    {
      "hash" : "0xb143b6cd10edbb2ca0c436d2f823095c446879d8488f0e75ab5daeb527026aba",
      "id" : "474000063"
    },
    {
      "hash" : "0xcb01073d08bb8b0827f9117385914218ce55d9dcd807fdb96c8a5a99ed1a340d",
      "id" : "474000040"
    },
    {
      "hash" : "0xd95bdec8fd89ee4a47f14da305d922247ec78d794c93d4f4273175c2e5b1d377",
      "id" : "474000021"
    },
    {
      "hash" : "0x5f31d3fecc73296f2fabcc8890cc291d9b050ecdf2d06498be5e56f7b6d0be1e",
      "id" : "474000002"
    },
    {
      "hash" : "0xb6f91d34eca2bd0ef923d9cd3e7f7b75aba665ef065714fc4b8c420f3f4e9997",
      "id" : "474000027"
    },
    {
      "hash" : "0x3d9aad2307f0ec777ed322e2613d581612561a92e392152094b52ae7134b1f21",
      "id" : "474000045"
    },
    {
      "hash" : "0x5bd3b1d5c1259e35cdcc73daf004028152b091bee5f2fd6047dfcbdc14b7f597",
      "id" : "474000056"
    },
    {
      "hash" : "0x685e3286983d2a264322388624f9fa26718caf6fe81ae5cd56f8a8bb94ec7101",
      "id" : "474000037"
    },
    {
      "hash" : "0x30fcd7bcaace60349dd9dd77c4a43a58fb1a80ca6b71ca86f79e9db6bf6ea7f0",
      "id" : "474000071"
    },
    {
      "hash" : "0x8248e142c05e84c826a68ef6ced766048bb449c81f8fea2d1c6e3a1720f45ab1",
      "id" : "474000026"
    },
    {
      "hash" : "0x0cf564ed2086df4d4ce311872b03d8164b557ac084ef7f7457a7b72d243fd2c5",
      "id" : "474000042"
    },
    {
      "hash" : "0xdaf65242bbcc21463e2ec871924411fc0e4bb56a1244ee2aa0bdc09f202f66e2",
      "id" : "474000017"
    },
    {
      "hash" : "0x3266de063d70e619a8e3a937152bdb4d86b2e5d2c21865d62114ee7bca537c5e",
      "id" : "474000046"
    },
    {
      "hash" : "0x96e6d4a0f273fd92b8c95c3d3e6116e9bc5dbcfcc63b67f3f836e7e0aea266ba",
      "id" : "474000060"
    },
    {
      "hash" : "0x5333858053ff45bd699ed7774ee1fe584567509b0eb39df75331e5223ec5ff01",
      "id" : "474000072"
    },
    {
      "hash" : "0x86c1642c97c4444d9377629f1eef03eacd02a603941a804ce67f4d7cf0cf5289",
      "id" : "474000061"
    },
    {
      "hash" : "0xe8c847bf82697a6a1ea4d1ebaa59973ed720163ff6e7ff053ccbde4aee3e9225",
      "id" : "474000067"
    },
    {
      "hash" : "0xd58fffe7b4488b0d587ede33b74f5dd01fe718489f4f47be8c5f43a406251180",
      "id" : "474000074"
    },
    {
      "hash" : "0xa7b1c645800b5b8bcb0cd5022d517d5db8b2463d0fd759d0557a221209302c4f",
      "id" : "474000020"
    },
    {
      "hash" : "0x744c3ef6cd34c405f8a7dc2cd0c75ab1aac2d3bcf7cd17f49c3cee993c4e6405",
      "id" : "474000055"
    }
  ]
}