{
  "contractAddress" : "0x9f79e46a309f804aa4b7b53a1f72c69137427794",
  "kind" : "p5js",
  "projectId" : "5",
  "script" : "let hash = tokenData.hash\nclass Random {\n  constructor() {\n    this.useA = false;\n    let sfc32 = function (uint128Hex) {\n      let a = parseInt(uint128Hex.substr(0, 8), 16);\n      let b = parseInt(uint128Hex.substr(8, 8), 16);\n      let c = parseInt(uint128Hex.substr(16, 8), 16);\n      let d = parseInt(uint128Hex.substr(24, 8), 16);\n      return function () {\n        a |= 0; b |= 0; c |= 0; d |= 0;\n        let t = (((a + b) | 0) + d) | 0;\n        d = (d + 1) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        c = (c + t) | 0;\n        return (t >>> 0) \/ 4294967296;\n      };\n    };\n    \/\/ seed prngA with first half of tokenData.hash\n    this.prngA = new sfc32(tokenData.hash.substr(2, 32));\n    \/\/ seed prngB with second half of tokenData.hash\n    this.prngB = new sfc32(tokenData.hash.substr(34, 32));\n    for (let i = 0; i < 1e6; i += 2) {\n      this.prngA();\n      this.prngB();\n    }\n  }\n  \/\/ random number between 0 (inclusive) and 1 (exclusive)\n  random_dec() {\n    this.useA = !this.useA;\n    return this.useA ? this.prngA() : this.prngB();\n  }\n  \/\/ random number between a (inclusive) and b (exclusive)\n  random_num(a, b) {\n    return a + (b - a) * this.random_dec();\n  }\n  \/\/ random integer between a (inclusive) and b (inclusive)\n  \/\/ requires a < b for proper probability distribution\n  random_int(a, b) {\n    return Math.floor(this.random_num(a, b + 1));\n  }\n  \/\/ random boolean with p as percent liklihood of true\n  random_bool(p) {\n    return this.random_dec() < p;\n  }\n  \/\/ random value in an array of items\n  random_choice(list) {\n    return list[this.random_int(0, list.length - 1)];\n  }\n}\nlet R = new Random()\n\nconst rseed = Math.floor(R.random_dec()*10000)\nconst nseed = Math.floor(R.random_dec()*10000)\nconsole.log(rseed)\nconsole.log(nseed)\n\nconst col_pat = [\n\t[\"#001524\",\"#15616d\",\"#ffecd1\",\"#ff7d00\",\"#78290f\"],\n\t[\"#353535\",\"#3c6e71\",\"#ffffff\",\"#d9d9d9\",\"#284b63\"],\n\t[\"#03045e\",\"#0077b6\",\"#00b4d8\",\"#90e0ef\",\"#caf0f8\"],\n\t[\"#264653\",\"#2a9d8f\",\"#e9c46a\",\"#f4a261\",\"#e76f51\"],\n\t[\"#f9dbbd\",\"#ffa5ab\",\"#da627d\",\"#a53860\",\"#450920\"],\n\t[\"#08090a\",\"#a7a2a9\",\"#f4f7f5\",\"#575a5e\",\"#222823\"],\n\t[\"#d6d6d6\",\"#ffee32\",\"#ffd100\",\"#202020\",\"#333533\"],\n\t[\"#540d6e\",\"#ee4266\",\"#ffd23f\",\"#3bceac\",\"#0ead69\"],\n\t[\"#10A19D\",\"#540375\",\"#FF7000\",\"#FFBF00\"],\n\t[\"#041C32\",\"#04293A\",\"#064663\",\"#ECB365\"],\n\t[\"#425F57\",\"#749F82\",\"#A8E890\",\"#CFFF8D\"]\n]\n\nconst glitch = R.random_dec()<0.65\nconst lines = Math.floor(R.random_dec()*3)\nconst frameon = R.random_dec()<0.5\nconst colorid = Math.floor(R.random_dec()*col_pat.length)\nconst bgcolorid = Math.floor(R.random_dec()*col_pat[colorid].length)\n\nfunction keyPressed(){\n\tif( key == \"S\" || key == \"s\" ){\n\t\tsave(\"save_\" + hash + \".png\")\n\t}\n}\n\nfunction setup() {\n\tlet ratio = 4\/3\n\tlet wind_h = windowHeight\n\tlet setWidth = wind_h \/ ratio\n\tif(wind_h > setWidth){\n\t\tcreateCanvas(setWidth, wind_h)\n\t} else{\n\t\tlet setHeight = windowWidth * ratio\n\t\tcreateCanvas(windowWidth, setHeight)\n\t}\n\tw = width\n\th = height\n\n\trandomSeed(rseed)\n\tnoiseSeed(nseed)\n\n\tcols = col_pat[colorid]\n\tfor(let i=0;i<cols.length*2;i++){\n\t\tlet f0 = int(random(cols.length))\n\t\tlet f1 = int(random(cols.length))\n\t\tlet tmp = cols[f0]\n\t\tcols[f0] = cols[f1]\n\t\tcols[f1] = tmp\n\t}\n\timg = createGraphics(w, h)\n\timg.colorMode(HSB)\n\n\tbg = lerpColor(color(255), color(cols[bgcolorid]), 0.08)\n\n\tlet cn = cols.length\n\tfor(let i=0;i<cn;i++){\n\t\timg.push()\n\t\timg.stroke(0,0)\n\t\timg.fill(cols[i]+\"30\")\n\t\timg.rect(0, h\/cn*i, w, h\/cn)\n\t\timg.pop()\n\t}\n\n\tfor(let i=0;i<200;i++){\n\t\timg.strokeWeight(random(1,8))\n\t\t\/\/s=random(w)\n\t\timg.stroke(random(cols) + \"60\")\n\t\timg.line(random(-w*0.2,w*1.2), random(-h*0.2,h*1.2), random(-w*0.2,w*1.2), random(-h*0.2,h*1.2))\n\t\t\n\t\tif(random()<0.4){\n\t\t\tif(random()<0.1){\n\t\t\timg.fill(random(cols) + \"60\")\n\t\t\t} else{\n\t\t\t\timg.fill(0,0)\n\t\t\t}\n\t\t\timg.stroke(random(cols) + \"60\")\n\t\t\timg.rect(random(w),random(h),random(w*0.35))\n\t\t}\n\t}\n\n\tfunction pcal(){\n\t\treturn PI*random(-1,1)\n\t}\n\t\/\/Attractor Parameter\n\ta0 = pcal()\n\tb0 = pcal()\n\tc0 = pcal()\n\td0 = pcal()\n\n\ta1 = pcal()\n\tb1 = pcal()\n\tc1 = pcal()\n\td1 = pcal()\n\n\ta2 = pcal()\n\tb2 = pcal()\n\tc2 = pcal()\n\td2 = pcal()\n\t\n\t\/\/Attractor Parameter\n\n\toa0 = pcal()\n\tob0 = pcal()\n\toc0 = pcal()\n\tod0 = pcal()\n\n\toa1 = pcal()\n\tob1 = pcal()\n\toc1 = pcal()\n\tod1 = pcal()\n\n\toa2 = pcal()\n\tob2 = pcal()\n\toc2 = pcal()\n\tod2 = pcal()\n\n\t\/\/Draw Parameter\n\tdraw_scale = 5\/18*w\n\tN = 1800000\n\tln =  20000\n\tcnt = 0\n\n\tsn = Math.sin\n\tcs = Math.cos\n\n\tx = random(-1,1);\n\ty = random(-1,1);\n\n\tbackground(bg)\n\n\tcolorMode(HSB)\n\timageMode(CENTER)\n\n\tcnv = createGraphics(w, h)\n\tbgn = back_noise()\n}\n\nfunction draw(){\n\tif(cnt < N){\n\t\tcnv.push()\n\t\tcnv.strokeWeight(1\/750*w)\n\t\tcnv.translate(w\/2, h\/2)\n\n\t\tfor(let i=0;i<ln;i++){\n\t\t\tlet I = int(random(3));\n\t\t\tlet dx, dy;\n\t\t\tswitch(I){\n\t\t\t\tcase 0:\n\t\t\t\tdx = sn(a0*y+oa0) + cs(b0*x+ob0) + sn(noise(x*0.07,y*0.08,552)*PI);\n\t\t\t\tdy = sn(c0*x+od0) + cs(d0*y+oc0) + cs(noise(x*0.08,y*0.07,252)*PI)*0.5;\n\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\tdx = sn(a1*y+oa1) + cs(b1*x + noise(x*0.05,y*0.05,55)*PI +ob1);\n\t\t\t\tdy = sn(c1*x+oc1) + cs(d1*y + noise(x*0.02,y*0.03,22)*PI +od1);\n\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\tdx = sn(a2*y+oa2) + cs(b2*x+ob2) + sn(noise(x*0.04,y*0.09,821)*PI*4)*0.5\n\t\t\t\tdy = sn(c2*x+oc2) + cs(d2*y+od2) + cs(noise(x*0.09,y*0.04,323)*PI*4)\n\t\t\t\tbreak;\n\t\t\t\tdefault: break;\n\t\t\t}\n\n\t\t\tcol = img.get(int(draw_scale*x+w\/2), int(draw_scale*y+h\/2))\n\t\t\tcol = cnv.color(...col)\n\t\t\tcol.setAlpha(50)\n\t\t\tcnv.stroke(col)\n\n\t\t\tlet nsy = cs(noise(x*0.1+b0,y*0.07+b1,873+cnt\/N*0.1)*PI)*0.1\n\t\t\tcnv.point(draw_scale*dx*(1-cos(cnt\/N*TAU*10+a0)*0.02),\n\t\t\t draw_scale*(dy+nsy)*(4\/3-sin(cnt\/N*TAU*3+a1)*0.035))\n\n\n\t\t\tif(random()<0.5){\n\t\t\t\tcnv.stroke(0,27)\n\t\t\t\tlet xr = dx * cs(dy*PI\/2.5)\n\t\t\t\tlet xt = dx * sn(dy*PI\/2.5)\n\t\t\t\tcnv.point(draw_scale*xr*0.4, draw_scale*xt*0.4*4\/3)\n\t\t\t}\n\n\t\t\tx = dx;\n\t\t\ty = dy;\n\n\t\t\tcnt++\n\t\t}\n\t\tcnv.pop()\n\n\t\tbackground(bg)\n\t\timage(bgn, w\/2, h\/2)\n\t\timage(cnv, w\/2, h\/2)\n\n\t\tif(random()<0.009){\n\t\t\tif(lines>0){\n\t\t\t\tflines()\n\t\t\t}\n\t\t}\n\n\t\tif(frameon){\n\t\t\tframedraw()\n\t\t}\n\t}\n\telse {\n\t\tif(glitch){\n\t\t\tflip()\n\t\t}\n\t\tif(lines>0){\n\t\t\tpush()\n\t\t\tfill(0,0)\n\t\t\tstrokeWeight(1\/720*w)\n\t\t\tfor(let i=0;i<30;i++){\n\t\t\t\tstroke(random(cols)+\"80\")\n\t\t\t\tif(lines == 1){\n\t\t\t\t\tline(random(-w*0.2,w*1.2), random(-h*0.2,h*1.2), random(-w*0.2,w*1.2), random(-h*0.2,h*1.2))\n\t\t\t\t}\n\t\t\t\tif(lines == 2){\n\t\t\t\t\tlet cp =[]\n\t\t\t\t\tfor(let c=0;c<4;c++){\n\t\t\t\t\t\tcp.push(random(-w*0.2,w*1.2))\n\t\t\t\t\t\tcp.push(random(-h*0.2,h*1.2))\n\t\t\t\t\t}\n\t\t\t\t\tif(random()<0.5){curve(...cp)}\n\t\t\t\t\telse{bezier(...cp)}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpop()\n\t\t}\n\t\tif(frameon){\n\t\t\tframedraw()\n\t\t}\n\t\tnoLoop()\n\t}\n}\n\nfunction framedraw(){\n\tpush()\n\trectMode(CENTER)\n\tstrokeWeight(8\/720*w)\n\tfill(0,0)\n\tstroke(0)\n\trect(w\/2,h\/2,w,h)\n\tpop()\n}\n\nfunction flines(){\n\tcnv.push()\n\tcnv.fill(0,0)\n\tcnv.strokeWeight(1\/720*w)\n\tfor(let i=0;i<30;i++){\n\t\tcnv.stroke(random(cols)+\"80\")\n\t\tif(lines == 1){\n\t\t\tcnv.line(random(-w*0.2,w*1.2), random(-h*0.2,h*1.2), random(-w*0.2,w*1.2), random(-h*0.2,h*1.2))\n\t\t}\n\t\tif(lines == 2){\n\t\t\tlet cp =[]\n\t\t\tfor(let c=0;c<4;c++){\n\t\t\t\tcp.push(random(-w*0.2,w*1.2))\n\t\t\t\tcp.push(random(-h*0.2,h*1.2))\n\t\t\t}\n\t\t\tif(random()<0.5){cnv.curve(...cp)}\n\t\t\telse{cnv.bezier(...cp)}\n\t\t}\n\t}\n\tcnv.pop()\n}\n\nfunction back_noise(){\n\tlet bri = brightness(bg)\n\tlet al = bri*0.9\n\tlet ls=800\n\tlet noiseGra = createGraphics(ls, ls*4\/3)\n\tlet wn = w\/720\n\tlet hn = h\/720\n\tnoiseGra.loadPixels()\n\tfor(let x=0;x<ls;x+=1){\n\t\tfor(let y=0;y<ls*4\/3;y+=1){\n\t\t\tlet ii = x*wn + 150;\n\t\t\tlet jj = y*hn + 80;\n\t\t\tlet nx = noise(ii*0.1,jj*jj*0.05);\n\t\t\tlet fx = (nx>0.7) ? 0.8 :\n\t\t\t\t\t\t(nx>0.4) ? 0.5 : 0.0;\n\t\t\tnoiseGra.set(x, y, color(al, fx*0.5))\n\t\t}\n\t}\n\tnoiseGra.updatePixels()\n\n\tlet img = createGraphics(w, h)\n\timg.colorMode(HSB)\n\timg.push()\n\timg.tint(100,0.2)\n\timg.image(noiseGra, 0, 0, w, h)\n\timg.pop()\n\n\tnoiseGra = createGraphics(ls, ls*4\/3)\n\tnoiseGra.loadPixels()\n\tfor(let x=0;x<ls;x+=1){\n\t\tfor(let y=0;y<ls*4\/3;y+=1){\n\t\t\tlet ii = x*wn + 80;\n\t\t\tlet jj = y*hn + 150;\n\n\t\t\tlet ny = noise(ii*ii*0.5,jj*0.1);\n\t\t\tlet fy = (ny>0.7) ? 0.8 :\n\t\t\t\t\t\t (ny>0.4) ? 0.5 : 0.0;\n\t\t\tnoiseGra.set(x, y, color(al, fy*0.5))\n\t\t}\n\t}\n\tnoiseGra.updatePixels()\n\n\timg.push()\n\timg.tint(100,0.2)\n\timg.image(noiseGra, 0, 0, w, h)\n\timg.pop()\n\n\treturn img\n}\n\nfunction flip(){\n\tlet N = 10\n\tlet wn = w\/N\n\tlet hn = h\/N\n\tfor(let l=0;l<2;l++){\n\t\tfor(let i=0;i<=N;i++){\n\t\t\tfor(let j=0;j<=N;j++){\n\t\t\t\tif(random()<0.35){\n\t\t\t\tpush()\n\t\t\t\tlet xs=random([1,2,3])\n\t\t\t\tlet ys=random([1,2,3])\n\t\t\t\tlet ii=int(random(N))\n\t\t\t\tlet jj=int(random(N))\n\t\t\t\ttranslate(wn*(ii+0.5), hn*(jj+0.5));\n\t\t\t\trotate(random([0, PI\/2, PI, PI\/2*3]));\n\t\t\t\ttint(150,0.17)\n\t\t\t\timage(cnv, 0, 0, wn*xs, hn*ys, wn*i, hn*j, wn*xs, hn*ys)\n\t\t\t\tpop()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
  "tokens" : [
    {
      "hash" : "0x7e277cbc1bbc90066161f28e590f54fc656b69f780a84c7bde66466b3fefa23d",
      "id" : "5000004"
    },
    {
      "hash" : "0xd25be1cf2e3fc27238e23dc3e6e5a1951f37754c02016d5a14ca30a5dcca4509",
      "id" : "5000000"
    },
    {
      "hash" : "0xb2d9bf3e35195e3604b373cc4c8065fc0372462e87c6ffd18d5046263a6ec235",
      "id" : "5000003"
    },
    {
      "hash" : "0xdd64ae32a419164af72d41e648974701edcc8401defd2ea200821cb8897834a7",
      "id" : "5000001"
    },
    {
      "hash" : "0x8ba5937a149d313899722960e72021d86c7c46c14a4487f80ebe19b3d373984f",
      "id" : "5000002"
    }
  ]
}