{
  "contractAddress" : "0x99a9b7c1116f9ceeb1652de04d5969cce509b069",
  "kind" : "p5js100",
  "projectId" : "442",
  "script" : "\/\/ \n\/\/ åπ∆®£w °ı• ß|ªπ†°n and Claudia Hart 2023\n\/\/\n\nlet bodiesEmerge;\nlet flowerGraphics;\nlet theViewFromThisRoom;\n\nconst movementFromTheirFlesh = `precision highp float;varying vec2 vPos;attribute vec3 aPosition;attribute vec2 aTexCoord;uniform mat4 uModelViewMatrix;uniform mat4 uProjectionMatrix;varying vec2 vTexCoord;void main(void) {vPos = (gl_Position = vec4(aPosition,1.0)).xy;vec4 positionVec4 = vec4(aPosition, 1.0);gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;vTexCoord = aTexCoord;}`;\nconst movementFromTheirSkin = `precision highp float;varying vec2 vTexCoord;uniform sampler2D theWall;uniform sampler2D theFigureInTheWall;varying vec2 vPos;uniform float w;uniform float h;uniform vec2 u_resolution;uniform vec2 u_mouse;uniform float u_time;uniform float noiseSeed;uniform float noiseAmount;uniform float lookingBackAtMe;uniform float lookingBackAtHerself;const mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );float hash( float n ){return fract(sin(n)*43758.5453);}float noise( in vec2 x ){vec2 p = floor(x);vec2 f = fract(x);f = f*f*(3.0-2.0*f);float n = p.x + p.y*57.0;return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);}float fbm( vec2 p ){float f = 0.0;f += 0.50000*noise( p ); p = m*p*2.02;f += 0.25000*noise( p ); p = m*p*2.03;f += 0.12500*noise( p ); p = m*p*2.01;f += 0.06250*noise( p ); p = m*p*2.04;f += 0.03125*noise( p );return f\/0.984375;}float noisey(vec2 p) {return fract(sin(dot(p.xy, vec2(12.9898, 78.233))) * 43758.5453);}vec2 radialNoise(vec2 texCoord, float frequency, float amplitude, float time) {vec2 center = vec2(0.5, 0.5);vec2 offset = texCoord - center;float distance = length(offset);float noiseValue = noise(vec2(distance * frequency + time, time));vec2 noiseVector = vec2(cos(noiseValue), sin(noiseValue));return noiseVector * amplitude * (1.0 - distance);}vec3 mod289(vec3 x) { return x - floor(x * (1.0 \/ 289.0)) * 289.0; }vec2 mod289(vec2 x) { return x - floor(x * (1.0 \/ 289.0)) * 289.0; }vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }float snoise(vec2 v) {const vec4 C = vec4(0.211324865405187,0.366025403784439,-0.577350269189626,0.024390243902439);vec2 i = floor(v + dot(v, C.yy) );vec2 x0 = v - i + dot(i, C.xx);vec2 i1;i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);vec4 x12 = x0.xyxy + C.xxzz;x12.xy -= i1;i = mod289(i);vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))+ i.x + vec3(0.0, i1.x, 1.0 ));vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);m = m*m ;m = m*m ;vec3 x = 2.0 * fract(p * C.www) - 1.0;vec3 h = abs(x) - 0.5;vec3 ox = floor(x + 0.5);vec3 a0 = x - ox;m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );vec3 g;g.x  = a0.x  * x0.x  + h.x  * x0.y;g.yz = a0.yz * x12.xz + h.yz * x12.yw;return 130.0 * dot(m, g);}void main() {vec2 u_resolution = vec2(w,h);vec2 st = gl_FragCoord.xy\/u_resolution.xy;vec2 uv = vTexCoord;vec2 uv_2 = vTexCoord;vec2 q = gl_FragCoord.xy\/u_resolution.xy*.5;vec2 p = -1.0 + 0.650 * q;p.x *= u_resolution.x\/u_resolution.y;vec2 pos = vec2(st.x*0.7 + (u_time*0.18), st.y*0.17 + (u_time*.18));vec3 dist = vec3(snoise(pos)*u_mouse.y);vec2 distorter = vec2(dist.rg) * vec2(0.01);float r = length( p * 0.45);vec3 col = vec3(0.64,0.25,0.0 );float f = fbm( 7.0*p );col = mix(col, vec3(1.0,1.0,1.0),f);f = smoothstep( .19, 0.92, r );col = mix( col, vec3(0.0), f+1.0 );float r2 = length( uv * 200.0);vec3 col2 = vec3(0.0,0.0,0.0 );float f2 = fbm( 20.0*-p );col2 = mix(-col2, vec3(-0.6,0.6,0.6),f2);f2 = smoothstep( .19, 0.92, r2 );col2 = mix( col2, -vec3(0.0),f2+0.5);vec4 distortedFlower = texture2D(theWall, fract(uv)+distorter)+vec4(col2,0.30);vec4 distortedBackground = texture2D(theFigureInTheWall, fract(uv_2)+distorter);vec4 flowerBackground = distortedFlower * distortedFlower.a + distortedBackground * (1.0 - distortedFlower.a);gl_FragColor = vec4(col,1.0)+flowerBackground;}`;\n\nlet provokingCrawlingUp = 0, provokingCrawlingUpAndLeft = 1,provokingCrawlingUpLeft = 2,provokingCrawlingDownAndLeft = 3,provokingCrawlingDown = 4,provokingCrawlingDownAndRight = 5,provokingCrawlingRight = 6,provokingCrawlingUpAndRight = 7;\nlet sittingWithMyself;\nlet iWasMoving = 2,throughSpace = 5,aFaintFigureMovingBackAndFourth,aFaintFigureMovingUpAndDown;\n\nlet aForm = [\n                  {aCrawlingColor:['e16c58','f89c2b','db391e','db391e','84372a','7c0a0a','7c0a0a'], grotesque:'ffd59a', wavesOfRed:230, wavesOfDarkRed:230, wavesOfLightGreen:120, wavesOfDarkGreen:160, wavesOfLightBlue:110, wavesOfDarkBlue:120, wavesFading:.02, convolution:'a9b55b', distraction:'ff5fe3',aCenter:'7c0a0a', outlines:'7c0a0a', aFigure:2, lookingBackAtMe:1.0, lookingBackAtHerself:0.0, hallucinations:4.0}, \/\/1\n                  {aCrawlingColor:['e5cd00','867800','f35a1b','f38533','4E3620','a99700','4E3620'], grotesque:'e03500', wavesOfRed:240, wavesOfDarkRed:255, wavesOfLightGreen:200, wavesOfDarkGreen:220, wavesOfLightBlue:120, wavesOfDarkBlue:140, wavesFading:.04, convolution:'837c51', distraction:'fff4d8',aCenter:'fff4d8', outlines:'fff4d8', aFigure:0, lookingBackAtMe:3.0, lookingBackAtHerself:2.0, hallucinations:0.0}, \/\/3\n                  {aCrawlingColor:['57ca8f','f68d40','f68d40','35778E','4cc1e9','f43628','ff7a30'], grotesque:'b5dafb', wavesOfRed:250, wavesOfDarkRed:255, wavesOfLightGreen:110, wavesOfDarkGreen:140, wavesOfLightBlue:70, wavesOfDarkBlue:90, wavesFading:.02, convolution:'867c51', distraction:'f4effd',aCenter:'f43628', outlines:'f4effd', aFigure:9, lookingBackAtMe:4.0, lookingBackAtHerself:2.0, hallucinations:2.0}, \/\/4\n                  {aCrawlingColor:['c1acd1','c9ac8f','f85d52','bf927e','cac145','c5afd5','f4ee9f'], grotesque:'9e744a', wavesOfRed:200, wavesOfDarkRed:255, wavesOfLightGreen:110, wavesOfDarkGreen:150, wavesOfLightBlue:50, wavesOfDarkBlue:100, wavesFading:.02, convolution:'befa07', distraction:'ff230a',aCenter:'feefc1', outlines:'fe430f', aFigure:3, lookingBackAtMe:5.0, lookingBackAtHerself:2.0, hallucinations:30.0}, \/\/6\n                  {aCrawlingColor:['ffeab0','f9a498','ce333e','ea3d5e','951b12','ffeab0','611b1d'], grotesque:'c0a6e3', wavesOfRed:215, wavesOfDarkRed:255, wavesOfLightGreen:120, wavesOfDarkGreen:130, wavesOfLightBlue:30, wavesOfDarkBlue:60, wavesFading:.02, convolution:'0a6845', distraction:'d1d649',aCenter:'7b696f', outlines:'d1d649', aFigure:4, lookingBackAtMe:3.0, lookingBackAtHerself:2.0, hallucinations:0.0}, \/\/7\n                  {aCrawlingColor:['bc5b2b','744E48','68342F','636200','8D674E','513934','823B30'], grotesque:'513c37', wavesOfRed:40, wavesOfDarkRed:55, wavesOfLightGreen:40, wavesOfDarkGreen:55, wavesOfLightBlue:30, wavesOfDarkBlue:50, wavesFading:.04, convolution:'837c51', distraction:'ff6d3c',aCenter:'513934', outlines:'837c51', aFigure:1, lookingBackAtMe:3.0, lookingBackAtHerself:2.0, hallucinations:20.0}, \/\/8\n                  {aCrawlingColor:['b02529','d9d56a','eb9c2a','b55b91','b02529','e3633d','b02529'], grotesque:'020101', wavesOfRed:160, wavesOfDarkRed:170, wavesOfLightGreen:160, wavesOfDarkGreen:165, wavesOfLightBlue:160, wavesOfDarkBlue:165, wavesFading:.04, convolution:'857c51', distraction:'8c8c8c',aCenter:'B68D81', outlines:'8c8c8c', aFigure:6, lookingBackAtMe:4.0, lookingBackAtHerself:2.0, hallucinations:5.0}, \/\/9\n                  {aCrawlingColor:['dc4056','B4677C','BD7D80','91332E','AB5B64','f23c54','682E46'], grotesque:'9c9054', wavesOfRed:215, wavesOfDarkRed:255, wavesOfLightGreen:50, wavesOfDarkGreen:80, wavesOfLightBlue:80, wavesOfDarkBlue:120, wavesFading:.02, convolution:'682E46', distraction:'6c3fa3',aCenter:'95010f', outlines:'6c3fa3', aFigure:7, lookingBackAtMe:6.0, lookingBackAtHerself:2.0, hallucinations:10.0}, \/\/10\n                  {aCrawlingColor:['3E652D','af75b3','27c9ba','1E3E21','7D7480','c9bc48','af75b3'], grotesque:'c4d19a', wavesOfRed:250, wavesOfDarkRed:255, wavesOfLightGreen:180, wavesOfDarkGreen:230, wavesOfLightBlue:205, wavesOfDarkBlue:215, wavesFading:.04, convolution:'857c51', distraction:'27c9ba',aCenter:'1E3E21', outlines:'27c9ba', aFigure:8, lookingBackAtMe:3.0, lookingBackAtHerself:2.0, hallucinations:40.0}, \/\/11\n                  {aCrawlingColor:['99020f','ff5015','7d60e2','c64d44','ffb87e','cc3025','513e94'], grotesque:'3adfdc', wavesOfRed:220, wavesOfDarkRed:255, wavesOfLightGreen:40, wavesOfDarkGreen:180, wavesOfLightBlue:110, wavesOfDarkBlue:250, wavesFading:.02, convolution:'00aa2c', distraction:'00aa2c',aCenter:'8a0a33', outlines:'d20648', aFigure:5, lookingBackAtMe:3.0, lookingBackAtHerself:2.0, hallucinations:2.0}, \/\/12\n];\n\nlet aDividedMind = 6,tryingToCombine;\nlet whatAmISeeing;\nlet aMovement;\nlet myFlowerWasBlooming;\nlet intoMyThoughts;\nlet womenCreepingOutOfTheWall = 28.3;\nlet aNewFlower = [];\n\nfunction setup() {\n  console.log('yellow wallpaper v1.0')\n  pixelDensity(3.0);\n  createCanvas(windowWidth, windowHeight,WEBGL);\n  intoMyThoughts = new Random();\n  aMovement = intoMyThoughts.random_dec()\n  lookingBackAtMe = intoMyThoughts.random_int(1,6);\n  whatAmISeeing = intoMyThoughts.random_int(0,9);\n  myFlowerWasBlooming = intoMyThoughts.random_int(0,9);\n  console.log(whatAmISeeing);\n  theWall = createGraphics(windowWidth,windowHeight);\n  theViewFromThisRoom = createGraphics(windowWidth,windowHeight);\n  bodiesEmerge = createShader(movementFromTheirFlesh, movementFromTheirSkin);\n  bgNoise();\n  aFlowerInTheMoonlight();\n  for(let i=0;i<aNewFlower.length;i++){\n    aNewFlower[i].display();\n  }\n}\nfunction draw() {\n  if (\/\\bHeadlessChrome\/.test(navigator.userAgent)) { \n    womenCreepingOutOfTheWall = aForm[whatAmISeeing].hallucinations;\n  } else{\n    womenCreepingOutOfTheWall = (mouseX-windowWidth\/2)\/18;\n  }\n  bodiesEmerge.setUniform(\"u_resolution\", [width, height]);\n  bodiesEmerge.setUniform(\"u_time\", millis() \/ 10000.0);\n  bodiesEmerge.setUniform(\"u_mouse\", [mouseX, womenCreepingOutOfTheWall]);\n  bodiesEmerge.setUniform('w', windowWidth\/2)\n  bodiesEmerge.setUniform('h', windowHeight\/2)\n  bodiesEmerge.setUniform('theWall', theWall);\n  bodiesEmerge.setUniform('theFigureInTheWall', theViewFromThisRoom);\n  bodiesEmerge.setUniform('noiseSeed', frameCount\/100);\n  bodiesEmerge.setUniform('noiseAmount', 0.05);\n  bodiesEmerge.setUniform('lookingBackAtMe', lookingBackAtMe);\n  bodiesEmerge.setUniform('lookingBackAtHerself', aForm[whatAmISeeing].lookingBackAtHerself);\n  shader(bodiesEmerge);\n  noStroke();\n  plane(width, height);\n}\nfunction aFlowerInTheMoonlight(){\nlet space = intoMyThoughts.random_num(width\/10,width\/3.5);\nlet offset_a = intoMyThoughts.random_num(1.0,3.0);\nlet offset_b = intoMyThoughts.random_num(1.0,2.0);\nlet scale_a = intoMyThoughts.random_num(0.5,2.0);\nlet scale_b = intoMyThoughts.random_num(0.5,2.0);\nlet move_a = intoMyThoughts.random_num(1.0,3.0);\nlet move_b = intoMyThoughts.random_num(1.0,3.0);\n    if(myFlowerWasBlooming == 0 || myFlowerWasBlooming == 5){     \n      for(let x = 0; x < width+50; x+=space*offset_a){\n        for(let y = 0; y < height+50; y+=space*offset_b){\n          let a = new Chrysanthemum(x,y,0,space\/width*scale_a);\n          let b = new Chrysanthemum(x+space\/move_a,y+space\/move_b,0,space\/width*scale_b);\n          aNewFlower.push(a);\n          aNewFlower.push(b);\n        }\n      }\n    } else if (myFlowerWasBlooming == 1 || myFlowerWasBlooming == 6){\n      for(let x = 0; x < width+50; x+=space*offset_a){\n        for(let y = 0; y < height+50; y+=space*offset_b){\n          let a = new Hydrangea(x,y,0,space\/width*scale_a*1.5);\n          let b = new Hydrangea(x+space\/move_a,y+space\/move_b,0,space\/width*scale_b*1.5);\n          aNewFlower.push(a);\n          aNewFlower.push(b);\n        }\n      }\n    } else if (myFlowerWasBlooming == 2 || myFlowerWasBlooming == 7){\n      for(let x = 0; x < width+50; x+=space*offset_a){\n        for(let y = 0; y < height+50; y+=space*offset_b){\n          let a = new PoetsNarcissus(x,y,0,space\/width*scale_a);\n          let b = new PoetsNarcissus(x+space\/move_a,y+space\/move_b,0,space\/width*scale_b);\n          aNewFlower.push(a);\n          aNewFlower.push(b);\n        }\n      }\n    } else if (myFlowerWasBlooming == 3 || myFlowerWasBlooming == 8){\n      for(let x = 0; x < width+50; x+=space*offset_a){\n        for(let y = 0; y < height+50; y+=space*offset_b){\n          let a = new Poppy(x,y,0,space\/width*scale_a);\n          let b = new Poppy(x+space\/move_a,y+space\/move_b,0,space\/width*scale_b);\n          aNewFlower.push(a);\n          aNewFlower.push(b);\n        }\n      }\n    } else if (myFlowerWasBlooming == 4 || myFlowerWasBlooming == 9){\n      for(let x = 0; x < width+50; x+=space*offset_a){\n        for(let y = 0; y < height+50; y+=space*offset_b){\n          let a = new Foxglove(x,y,0,space\/width*scale_a);\n          let b = new Foxglove(x+space\/move_a,y+space\/move_b,0,space\/width*scale_b);\n          aNewFlower.push(a);\n          aNewFlower.push(b);\n        }\n      }\n    }\n}\nfunction bgNoise(){\n  aFaintFigureMovingBackAndFourth = width \/ 2;\n  aFaintFigure= height \/ 2;\n  theViewFromThisRoom.background(\"#\"+aForm[whatAmISeeing].grotesque);\n  for (let j = 0; j < 200; j++){\n    theViewFromThisRoom.noStroke();\n    theViewFromThisRoom.fill('rgba('+intoMyThoughts.random_int(aForm[whatAmISeeing].wavesOfRed,aForm[whatAmISeeing].wavesOfDarkRed)+','+intoMyThoughts.random_int(aForm[whatAmISeeing].wavesOfLightGreen,aForm[whatAmISeeing].wavesOfDarkGreen)+','+intoMyThoughts.random_int(aForm[whatAmISeeing].wavesOfLightBlue,aForm[whatAmISeeing].wavesOfDarkBlue)+', '+aForm[whatAmISeeing].wavesFading+')');\n    for (let i = 0; i <= width; i++) {\n        sittingWithMyself = intoMyThoughts.random_int(0, 8);\n      if (sittingWithMyself == provokingCrawlingUp) {aFaintFigure-= iWasMoving;\n      } else if (sittingWithMyself == provokingCrawlingUpAndLeft) {aFaintFigureMovingBackAndFourth += iWasMoving;aFaintFigure-= iWasMoving;\n      } else if (sittingWithMyself == provokingCrawlingUpLeft) {aFaintFigureMovingBackAndFourth += iWasMoving;\n      } else if (sittingWithMyself == provokingCrawlingDownAndLeft) {aFaintFigureMovingBackAndFourth += iWasMoving;aFaintFigure+= iWasMoving;\n      } else if (sittingWithMyself == provokingCrawlingDown) {aFaintFigure+= iWasMoving;\n      } else if (sittingWithMyself == provokingCrawlingDownAndRight) {aFaintFigureMovingBackAndFourth -= iWasMoving;aFaintFigure+= iWasMoving;\n      } else if (sittingWithMyself == provokingCrawlingRight) {aFaintFigureMovingBackAndFourth -= iWasMoving;\n      } else if (sittingWithMyself == provokingCrawlingUpAndRight) {aFaintFigureMovingBackAndFourth -= iWasMoving;aFaintFigure-= iWasMoving;\n      }\n      if (aFaintFigureMovingBackAndFourth > width) aFaintFigureMovingBackAndFourth = 0;\n      if (aFaintFigureMovingBackAndFourth < 0) aFaintFigureMovingBackAndFourth = width;\n      if (aFaintFigure< 0) aFaintFigure= height;\n      if (aFaintFigure> height) aFaintFigure= 0;\n      theViewFromThisRoom.ellipse(aFaintFigureMovingBackAndFourth + iWasMoving \/ 2, aFaintFigure+ iWasMoving \/ 2, throughSpace, throughSpace);\n    }\n  }\n}\nfunction windowResized() {\n  if (\/\\bHeadlessChrome\/.test(navigator.userAgent)) { \n    \/\/ we are in the headless context\n    womenCreepingOutOfTheWall = 2.0;\n    resizeCanvas(2400, 2400);\n    bodiesEmerge.setUniform(\"u_mouse\", [0.0, 0.0]);\n    noStroke();\n    plane(2400, 2400);\n  } else{\n    resizeCanvas(windowWidth, windowHeight);\n    bodiesEmerge.setUniform(\"u_mouse\", [0.0, 0.0]);\n    setup();\n  }\n}\nclass Random {\n    constructor() {\n      this.useA = false;\n      let sfc32 = function (uint128Hex) {\n        let a = parseInt(uint128Hex.substr(0, 8), 16);\n        let b = parseInt(uint128Hex.substr(8, 8), 16);\n        let c = parseInt(uint128Hex.substr(16, 8), 16);\n        let d = parseInt(uint128Hex.substr(24, 8), 16);\n        return function () {\n          a |= 0; b |= 0; c |= 0; d |= 0;\n          let t = (((a + b) | 0) + d) | 0;\n          d = (d + 1) | 0;\n          a = b ^ (b >>> 9);\n          b = (c + (c << 3)) | 0;\n          c = (c << 21) | (c >>> 11);\n          c = (c + t) | 0;\n          return (t >>> 0) \/ 4294967296;\n        };\n      };\n      this.prngA = new sfc32(tokenData.hash.substr(2, 32));\n      this.prngB = new sfc32(tokenData.hash.substr(34, 32));\n      for (let i = 0; i < 1e6; i += 2) {\n        this.prngA();\n        this.prngB();\n      }\n    }\n    random_dec() {\n      this.useA = !this.useA;\n      return this.useA ? this.prngA() : this.prngB();\n    }\n    random_num(a, b) {\n      return a + (b - a) * this.random_dec();\n    }\n    random_int(a, b) {\n      return Math.floor(this.random_num(a, b + 1));\n    }\n    random_bool(p) {\n      return this.random_dec() < p;\n    }\n    random_choice(list) {\n      return list[this.random_int(0, list.length - 1)];\n    }\n  }\nclass Chrysanthemum{\n    constructor(_xpos,_ypos,_rot,_size){\n      this.xpos = _xpos;\n      this.ypos = _ypos;\n      this.rot = _rot;\n      this.size = _size;\n    }\n    display(){\n      theWall.push();\n        theWall.translate(this.xpos,this.ypos);\n        theWall.scale(this.size); \n        theWall.stroke(\"#\"+aForm[whatAmISeeing].convolution);\n        theWall.noFill();\n        theWall.bezier(0,0,30,50,10,height\/4,30,height\/3);\n        for(let i = 3; i < 30; i++){\n            theWall.fill(\"#\"+aForm[whatAmISeeing].aCrawlingColor[intoMyThoughts.random_int(0,6)]);\n            theWall.rotate(2.3*i);\n            theWall.strokeWeight(3);\n            theWall.stroke(\"#\"+aForm[whatAmISeeing].grotesque);\n            theWall.bezier(0,-height\/100,height\/6,height\/11,0,height\/1.7,0,0);\n          }\n        theWall.stroke(\"#\"+aForm[whatAmISeeing].grotesque);\n        theWall.fill(\"#\"+aForm[whatAmISeeing].aCenter);\n        theWall.ellipse(0,0,windowHeight\/20);\n        theWall.pop();\n    }\n  }\nclass Hydrangea{\n    constructor(_xpos,_ypos,_rot,_size){\n      this.xpos = _xpos;\n      this.ypos = _ypos;\n      this.rot = _rot;\n      this.size = _size;\n    }\n    display(){\n      theWall.push();\n      theWall.translate(this.xpos,this.ypos);\n      theWall.scale(this.size); \n      theWall.stroke(\"#\"+aForm[whatAmISeeing].convolution);\n      theWall.strokeWeight(8);\n      theWall.noFill();\n      theWall.bezier(0,0,height\/10,height\/10,height\/100,height\/6,height\/50,height\/4);\n      let aFirstMoonlitFigure = [-width\/10,-width\/4,-width\/0,-width\/6,-width\/9,-width\/15];\n      let aSecondMoonlitFigure = [-width\/10,-width\/4,-width\/4,-width\/4.5,-width\/5,-width\/6];\n      let aThirdMoonlitFigure = [-width\/12,-width\/10,-width\/15,-width\/20,-width\/40,0];\n      let aFourthMoonlitFigure = [width\/3,width\/3,width\/4,width\/4,width\/4.5,width\/6];\n      let aFifthMoonlitFigure = [5,2,1,1,2,0];\n      let aSixthMoonlitFigure = [8,11,14,14,10,10];\n      for(let i = 0; i < 6; i++){\n        theWall.fill(\"#\"+aForm[whatAmISeeing].aCrawlingColor[intoMyThoughts.random_int(0,6)]);\n        theWall.noStroke();\n        theWall.push()\n        theWall.stroke(\"#\"+aForm[whatAmISeeing].grotesque);\n        theWall.strokeWeight(2)\n        theWall.rotate(PI \/ 1.5)\n        theWall.bezier(0,0,\n                aFirstMoonlitFigure[i],aSecondMoonlitFigure[i],\n                aThirdMoonlitFigure[i],aFourthMoonlitFigure[i],\n                aFifthMoonlitFigure[i],aSixthMoonlitFigure[i]\n                );\n        theWall.pop();\n        }\n        theWall.pop();\n    }\n  }\nclass PoetsNarcissus{\n    constructor(_xpos,_ypos,_rot,_size){\n      this.xpos = _xpos;\n      this.ypos = _ypos;\n      this.rot = _rot;\n      this.size = _size;\n    }\n\n    display(){\n        theWall.push();\n        theWall.translate(this.xpos,this.ypos);\n        theWall.scale(this.size);\n        theWall.push();\n        theWall.stroke(\"#\"+aForm[whatAmISeeing].convolution);\n        theWall.strokeWeight(6);\n        theWall.noFill();\n        theWall.bezier(0,0,30,50,10,height\/4,30,height\/3);\n        theWall.pop();\n        theWall.push()\n        for(let i = 0; i < 6; i++){\n          theWall.rotate(1.1);\n          theWall.fill('#'+aForm[whatAmISeeing].aCrawlingColor[intoMyThoughts.random_int(0,6)]);\n          theWall.stroke(\"#\"+aForm[whatAmISeeing].grotesque);\n          theWall.strokeWeight(2);\n          theWall.beginShape();\n          theWall.curveVertex(0,0);\n          theWall.curveVertex(0,0);\n          theWall.curveVertex(height\/8,height\/15);\n          theWall.curveVertex(height\/5, height\/4);\n          theWall.curveVertex(height\/5.5, height\/5);\n          theWall. curveVertex(0, -height\/80);\n          theWall.curveVertex(0,0);\n          theWall.endShape();\n        }\n        theWall.pop();\n        theWall.push();\n        theWall.fill(\"#\"+aForm[whatAmISeeing].aCrawlingColor[intoMyThoughts.random_int(0,6)]);\n        theWall.stroke(\"#\"+aForm[whatAmISeeing].outlines);\n        theWall.strokeWeight(2);\n        theWall.ellipse(0,0,height\/20);\n        theWall.pop();\n        theWall.pop();\n    }\n  }\nclass Poppy{\n    constructor(_xpos,_ypos,_rot,_size){\n      this.xpos = _xpos;\n      this.ypos = _ypos;\n      this.rot = _rot;\n      this.size = _size;\n    }\n\n    display(){\n      theWall.push();\n      theWall.translate(this.xpos,this.ypos);\n      theWall.scale(this.size);\n      theWall.push();\n      theWall.stroke(\"#\"+aForm[whatAmISeeing].convolution);\n      theWall.strokeWeight(6);\n      theWall.noFill();\n      theWall.bezier(0,0,30,50,10,height\/4,30,height\/3);\n      theWall.pop();\n      for(let sheLovesMe = 3; sheLovesMe < 8; sheLovesMe++){\n        theWall.fill(\"#\"+aForm[whatAmISeeing].aCrawlingColor[intoMyThoughts.random_int(0,6)]);\n        theWall.push();\n        theWall.stroke(\"#\"+aForm[whatAmISeeing].grotesque);\n        theWall.strokeWeight(3);\n        theWall.rotate(PI\/2.5*sheLovesMe);\n        theWall.bezier(0,0,height\/3,width\/20,0,-width\/3,0,0);\n        theWall.pop();\n      }\n      theWall.push();\n      theWall.stroke(\"#\"+aForm[whatAmISeeing].outlines);\n      theWall.strokeWeight(3);\n      theWall.fill(\"#\"+aForm[whatAmISeeing].aCenter);\n      theWall.ellipse(0,0,width\/20);\n      theWall.pop();\n      theWall.pop();\n    }\n  }\nclass Foxglove{\n    constructor(_xpos,_ypos,_rot,_size){\n      this.xpos = _xpos;\n      this.ypos = _ypos;\n      this.rot = _rot;\n      this.size = _size;\n    }\n    display(){\n      theWall.push();\n      theWall.translate(this.xpos,this.ypos);\n      theWall.scale(this.size);\n      theWall.push();\n      theWall.translate(0,height\/-10);\n      theWall.stroke(\"#\"+aForm[whatAmISeeing].convolution);\n      theWall.strokeWeight(18);\n      theWall.noFill();\n      theWall.bezier(0,height\/-8,0,height\/5.5,height\/80,height\/6,height\/80,height\/1.9);\n      theWall.pop();\n      let sheLovesMe = 0;\n      theWall.push();\n      for(let i = 0; i < aDividedMind; i++){\n          theWall.fill(\"#\"+aForm[whatAmISeeing].aCrawlingColor[intoMyThoughts.random_int(0,6)]);\n          theWall.strokeWeight(4);\n          theWall.stroke(\"#\"+aForm[whatAmISeeing].grotesque);\n          theWall.push();\n          theWall.translate(0,(sheLovesMe*height\/13)-height\/5);\n          theWall.rotate(0.1);\n          theWall.bezier(0,0,(height\/90)*sheLovesMe,(height\/10)*sheLovesMe,(height\/10)*sheLovesMe,(height\/40)*sheLovesMe,0,0);\n          theWall.pop();\n          sheLovesMe++\n      }\n      theWall.pop();\n      let sheLovesMeNot = 0;\n      theWall.push();\n        for(let i = 0; i < aDividedMind; i++){\n            theWall.fill(\"#\"+aForm[whatAmISeeing].aCrawlingColor[intoMyThoughts.random_int(0,6)]);\n            theWall.strokeWeight(4);\n            theWall.stroke(\"#\"+aForm[whatAmISeeing].grotesque);\n            theWall. push()\n            theWall.translate(0,(sheLovesMeNot*height\/14)-height\/5);\n            theWall. rotate(0.1)\n            theWall.bezier(0,0,0*sheLovesMeNot,(height\/10)*sheLovesMeNot,-(height\/15)*sheLovesMeNot,(height\/40)*sheLovesMeNot,0,0);\n            theWall.pop()\n            sheLovesMeNot++\n      }\n      theWall.pop();\n      theWall.pop();\n    }\n  }",
  "tokens" : [
    {
      "hash" : "0xe8d6c1c35a3d864e2f75c99c5237c02d0b9035d97119eebdc7981b3bb0486857",
      "id" : "442000039"
    },
    {
      "hash" : "0xbada20100f1ab98d6a9a3a60789aecd045d27f76a0bca36e0ed36bec2e7dc662",
      "id" : "442000000"
    },
    {
      "hash" : "0xe25afd0331f94fa8bf290835889f47736fdd90af8dddae62f69567f6e5d5b866",
      "id" : "442000024"
    },
    {
      "hash" : "0x621ae94ae5dd9f4f0fcbe98c521bfd9e79d7292f2d02bedc42a9b1ec7d0925d1",
      "id" : "442000040"
    },
    {
      "hash" : "0x5ad4ebf89bffd8606982554d847bfb6a0c1ed8e74437c2732b9f869fad5b06d2",
      "id" : "442000015"
    },
    {
      "hash" : "0x0f23d6c618571526aa592c417a40ffcb3d389a810c818d16116d54c731d99033",
      "id" : "442000018"
    },
    {
      "hash" : "0x5ad77ee0122ce9bae3d1d6e0829dfe655a16d250af3d5bdd1882f7fb0c3dcc1c",
      "id" : "442000038"
    },
    {
      "hash" : "0x5e97c1bd36255d0ffb1148e8a60328d5b769716b3dd4140f00783f179990eb42",
      "id" : "442000035"
    },
    {
      "hash" : "0xee985ddfe154942eb1c5d045d438ee8342966594da2122cfec670212845f2849",
      "id" : "442000017"
    },
    {
      "hash" : "0xd325b87341f1217af69233699429e2383d341adc5bb9eb6ce9dd663f49c3426f",
      "id" : "442000020"
    },
    {
      "hash" : "0xb37998d009837123f90cc5b82c4645a9c3c22d69c11fef35739cb9f0ae3dc138",
      "id" : "442000004"
    },
    {
      "hash" : "0xc118d60051299b3e9a609492ab3d6e1f56a003bfbb45831e128b9d345c42c7f1",
      "id" : "442000030"
    },
    {
      "hash" : "0x68e608fabd6d8c40ad6c85dc58f7b92458e3cf99e8f7ca3e820de48902145770",
      "id" : "442000034"
    },
    {
      "hash" : "0x996229a46b6cf583e0e84bc52b8b5d17c4f35230f2208b5a5ea117c23af6317a",
      "id" : "442000031"
    },
    {
      "hash" : "0x1afb99eab1f509f13b97412b01475199be89cb41f4e6b8a4416d2e8a28eea431",
      "id" : "442000032"
    },
    {
      "hash" : "0xdfcca006dc3eaa9cbe0f8683f65dae5c5d26f8b0d392dd5e1ba4e21eccfa66d1",
      "id" : "442000041"
    },
    {
      "hash" : "0xc8a7c69a3ad44c6dae747d8a7205cacff6edffda7ac41a576959887be2527e99",
      "id" : "442000016"
    },
    {
      "hash" : "0x66e71ac56a286f0d5ab4e3ac467c39a16d5ef7ecfd31ef68a3a00dec9b690590",
      "id" : "442000006"
    },
    {
      "hash" : "0x47082c68e8b781981c116bc7a3e310bf841e5f58e99af45cae860f9d65c836f8",
      "id" : "442000028"
    },
    {
      "hash" : "0x1108abff1d8e19b5130a4dfe53167d9ba1f6436e290b2b77648713d34961f5dc",
      "id" : "442000010"
    },
    {
      "hash" : "0x2b47e44f064d45bf847675ed4e3fff2b33b4fae33f84292140c8ba1b074fcbc1",
      "id" : "442000005"
    },
    {
      "hash" : "0xb2c370950c436872ee87b8d02fe72a18556c94bb6443c98e32bb48e1d23b66ae",
      "id" : "442000001"
    },
    {
      "hash" : "0xaef45252e3432df62d92555dc157294c28d3d3a9d0bcbd402ce9d01aa793bfd7",
      "id" : "442000014"
    },
    {
      "hash" : "0xabe818d37e99a9657c71ab6b70b109aced4c56abbf6910a90e7f75b18f22fb8d",
      "id" : "442000012"
    },
    {
      "hash" : "0x6262f11dc243fa8f82c09fe2630a3ce5d4493544663a328e411b49a66c29b9b0",
      "id" : "442000033"
    },
    {
      "hash" : "0x4492cfaee45814568c3a54885565e6ed52e2d30368d67ad2ea1b5bbb70db3bed",
      "id" : "442000008"
    },
    {
      "hash" : "0x1d8a1ecd935c65e9c491d45d4ca8b338f91c6118fc616f4bbcdb10c043db0870",
      "id" : "442000009"
    },
    {
      "hash" : "0x8f2ec8d3105cca6b420a41ba5ff33b11d16c82d972798beaed7d0dec20fb171c",
      "id" : "442000013"
    },
    {
      "hash" : "0x2f3139f98f43c75075130a0e88311ef69172444b3291262bb2018e72dcdeeee9",
      "id" : "442000022"
    },
    {
      "hash" : "0x8437f830efeedb480a08f0910c3779be7cb237a4d12e5a85060853b083ed41ad",
      "id" : "442000023"
    },
    {
      "hash" : "0xe68fa740ca42fcec08dfc61fee0e707445d16e8ec5c70d37097bae8d1997408a",
      "id" : "442000026"
    },
    {
      "hash" : "0x62654f48fc2b7ffd14dd48119dff8fbd7f4e06fa717a28ef49ac760d8a645aac",
      "id" : "442000019"
    },
    {
      "hash" : "0x29bf1f70ae18b1aa4cbde4a679b0f553bd546b7903429f06b2b78d8b306f03cc",
      "id" : "442000037"
    },
    {
      "hash" : "0x6eb1aa6115f35ac59f046da5328eba26b2bac8ea0d68a1426a9ddf3c24f6e897",
      "id" : "442000002"
    },
    {
      "hash" : "0x2b3f4bbb7b0814de7792d8e83476f81b6287f89e096cfc12652e71f601cd6a1c",
      "id" : "442000011"
    },
    {
      "hash" : "0x74e4a87de8385a062ad2199c8e7da5f6a2bbfd42b1f97dc872e54a351f0bb6b0",
      "id" : "442000036"
    },
    {
      "hash" : "0x49c8ae0baaec21c0c64fa00629cbcdeb292ec15399fd31b11bd9cba2d5ff2485",
      "id" : "442000007"
    },
    {
      "hash" : "0x8b6b82d63a6e476a3c3adffd9d013e9626c53e018debf09210f676021f0c2ede",
      "id" : "442000027"
    },
    {
      "hash" : "0x7a9a1365ee13cf78d721edde184cbd946581a02691670dcce7fab993b17dec5d",
      "id" : "442000029"
    },
    {
      "hash" : "0xce1c8703037cc3975bbbe0f30338eed305fe45503672ae39a278172258d462d6",
      "id" : "442000021"
    },
    {
      "hash" : "0x3a91960da389d31a086563e75e0b41ef337ab35c21d40b66c5078311ad6c1a29",
      "id" : "442000025"
    },
    {
      "hash" : "0x57638545f747e2b5eb95769c92528a469ac90685f72f0febb1e26c6b450d5757",
      "id" : "442000003"
    }
  ]
}