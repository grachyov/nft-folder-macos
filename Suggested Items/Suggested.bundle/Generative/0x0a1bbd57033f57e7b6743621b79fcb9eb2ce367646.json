{
  "contractAddress" : "0x0a1bbd57033f57e7b6743621b79fcb9eb2ce3676",
  "kind" : "js",
  "projectId" : "46",
  "screensaverFileName" : "FULL_SPECTRUM",
  "script" : "function t(t){return new URL(window.location.href).searchParams.get(t)}console.log(\"Made by Lars Wander https:\/\/larswander.com\"),console.log(\"Licensed under CC BY-NC-SA 4.0\");const e=t(\"hash\")??tokenData.hash,r=window.devicePixelRatio??1;console.log(tokenData.hash);class n{constructor(){this.useA=!1;let t=function(t){let e=parseInt(t.substring(0,8),16),r=parseInt(t.substring(8,16),16),n=parseInt(t.substring(16,24),16),i=parseInt(t.substring(24,32),16);return function(){e|=0,r|=0,n|=0,i|=0;let t=(e+r|0)+i|0;return i=i+1|0,e=r^r>>>9,r=n+(n<<3)|0,n=n<<21|n>>>11,n=n+t|0,(t>>>0)\/4294967296}};this.prngA=new t(e.substring(2,34)),this.prngB=new t(e.substring(34,66));for(let t=0;t<1e6;t+=2)this.prngA(),this.prngB()}random(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}}const i=new n,o=()=>i.random();function s(t,e){null==e&&(e=t,t=0),null==e&&(e=1);const r=e-t;return o()*r+t}function l(t){return null==t&&(t=.5),o()<t}const a=[.01,.1312,1.5806,7.7489,19.1068,27.2789,40.2367,43.3749,35.6146,22.4668,9.3318,1.7627,.4155,4.0426,12.3338,25.4684,39.3398,55.1236,70.52,84.6489,97.1482,99.1948,101.167,92.3319,75.0964,53.9294,36.1246,21.4712,12.2407,6.6892,3.2018,1.3875,.6874,.342,.1355,.0699,.0375,.0191],u=[0,.0164,.1655,.8051,1.9994,3.3546,6.5121,10.4722,15.1035,21.2723,29.3981,36.8978,50.3903,65.4035,79.829,94.2494,100.4376,103.1928,99.73,92.057,83.2302,68.9442,59.2511,47.3083,34.9129,23.6123,15.0491,8.6109,4.8369,2.6164,1.2447,.5369,.265,.1338,.0493,.028,.015,.0064],c=[.035,.5738,7.1169,35.6246,90.8624,134.661,206.3009,233.4076,205.6291,151.3409,89.5041,45.1892,23.8938,12.0738,6.3608,3.2845,1.4303,.4162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],f=a.length,h=s(),d=s(),x=s(),_=s(),m=s(),v=l(.1)&&m>.4,y=s(),p=s(),w=s(),T=s(),g=s(),A=8,b=4,E=lt(.01,.07,h),R=E*lt(.1,.6,d),S=lt(.18,.3,_),M=180*lt(1,.7,_),z=lt(-.4,.14,m),P=lt(.01,.15,g),L=3\/f,N=.02,I=lt(.09,lt(.13,.11,x),y),U=0,$=.16,F=t=>Math.pow(t,.25),B=lt(.21,.45,p),D=lt(.4,.55,p),X=Math.round(lt(20,38,x)),C=2,k=1,O=lt(.75,lt(.55,.59,y),w),G=.85,Y=.75,q=lt(3.5,4.5,T),H=Number(t(\"Dpx\")??500),W=(t(\"T\")??\"1,1\").split(\",\").map((t=>Number(t))),V=(t(\"i\")??\"0,0\").split(\",\").map((t=>Number(t)));console.table({RAY_EXTEND_T:h,RAY_NORMAL_T:d,SPECTRAL_SEPARATION_T:_,SPECTRAL_BIAS_T:m,SKEW_Z_T:T,SPECTRAL_LIGHT_SPREAD_T:g,SPHERE_COUNT:X,SPHERE_COUNT_T:x,MAX_SPHERE_SIZE_T:y,SECONDARY_RADIUS_MAX:I,DESAT_T:p,ZOOM_T:w});const Z=\"#version 300 es\\nprecision highp float;\\n\\nin vec2 a_coord;\\n\\nout vec2 v_tex;\\n\\nvoid main() {\\n   vec2 pos = (a_coord * 2.0) - 1.0;\\n   gl_Position = vec4(pos, 0.0, 1.0);\\n   v_tex = a_coord;\\n}\\n\";function K(t){const e=t.getContext(\"webgl2\",{preserveDrawingBuffer:!0});if(e){if(e.getExtension(\"EXT_color_buffer_float\"))return e.pixelStorei(e.UNPACK_ALIGNMENT,1),e;alert(\"Unable to render to F16 buffer\")}else alert(\"Unable to create webgl context\")}function j(t,e,r){const n=t.createShader(e);return t.shaderSource(n,r),t.compileShader(n),n}function J(t,e,r){const n=t.createProgram();return t.attachShader(n,e),t.attachShader(n,r),t.linkProgram(n),n}function Q(t){const e=Array(t[0].length*t.length);for(let r=0;r<t[0].length;r++)for(let n=0;n<t.length;n++)e[r*t.length+n]=t[n][r];return e}class tt{constructor(t,e,r,n){this.gl=t,this.width=e,this.height=r,this.texture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,this.texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texImage2D(t.TEXTURE_2D,0,t.RGBA16F,e,r,0,t.RGBA,t.FLOAT,n),this.framebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.texture,0)}read(){return this.texture}write(){return this.framebuffer}}class et{constructor(t,e){this.pool=t,this.id=e}read(){return this.pool.getRead(this.id).read()}write(){return this.pool.getWrite(this.id).write()}flip(){this.pool.flip()}}class rt{constructor(t,e,r){this.gl=t,this.width=e,this.height=r,this.buffers=[new tt(t,e,r,null)],this.writeIndex=0,this.owners=[],this.onLease=-1}add(t){return this.buffers.push(new tt(this.gl,this.width,this.height,t)),this.owners.push(this.buffers.length-1),new et(this,this.owners.length-1)}getRead(t){return this.buffers[this.owners[t]]}getWrite(t){if(this.onLease>=0)throw new Error(`Illegal state: already on lease to ${this.onLease}`);return this.onLease=t,this.buffers[this.writeIndex]}flip(){if(this.onLease<0)throw new Error(\"Can't flip: no lease open\");const t=this.owners[this.onLease];this.owners[this.onLease]=this.writeIndex,this.writeIndex=t,this.onLease=-1}}function nt(t,e,r,n){const{vertShader:i,width:o,height:s,coordBuffer:l}=n,a=J(t,i,j(t,t.FRAGMENT_SHADER,e)),u=t.createVertexArray();t.bindVertexArray(u);const c=t.getAttribLocation(a,\"a_coord\"),f=l;t.bindBuffer(t.ARRAY_BUFFER,f),t.enableVertexAttribArray(c);var h=t.FLOAT;t.vertexAttribPointer(c,2,h,!1,0,0);const d={program:a,width:o,height:s,vertexArray:u};for(const e of r)d[e]=t.getUniformLocation(a,e);return d}function it(t,e,r,n,i){const o=j(t,t.VERTEX_SHADER,Z),s=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,new Float32Array([n.x,n.y,i.x,n.y,n.x,i.y,n.x,i.y,i.x,n.y,i.x,i.y]),t.STATIC_DRAW),{vertShader:o,width:e,height:r,coordBuffer:s}}function ot(t,e,r,n,i){t.bindFramebuffer(t.FRAMEBUFFER,n),t.viewport(0,0,e.width,e.height),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.useProgram(e.program),t.bindVertexArray(e.vertexArray),t.uniform2f(e.u_r,e.width,e.height),t.uniform1i(e.u_S0,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,r),i&&i(),t.drawArrays(t.TRIANGLES,0,6)}function st(t,e,r){return Math.max(t,Math.min(e,r))}function lt(t,e,r){return\"number\"==typeof t?t*(1-r)+e*r:t.lerpT(e,r)}function at(t,e=2){const r=10**e;return Math.round(t*r)\/r}class ut{constructor(t,e){isNaN(t)?null==t&&(this.x=0,this.y=0):(this.x=t,this.y=e)}dot(t){return this.x*t.x+this.y*t.y}lerpT(t,e){return this.mul(1-e).add(t.mul(e))}add(t){return new ut(this.x+t.x,this.y+t.y)}sub(t){return new ut(this.x-t.x,this.y-t.y)}mul(t){return new ut(this.x*t,this.y*t)}div(t){return new ut(this.x\/t,this.y\/t)}floor(){return new ut(Math.floor(this.x),Math.floor(this.y))}dist(t){if(null==t)return Math.sqrt(this.x*this.x+this.y*this.y);{const e=this.x-t.x,r=this.y-t.y;return Math.sqrt(e*e+r*r)}}normalize(){const t=Math.sqrt(this.dot(this));return new ut(this.x\/t,this.y\/t)}}function ct(t=null,e=null,n=\"main\"){var i=document.createElement(\"canvas\");return i.id=n,i.width=t*r,i.height=e*r,i.style.width=t,i.style.height=e,document.body.appendChild(i),i}function ft(t,e=\"download\"){const r=document.createElement(\"a\");r.setAttribute(\"download\",e),t.toBlob((function(t){r.setAttribute(\"href\",URL.createObjectURL(t)),r.click()}))}class ht{constructor(t,e,r){this.x=t,this.y=e,this.z=r}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){return new ht(this.y*t.z-this.z*t.y,this.x*t.z-this.z*t.x,this.x*t.y-this.y*t.x)}lerpT(t,e){return this.mul(1-e).add(t.mul(e))}add(t){return new ht(this.x+t.x,this.y+t.y,this.z+t.z)}sub(t){return new ht(this.x-t.x,this.y-t.y,this.z-t.z)}mul(t){return new ht(this.x*t,this.y*t,this.z*t)}mul3(t){return new ht(this.x*t.x,this.y*t.y,this.z*t.z)}div(t){return new ht(this.x\/t,this.y\/t,this.z\/t)}rotateX(t){const e=Math.cos(t),r=Math.sin(t);return new ht(this.x,this.y*e-this.z*r,this.y*r+this.z*e)}rotateY(t){const e=Math.cos(t),r=Math.sin(t);return new ht(this.x*e+this.z*r,this.y,-this.x*r+this.z*e)}rotateZ(t){const e=Math.cos(t),r=Math.sin(t);return new ht(this.x*e-this.y*r,this.x*r+this.z*e,this.z)}dist(t){if(null==t)return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);{const e=this.x-t.x,r=this.y-t.y,n=this.z-t.z;return Math.sqrt(e*e+r*r+n*n)}}normalize(){const t=this.dist();return 0===t?new ht(0,0,0):this.div(t)}toString(){return`(${at(this.x)}, ${at(this.y)}, ${at(this.z)})`}}const dt=Q([a,u,c]),xt=new ht(0,0,-2);let _t=!0,mt=!1,vt=Number(t(\"N\")??130);const yt=`#version 300 es\\nprecision highp float; uniform sampler2D u_S0; uniform vec2 u_r; in vec2 v_tex; out vec4 o_col; vec3 aces_film(vec3 x) { float a = 2.4; float b = 0.03; float c = 2.4; float d = 0.59; float e = 0.14f; return clamp((x*(a*x+b))\/(x*(c*x+d)+e), 0.0, 1.0); } vec3 desat(vec3 c, float t) { float avg = dot(c, vec3(1.0)) \/ 3.0; return mix(c, vec3(avg), t); } void main(void) { vec3 c = texture(u_S0, v_tex).xyz; float mag = length(aces_film(c)) \/ sqrt(3.0); float sat = mix(float(${B}), float(${D}), mag); o_col = vec4(aces_film(desat(c, sat)), 1.0); }\\n`,pt=` const mat3 C = mat3( 3.2404542, -1.5371385, -0.4985314, -0.9692660,  1.8760108,  0.0415560, 0.0556434, -0.2040259,  1.0572252) \/ 2323.8695; const float N_AIR = 1.0; const float N_GLASS = 2.0; const float MAX_T = 10000.0; uniform sampler2D u_S0; uniform vec2 u_r; uniform vec3 u_obs[${f}]; uniform vec2 u_Ts; uniform vec2 u_Ti; uniform float u_st; uniform float u_t; uniform float u_s; uniform vec2 u_sxy; uniform vec3 u_eye; uniform float u_fov; uniform vec3 u_s_c[${X}]; uniform float u_s_r[${X}]; uniform vec4 u_ls[${C}]; in vec2 v_tex; out vec4 o_col; float PHI = 1.61803398; float PI  = 3.14159265; float GN(in vec2 xy, in float seed) { return fract(tan(distance(xy * PHI, xy) * seed) * xy.x); } float N(in vec2 xy, inout float seed) { xy += u_sxy; xy *= u_r; seed = GN(xy, seed); return GN(xy, seed); } vec2 N2(in vec2 xy, inout float seed) { return vec2(N(xy, seed), N(xy, seed)); } vec3 col(in float S[${f}]) { vec3 T[${f}]; for (int f = 0; f < ${f}; f++) { T[f] = S[f] * u_obs[f]; } vec3 res = vec3(0.0); for (int f = 0; f < ${f} - 1; f++) { res += T[f] + T[f + 1]; } return res * C; } float cbp(float c, float w, float x) { x = abs(x - c); if (x > w) { return 0.0; } x \/= w; return 1.0 - x * x * (3.0 - 2.0 * x); } vec2 sr(in vec3 ro, in vec3 rd, in vec3 ce, in float ra) { vec3 oc = ro - ce; float b = dot(oc, rd); float c = dot(oc, oc) - ra * ra; float h = b * b - c; if (h < 0.0) { return vec2(-1.0); } h = sqrt(h); return vec2(-b - h, -b + h); } vec3 sn(in vec3 p, in vec3 ce) { return normalize(p - ce); } vec2 gv() { return (u_Ti + v_tex) \/ u_Ts; } vec2 gm() { float a = float(0.75); float sd = float(0.85); vec2 ideal; if (u_r.x > u_r.y * a) { ideal = vec2(u_r.y * a, u_r.y); } else { ideal = vec2(u_r.x, u_r.x \/ a); } ideal *= sd; return (u_r - ideal) \/ 2.0; } void rord(in vec2 tex, out vec3 ro, out vec3 rd, out vec2 res) { ro = u_eye; res = u_r; float fov = u_fov; float scale = min(u_r.x, u_r.y); vec2 disp = tex * vec2(u_r.x \/ scale, u_r.y \/ scale); disp -= vec2(u_r.x \/ scale, u_r.y \/ scale) * 0.5; float z = 1.0 \/ tan(fov * 0.5); rd = vec3(disp, z); } float pr(in vec3 ro, in vec3 rd, in vec4 p) { return -(dot(ro, p.xyz) + p.w) \/ dot(rd, p.xyz); } vec3 pn(in vec4 p) { return p.xyz; } `,wt=`#version 300 es\\nprecision highp float; ${pt} float ss(in vec2 v) { if (v.x >= 0.0) { return v.x; } else { return v.y; } } float its(in vec3 ro, in vec3 rd, in vec3 lpt, out vec3 pt, out vec3 norm, out float mat) { float mt = MAX_T; for (int i = 0; i < ${X}; i++) { float r = u_s_r[i]; if (r < 0.0) { break; } vec3 ce = u_s_c[i]; float it = ss(sr(ro, rd, ce, r)); if (it > 0.0 && it < mt) { mt = it; norm = sn(lpt, ce); mat = 1.0 + float(i); } } for (int i = 0; i < ${C}; i++) { vec4 l = u_ls[i]; if (length(l) == 0.0) { break; } float it = pr(ro, rd, l); if (it > 0.0 && it < mt) { mt = it; norm = pn(l); mat = -1.0; } } pt = ro + rd * mt; return mt; } float gior(in vec3 pt) { for (int i = ${X} - 1; i >= 0; i--) { float r = u_s_r[i]; if (r < 0.0) { break; } vec3 ce = u_s_c[i]; if (length(ce - pt) < r) { return N_GLASS + float(i); } } return N_AIR; } float cast_ray(in vec3 ro, in vec3 rd, in float nm, inout vec3 lpt) { float ior = N_AIR; for (int i = 0; i < 8; i++) { rd = normalize(rd); ro = ro + float(${E}) * rd; float mat; vec3 norm; vec3 pt; float d = its(ro, rd, lpt, pt, norm, mat); if (d >= MAX_T || d < 0.0) { return 0.0; } if (mat < 0.0) { float A = max(0.0, dot(norm, rd)); float c = 1.0 * float(i) \/ float(8); float lt = mat \/ -float(${C} - 1); float light_c = A + mix(-float(${P}), float(${P}), lt); return cbp(light_c, float(${S}), nm + float(${z}) + c) * A; } ro = pt; lpt = pt; float nior = gior(pt + 0.001 * rd); vec3 nrd = refract(rd, norm, ior \/ nior); if (dot(nrd, nrd) != 0.0) { rd = nrd; } ro = ro + float(${R}) * norm; ior = nior; } return 0.0; } void main(void) { float S[${f}]; for (int c = 0; c < ${f}; c++) { S[c] = 0.0; } vec3 ro; vec3 rd; vec2 res; vec2 tex = gv(); vec2 px = tex * u_r; vec2 margin = gm(); vec2 to_edge = vec2(min(u_r.x - px.x, px.x), min(u_r.y - px.y, px.y)) - margin; if (to_edge.x < 0.0 || to_edge.y < 0.0) { o_col = vec4(100.0, 100.0, 100.0, 1.0); return; } rord(tex, ro, rd, res); float seed = u_s; int casts = 4; float w = float(${M}) \/ float(casts); vec3 lp = vec3(0.0); for (int i = 0; i < casts; i++) { vec2 aa = N2(tex, seed) \/ (u_r * u_Ts); vec3 trd = normalize(rd + vec3(aa, 0.0)); float nm = N(tex, seed); float A = cast_ray(ro, trd, nm, lp) * w; for (int c = 0; c < ${f}; c++) { float t = (float(c) + 0.5) \/ float(${f}); S[c] += cbp(${v?\"1.0 - nm\":\"nm\"}, float(${L}), t) * A; } } vec4 l_col = texture(u_S0, v_tex); vec4 n_col = vec4(col(S), 1.0); float t = 1.0 \/ u_st; o_col = l_col * (1.0 - t) + max(n_col * t, 0.0); }\\n`;function Tt(t,e,r,n,i,o){t.fillStyle=\"white\",t.fillRect(0,0,e,r),t.font=\"9pt Arial\";const s=new ut(Math.sqrt(3)\/2,.5).normalize(),l=new ut(0,-1).normalize(),a=new ut(-Math.sqrt(3)\/2,.5).normalize(),u=r\/4,c=new ut(e\/2,r\/2);let f=t=>s.mul(t.x).add(l.mul(t.y)).add(a.mul(t.z)).mul(u).add(c);const h=f(new ht(0,0,0)),d=[f(new ht(1.1,0,0)),f(new ht(0,1.1,0)),f(new ht(0,0,1.1))],x=[\"X\",\"Y\",\"Z\"];for(let e=0;e<d.length;e++){const r=d[e],n=x[e];t.beginPath(),t.strokeStyle=\"#aaa\",t.moveTo(r.x,r.y),t.lineTo(h.x,h.y),t.stroke(),t.fillStyle=\"#777\",t.textBaseline=\"middle\";const i=h.lerpT(r,1.15);let o=t.measureText(n).width;t.fillText(n,i.x-o\/2,i.y)}const _=f(xt);t.fillStyle=\"red\",t.fillRect(_.x-2,_.y-2,4,4);let m=t.measureText(xt.toString()).width;t.textBaseline=\"top\",t.fillText(xt.toString(),_.x-m\/2,_.y+6);const v=Math.min(o.x,o.y),y=o.div(v).mul(.5),p=1\/Math.tan(.5*O),w=new ht(y.x,y.y,p).normalize(),T=Math.abs(xt.z\/w.z),g=f(new ht(w.x,w.y,0).mul(T)),A=f(new ht(-w.x,w.y,0).mul(T)),b=f(new ht(-w.x,-w.y,0).mul(T)),E=f(new ht(w.x,-w.y,0).mul(T));t.fillStyle=\"#ee7777\";for(const e of[g,A,b,E])t.fillRect(e.x-2,e.y-2,4,4);let R=!0;t.beginPath(),t.strokeStyle=\"#ee9999\",t.lineWidth=1;for(const e of[g,A,b,E])R?t.moveTo(e.x,e.y):t.lineTo(e.x,e.y),R=!1;t.closePath(),t.stroke();for(let e=0;e<n.length;e++){const{center:r,radius:i}=n[e],o=f(r),s=i*u;t.beginPath(),t.strokeStyle=\"black\",t.arc(o.x,o.y,s,0,2*Math.PI),t.stroke()}for(let e=0;e<i.length;e++){const{norm:r}=i[e],n=f(r.mul(1.1));t.fillStyle=\"blue\",t.fillRect(n.x-2,n.y-2,4,4);const o=r.toString(),s=t.measureText(o);m=s.width;const l=s.fontBoundingBoxAscent+s.fontBoundingBoxDescent;t.fillStyle=\"#ffffff99\",t.fillRect(n.x-m\/2,n.y+3,m,l),t.textBaseline=\"top\",t.fillStyle=\"blue\",t.fillText(o,n.x-m\/2,n.y+6)}t.textBaseline=\"top\",t.fillStyle=\"red\",t.fillText(\"EYE\",10,4),t.fillRect(4,7,4,4),t.fillStyle=\"blue\",t.fillText(\"LIGHTS\",10,18),t.fillRect(4,21,4,4),t.fillStyle=\"black\",t.fillText(\"OPTICS\",10,32),t.fillRect(4,35,4,4),t.fillStyle=\"#ee9999\",t.fillText(\"VIEWPORT\",10,46),t.fillRect(4,49,4,4)}function gt(t,e,r){const n=it(t,e,r,new ut,new ut(1,1)),i=new rt(t,e,r),o=i.add();return{spectralShader:nt(t,wt,[\"u_r\",\"u_obs\",\"u_S0\",\"u_st\",\"u_t\",\"u_s\",\"u_sxy\",\"u_s_r\",\"u_s_c\",\"u_eye\",\"u_fov\",\"u_ls\",\"u_Ts\",\"u_Ti\"],n,!0),displayShader:nt(t,yt,[\"u_r\",\"u_S0\"],n,!0),bufferPool:i,buffer:o,width:e,height:r}}function At(t,e,r,n,i,o){const l=i.map((t=>[t.center.x,t.center.y,t.center.z])).flat(),a=i.map((t=>t.radius));a.length<X&&a.push(-1);const u=o.map((t=>[t.norm.x,t.norm.y,t.norm.z,t.offset])).flat();for(;u.length<4*C;)u.push(0);ot(t,e,r.read(),r.write(),(()=>{t.uniform3fv(e.u_obs,dt),t.uniform1f(e.u_st,n),t.uniform1f(e.u_t,n\/vt),t.uniform1f(e.u_s,s(-1,1)),t.uniform2f(e.u_sxy,s(-1,1),s(-1,1)),t.uniform3fv(e.u_s_c,l),t.uniform1fv(e.u_s_r,a),t.uniform3f(e.u_eye,xt.x,xt.y,xt.z),t.uniform1f(e.u_fov,O),t.uniform4fv(e.u_ls,u),t.uniform2f(e.u_Ts,W[1],W[0]),t.uniform2f(e.u_Ti,V[1],W[0]-V[0]-1)}))}function bt(t,e,r,n,i){t.canvas.width=e.width,t.canvas.height=e.height,At(t,e.spectralShader,e.buffer,r,n,i),e.buffer.flip(),ot(t,e.displayShader,e.buffer.read(),null,null)}class Et{constructor(t,e,r=3,n=[]){this.gen=t,this.rank=e,this.N=r,this.samples=n}sample(){let t=Number.MAX_VALUE,e=null;for(let r=0;r<this.N;r++){const r=this.gen(),n=this.samples.map((t=>this.rank(t,r))).reduce(((t,e)=>t+e),0);n<t&&(t=n,e=r)}return this.samples.push(e),e}}class Rt{constructor(t,e,r=[]){this.gen=t,this.filter=e,this.samples=r}sample(){let t=!1,e=null;for(;!t;)e=this.gen(),t=this.filter(e)&&this.samples.every((t=>this.filter(e,t)));return this.samples.push(e),e}}function St(){let n=window.innerWidth,i=window.innerHeight;new ut(0,0);const o=new ut(n,i).floor(),[a,u]=[o.x,o.y],c=ct(a,u,\"display\"),f=K(c);if(!f)return;const h=gt(f,a*r,u*r);let d=null,x=null;d=ct(H,H,\"scene\"),d.style.position=\"absolute\",d.style.top=\"0\",d.style.left=\"0\",x=d.getContext(\"2d\");let _=t(\"v\")??!1;const m=()=>{d.style.zIndex=_?\"10\":\"-10\"};m();new ht(0,1,0).cross(xt.normalize());const v=new ht(1,1.5,q),y=[{radius:1,center:(t=>{let e=s(.2,1),r=s(.2,1);const n=1*e\/30*Math.PI*(l()?-1:1),i=1*r\/15*Math.PI*(l()?-1:1);return new ht(0,0,t).rotateY(n).rotateX(i)})(.001)}],p=new Et((()=>{const t=y.length\/(X-1),e=lt(I,N,(r=t,Math.pow(r,.25)));var r;const n=(t=>{let e=s(),r=s();const n=e*Math.PI*2,i=r*Math.PI*2;return new ht(0,0,t).rotateY(n).rotateX(i)})(lt(0,$-e,Math.sqrt(s()))).mul3(v);return{center:n,radius:e}}),((t,e)=>{const r=t.center.x-e.center.x,n=t.center.y-e.center.y;return-1*(r*r+n*n)}),Math.floor(s(6,10)),[]);for(;y.length<X;)y.push(p.sample());const w=[xt.normalize()],T=new Rt((()=>new ht(0,0,1).rotateX(s(2*Math.PI)).rotateY(s(2*Math.PI))),((t,e)=>null==e?t.z<.49:t.dot(e)<.8),w),g=Array(C).fill(null).map((()=>({norm:T.sample().rotateX(0),offset:-50})));Tt(x,H,H,y,g,o);let A=1;!function t(){A>=vt+1?document.title=\"FULL_SPECTRUM\":(bt(f,h,A,y,g),A++,document.title=`FULL_SPECTRUM (${at(A\/vt*100,1)}%)`,window.requestAnimationFrame(t))}(),window.addEventListener(\"keydown\",(t=>{if(\"v\"==t.key)_=!_,m();else if(\"d\"==t.key){const t=V[0].toString().padStart(2,\"0\"),r=V[1].toString().padStart(2,\"0\");ft(c,`FULL_SPECTRUM_${e}_${t}x${r}`)}}))}St();",
  "tokens" : [
    {
      "hash" : "0x60001dd49c1b13d68c130feec015f53fc4a74880b9de056cb269114ac071c713",
      "id" : "46000064"
    },
    {
      "hash" : "0x5b5a56f673834da0cbe518eed03839593eff104f39a0fe6806fcd297776c539c",
      "id" : "46000082"
    },
    {
      "hash" : "0x62fb15a888315981bace1f0e20fc130778b1e713cdbbf0f184c6bc71c757f3e5",
      "id" : "46000015"
    },
    {
      "hash" : "0xd68f0e4eacf379fee1bbf4c9ca61ff3216eea31b7db6eae78797c1cc2ac3e3bd",
      "id" : "46000001"
    },
    {
      "hash" : "0xe3dd053f78a3d16da827cc81b668e7247327c401901c0f09b4e9088c5e510e9e",
      "id" : "46000079"
    },
    {
      "hash" : "0x87735b94882ccfae6fd7d845763023b0775a4fc8da76d377157b050d7288861e",
      "id" : "46000011"
    },
    {
      "hash" : "0xab8bd60fb7bccce5f9ac1af0749a79d29655b22f4adf5217b1e71f3bccdff199",
      "id" : "46000010"
    },
    {
      "hash" : "0x96f462e89a18a99988d256b3f23ffe613a59883ae63492701d333ed15df940d8",
      "id" : "46000027"
    },
    {
      "hash" : "0xdce832df4cede678b4f0e937ad01f9d6f52c84d2ed2c35cbd6d9e4a1546a22b7",
      "id" : "46000068"
    },
    {
      "hash" : "0xce4fc357362f6b77c14657ffb5ddd603390bbe07eac25dda9e2f2c91dbc7a6fe",
      "id" : "46000095"
    },
    {
      "hash" : "0x51adf58d14190a85d10f3ec9bb6b9640162336d80ea667dcc091607d28fd8fc0",
      "id" : "46000052"
    },
    {
      "hash" : "0x3d5fbc762b9c49516dd529053a39704921052f0efb908e767855c66ff7e339d6",
      "id" : "46000075"
    },
    {
      "hash" : "0xda9e9513700cc4dba2b75286009e0a739efe6f58431b3aa10f793fd998b8af61",
      "id" : "46000034"
    },
    {
      "hash" : "0x457c3345394aaef57ff1d8a27e2baf3bf11f2f31423f6b697ad35190d7d54df1",
      "id" : "46000043"
    },
    {
      "hash" : "0x4e3fb81ac1764e81c8f13e29a2f0f8861586e999b5e6b37a47cc4151047f938b",
      "id" : "46000090"
    },
    {
      "hash" : "0xd551bdab8318af5a4d2475ccb6435fde0badb812bf95eabd6415ccda2c506ca1",
      "id" : "46000094"
    },
    {
      "hash" : "0x5b568906caed626d964c76e318bba709d49031579f527fdf5a059617d1684709",
      "id" : "46000066"
    },
    {
      "hash" : "0xfbd955bbe89b3a714fc04a74f413ca97e2f5272880e742cd3e15662570d53c81",
      "id" : "46000033"
    },
    {
      "hash" : "0xb8cc57ddba6f2b7e8536553d0096d7c350fa6b9fc1341fb18f663d9701b6e101",
      "id" : "46000022"
    },
    {
      "hash" : "0xfb3d78333fff68dffb49905a9f07ed42304e967ca65db7479b13e7615ea9277f",
      "id" : "46000031"
    },
    {
      "hash" : "0x8b6d346b72d5bb3daaf472fbbdc3d5190d04f580237f7d2eb5c3c2338f6d93ed",
      "id" : "46000042"
    },
    {
      "hash" : "0x93483a487f8709b82d74b91a9ba2788f5936ea71bc0797bc4c9bb1c87a3dca6e",
      "id" : "46000023"
    },
    {
      "hash" : "0xdc9245b8d5e6bb4470cdb2bad013422627d07e88943d7db5d079138cfcc4c77b",
      "id" : "46000081"
    },
    {
      "hash" : "0xaf1d8a0df76308027f2b211ba5a61db1fc04b346c0fc4b935ce0cbc5021e6f49",
      "id" : "46000039"
    },
    {
      "hash" : "0x4a0847d59a79686565799636709212001122f7371885cb24e0070a66830342e6",
      "id" : "46000085"
    },
    {
      "hash" : "0xff7f0b71cdb787bc25539f258449ecbb2620bace3774c37be9628e9d0e1a6868",
      "id" : "46000047"
    },
    {
      "hash" : "0xcd159c2ae266c23daa9c27e97d7792e958cb29780ade74b7a383a7a2809cffc5",
      "id" : "46000049"
    },
    {
      "hash" : "0x037a554024316f8f25276e0059cbb8640a4eb43bff0d85f1a896b77c16d76c29",
      "id" : "46000089"
    },
    {
      "hash" : "0x8aca42df62d0296cf3b57f4e2f5735705e756ca6b8cdc4d00494430e4de68174",
      "id" : "46000060"
    },
    {
      "hash" : "0x211b13ae6d98e523fad59f4f508846597208523a8f09acd7afeee3c57a4c8645",
      "id" : "46000038"
    },
    {
      "hash" : "0x0b52bce7adadbc9ff259c22e655b88e5982fd27e80fea9ffd29fc7b35cb5f5ae",
      "id" : "46000050"
    },
    {
      "hash" : "0xe20cbb0a182463678ae362a641a5cfe14124d8121aeaa344cbcb53dea93e006c",
      "id" : "46000051"
    },
    {
      "hash" : "0x33252cf3a1dc480e7629f155ce0ab3a95a081f956dc6832413aea3e1a5253491",
      "id" : "46000061"
    },
    {
      "hash" : "0xcd18fa0e546bd5e7f4ffec8f596d5071590c57239f97f411e476c741c78709ba",
      "id" : "46000080"
    },
    {
      "hash" : "0x487d4b7086071bccb23e5ea0946c24efcc7058372e605ec4a5796912a12dd9db",
      "id" : "46000097"
    },
    {
      "hash" : "0x34408c397984b563f24f02fd40a72611300c7e0e8234270cc31d408aad467096",
      "id" : "46000000"
    },
    {
      "hash" : "0xc425e2be6da3dea0f7da0aa9f77227357821fd57164f4d07e4ff05d56820715b",
      "id" : "46000054"
    },
    {
      "hash" : "0x67ebd8f02401f23e71a9b0de7a802426464674384db86990884d158bbba0c14d",
      "id" : "46000096"
    },
    {
      "hash" : "0x165d53b6255708dbafefd88de769db5e26c54743e689d82a58202ab42781dfd3",
      "id" : "46000074"
    },
    {
      "hash" : "0x8a02c17d5992ab1ef8ce763739a1e55feab3a742244a3982726abd588274f248",
      "id" : "46000065"
    },
    {
      "hash" : "0x6de03102c4ba0d1988e8118df875847cb57f8a855a583e44bc638d76832e03db",
      "id" : "46000071"
    },
    {
      "hash" : "0x70b0a79844ad6f67adfbbcd5bb6990128f392cee121563473aba5f300493ae75",
      "id" : "46000032"
    },
    {
      "hash" : "0x1e4507d587a78a81af8416097260dd6c2e34f72254b93b676e3dae3f1fbae28b",
      "id" : "46000048"
    },
    {
      "hash" : "0x79794890f140bdead763f99771f63b6cabac93075c07c5beba55726ea03a46a6",
      "id" : "46000069"
    },
    {
      "hash" : "0x12161cfd4298e29231426d468c145238868686ce146be444645eae82f7c41a2c",
      "id" : "46000083"
    },
    {
      "hash" : "0xd37fcccceef7068636b0cbf91794b7af6fca474b7683ca8f845d948a360e4b7f",
      "id" : "46000021"
    },
    {
      "hash" : "0x5de7cd5002282a0e7d96b9d22a74854c95cc0dffb1788d3a0090838f96848a5e",
      "id" : "46000016"
    },
    {
      "hash" : "0x8bee39c8fc05b6d459a1a63f772b279980d9942a58750fe73e2a01381fe2e8c8",
      "id" : "46000009"
    },
    {
      "hash" : "0x209959d0951516fc265bdd83b6f3b78b00b1bb263bdba670622c8508dc1e3394",
      "id" : "46000037"
    },
    {
      "hash" : "0x235ffeba0eefb1da6c1c65cde29ff5fe5ef5c0e9ab665aff7f4abcdc7cacdaf1",
      "id" : "46000046"
    },
    {
      "hash" : "0x49f46b2a235e43941c6790ef6cc4fad19ca19e2edc50d026f2b39fc8f3ca96b4",
      "id" : "46000008"
    },
    {
      "hash" : "0x1d30104feb4a2e2683a3154bc3558c000507fdb0acac2e4d1c6daa50c56ace2e",
      "id" : "46000058"
    },
    {
      "hash" : "0xbbb737c4786e7acb6df4c7f01e72fb14c3312ce386d7ad38004958290c2cef53",
      "id" : "46000017"
    },
    {
      "hash" : "0x13a5c9401355c830b4e435279dd8c53bc3ddf8ea129f890c7372d9ea993f1f00",
      "id" : "46000018"
    },
    {
      "hash" : "0x6aa06db26125e2c38b3e67ac67e8194c000e2468aca8759c13246f707a2d9b62",
      "id" : "46000091"
    },
    {
      "hash" : "0x6346bdec68171e325ae11aeb088a323bf9616a6581d0f4b01c2c9977d69c3266",
      "id" : "46000056"
    },
    {
      "hash" : "0xb9bd994e95ca84a6f6275d56b345fa966666b6f6ad1453e8568ca5ef65c08383",
      "id" : "46000059"
    },
    {
      "hash" : "0xc0a3f60a745b76285ace4118ab0a6d8e12e98e0d107dd8bb67a910fa5525d100",
      "id" : "46000030"
    },
    {
      "hash" : "0x8b594308caf779517d8b03260ff21fdd442e8addeb774a48505355c6d6a0ca61",
      "id" : "46000053"
    },
    {
      "hash" : "0x9811a3b69612b28e5383e859e576117c5a226df14187b7ef99126067b2f33a39",
      "id" : "46000057"
    },
    {
      "hash" : "0xf69b9c0542afb4254db4d03fb020da5639c43184781e6a1fbba5ea6a54d42619",
      "id" : "46000062"
    },
    {
      "hash" : "0xf828cd014765659d37c01ac9bafe04fa7e072ba89fea33ec30f3a175d42b2d63",
      "id" : "46000063"
    },
    {
      "hash" : "0x1806fe5acd0485af983d06efe8a09c03356ce37181418d33a5e5f8f705523fb4",
      "id" : "46000029"
    },
    {
      "hash" : "0xa92331bb8bdd2c6d3056822c6ecc982af7d6ac3eae335381d96863a3802024b9",
      "id" : "46000026"
    },
    {
      "hash" : "0x948951c668b9798c863604ea0a6a70bf48a36bcfda29602f270424dc645270b6",
      "id" : "46000028"
    },
    {
      "hash" : "0x75793d0f6b3ffcb6f9537e29511bb65da42bdf6489d8b3bee2c8fb204b993133",
      "id" : "46000070"
    },
    {
      "hash" : "0x92c114fe38400df14a36ce4754b7cc4233071c6e8b816c47cf518be2b7c73fa5",
      "id" : "46000019"
    },
    {
      "hash" : "0x03fec98181c72bb827eb61cc3889508723af2438ad38e80b6a8ebe4a0e00db21",
      "id" : "46000020"
    },
    {
      "hash" : "0xa01f0e78e4a81c7b4287ca74b7ad882afb9b39d391c219427e2319ede1956bc7",
      "id" : "46000084"
    },
    {
      "hash" : "0xc3f72d04b6864d66776f60f809d55cc2140b528277d96472bc8528c511414464",
      "id" : "46000035"
    },
    {
      "hash" : "0xf4411308677337a2d92859e066621efcd0659b47485cecf94944987d268a468f",
      "id" : "46000078"
    },
    {
      "hash" : "0x0e6cbe060ad3d919b98764140a88698937d0d147d42c79e2217854a5607737f2",
      "id" : "46000014"
    },
    {
      "hash" : "0xd7abaecb680c2b22370742c2ef2941f94bafbe841d95c68cb66807e73019e748",
      "id" : "46000012"
    },
    {
      "hash" : "0x8e0a9be84894457d2560316c21f63a1ac568702ebc82972c1b808c18ca9065ae",
      "id" : "46000013"
    },
    {
      "hash" : "0x38da25c4e9513dc64212c11bf841a9af931ad21b9f433c3ec5f1f4e563dcc213",
      "id" : "46000040"
    },
    {
      "hash" : "0x0089fb7f9d6c93e7130cc6f2cd1a311ea2589bdf6f9e01af75c4fa029989707b",
      "id" : "46000041"
    },
    {
      "hash" : "0x5e113db968c9eeef5ceed9718ed1a99c2283b9e27d37163b482e2292a0bdaef7",
      "id" : "46000004"
    },
    {
      "hash" : "0x38dcd9a46b0ff93b37cbbea079cea6da9d1f12bf6972cecad725f9d3ed92f693",
      "id" : "46000005"
    },
    {
      "hash" : "0x04df8248602978faa99547f2c2e76083f1fa7a55eef5c81bdd2347f0cfcafb3a",
      "id" : "46000055"
    },
    {
      "hash" : "0xafcae44893d7cdb27ac9be28309c4f458da748bff276225cbfe8b55ab2718bdc",
      "id" : "46000093"
    },
    {
      "hash" : "0xeee4b4337493575b6e28c0ba2f6febe8dc27b1bf3262cbd7bd937c4c65384933",
      "id" : "46000067"
    },
    {
      "hash" : "0x3e5ea2e7ed48586fff7339c3951bc8a3ad3d2505726bbd11332b883fcb582875",
      "id" : "46000072"
    },
    {
      "hash" : "0xb06e468918bf3d960f83f4f51a02911e25c1c4217a8d2a0de4b216b1a3822eb8",
      "id" : "46000086"
    },
    {
      "hash" : "0xc87fc08ebd309319f9877161052897e8b26c7413f2c268571cec1866a953f785",
      "id" : "46000098"
    },
    {
      "hash" : "0x52e471bdc4e0da0a1502df60c0db07cd79b856a9978e291eec70330a5c571631",
      "id" : "46000099"
    },
    {
      "hash" : "0x58588cd4cf7c9b10279652be0667f20ebfcffb21b7c2640fcea2436d8db792c6",
      "id" : "46000073"
    },
    {
      "hash" : "0x393a85bc85dd9c919faaf255219ab59d1f86f5c28f26bdd04a3d5c656f00ddb2",
      "id" : "46000087"
    },
    {
      "hash" : "0x56d316cd9c2de8cb91a78ea4682f3165e66d3eca9fa6a95b1dbba2adf89d66a5",
      "id" : "46000007"
    },
    {
      "hash" : "0x153e1f236c5cd940ee674756dab248875695a9401f39f2a73345c375a9ae2f4f",
      "id" : "46000076"
    },
    {
      "hash" : "0x37d5de73dce19cc0e595e8a9e7f9020dc616d87d810dc03a87d753830be9d398",
      "id" : "46000024"
    },
    {
      "hash" : "0x83305112bb1b07dd97f32f299cfab916251d61c61ce90959b9ce4da7b8920576",
      "id" : "46000006"
    },
    {
      "hash" : "0x4e7983669a694f3b2c4b59db2ee1df57aa37bfa7e1b93ff9bd1b5ebdcd51bc0b",
      "id" : "46000077"
    },
    {
      "hash" : "0xf83b6714a76ba8cfbe7b2a47885533e38f2941a1ff12eb9f80e9c0d4b5df7fa6",
      "id" : "46000002"
    },
    {
      "hash" : "0xb8e0b261de28c110883113584f0c73f8ea3071dd60e58acc1d8487e02d7e3407",
      "id" : "46000003"
    },
    {
      "hash" : "0x83dcd966e8b837271c1a392bc3253f7ce13455eb19118112fc1fc7b5fc0fc165",
      "id" : "46000025"
    },
    {
      "hash" : "0x03d6156ca32059d075f4399c3a4ef457dec389759bb37400dc21ec2dce2ac372",
      "id" : "46000045"
    },
    {
      "hash" : "0x9bee85be5edb2e6585f57e9a6e9de7fe095ad0b0aca82fc3aec483f2f0a15e01",
      "id" : "46000036"
    },
    {
      "hash" : "0x271d58a844a574a1bf24ccd812cd1802197e14ec13e8cf3d153d9dafab638fd2",
      "id" : "46000044"
    },
    {
      "hash" : "0xf6c1c3e46cab931bfe5be7d06c28ffd05aa7a32559636e5abcd40d9eaf678659",
      "id" : "46000088"
    },
    {
      "hash" : "0x4f3ce372178095bb5c9071f6a573c1c6c1209ee16413b08e825b5111299822f0",
      "id" : "46000092"
    }
  ]
}