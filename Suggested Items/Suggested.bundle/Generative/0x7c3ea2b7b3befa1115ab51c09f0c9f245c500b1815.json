{
  "contractAddress" : "0x7c3ea2b7b3befa1115ab51c09f0c9f245c500b18",
  "kind" : "js",
  "projectId" : "15",
  "script" : "function fisherYatesShuffle(seed, array) {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = (seed + currentIndex) % currentIndex;\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction generateIndices(seed, totalImages) {\n  const array = Array.from({ length: totalImages }, (_, i) => i + 1);\n  return fisherYatesShuffle(seed, array);\n}\n\nfunction selectImage(tokenId, totalImages = 100) {\n  const seed = 582036;\n  const indices = generateIndices(seed, totalImages);\n  console.log(`tokenId: ${tokenId}`)\n  console.log(`Selection: ${indices[tokenId % totalImages]}`)\n  return indices[tokenId % totalImages];\n}\n\nconst selectedImage = selectImage(tokenData.tokenId);\n\nlet CID = \"QmaPUSHdSYYQonhEZsZYdQUbKBpMsTAtRcNfQdJstskjed\"\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n}\n\nfunction initVideoPlayer() {\n\n  const videoElement = document.createElement('video');\n  videoElement.style.display = 'none';\n  videoElement.style.position = 'fixed';\n  videoElement.style.top = '50%';\n  videoElement.style.left = '50%';\n  videoElement.style.transform = 'translate(-50%, -50%)';\n  videoElement.style.objectFit = 'cover';\n\n  function blobToBase64(blob) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  }\n\n  function loadVideo() {\n    const videoURL = `https:\/\/pinata.brightmoments.io\/ipfs\/${CID}\/${selectedImage}.mp4`;\n    videoElement.src = videoURL;\n  }\n\n  async function loadVideoHeadless() {\n    const videoURL = `https:\/\/pinata.brightmoments.io\/ipfs\/${CID}\/${selectedImage}.mp4`;\n    const res = await fetch(videoURL);\n    const videoBlob = await res.blob();\n    const base64Data = await blobToBase64(videoBlob);\n    videoElement.src = base64Data;\n  }\n\n  videoElement.oncanplaythrough = function() {\n    videoElement.style.display = 'block';\n  };\n\n  if (!\/\\bHeadlessChrome\/.test(navigator.userAgent)) {\n    videoElement.setAttribute('preload', 'auto');\n\t  loadVideo();\n    document.body.appendChild(videoElement);\n    document.onclick = function() {\n      videoElement.setAttribute('loop', '');\n      videoElement.play();\n      document.onclick = null;\n    };\n  } else {\n    console.log(\"in headless context\");\n    document.body.appendChild(videoElement);\n    loadVideoHeadless();\n    document.onclick = function() {\n      videoElement.setAttribute('loop', '');\n      videoElement.play();\n      document.onclick = null;\n    };\n  }\n  function adjustVideoSize() {\n    if (window.innerWidth > window.innerHeight) {\n      videoElement.style.width = 'auto';\n      videoElement.style.height = '100vh';\n    } else {\n      videoElement.style.width = '100vw';\n      videoElement.style.height = 'auto';\n    }\n  }\n  adjustVideoSize();\n  window.addEventListener('resize', adjustVideoSize);\n}\n\ndocument.addEventListener('DOMContentLoaded', initVideoPlayer);",
  "tokens" : [
    {
      "hash" : "0xb4dfabe49a4e25fe490ae4af8ac0ff15b95c73817c2ef6663c2b01d8183dfd04",
      "id" : "15000016"
    },
    {
      "hash" : "0xb94cf4a2bcb0113fe64ea2dcac977cf60ca6f9c713ce126a720fcf3afe6aea21",
      "id" : "15000007"
    },
    {
      "hash" : "0x281bcab0d83caf542e68c105674a4ee6637191532734c6ebefc8307de1e54c49",
      "id" : "15000011"
    },
    {
      "hash" : "0x1f6c10a15e8b097d4024969ddf87b5a0e2caed64268bd74d4e758a896910a90c",
      "id" : "15000010"
    },
    {
      "hash" : "0x338dcd703a9c6bbd9a0020899864f3f615034cc457b76e793a60b8ccf99f849e",
      "id" : "15000008"
    },
    {
      "hash" : "0x7afec11bd7eb2123c1ccdc441e4d2a16a8ab8ab30474095c1d0864a76c68bd40",
      "id" : "15000001"
    },
    {
      "hash" : "0xaf8c35d46ed32ac1337f0f8ed7bc7ae96716f99be58d1a662dda905fee25ce9a",
      "id" : "15000012"
    },
    {
      "hash" : "0x48b953ff87a2555f0a386272116aa468a709293152f5297f17b1c7c6217a167e",
      "id" : "15000005"
    },
    {
      "hash" : "0xc83a0c731afbcde3fafc752a5626f4169645aaceb837db92dc50bdaa5851563b",
      "id" : "15000002"
    },
    {
      "hash" : "0x79b3ad5905a86033d983ec2684c7df5afde8ce464af5499f1f615e7015a006df",
      "id" : "15000013"
    },
    {
      "hash" : "0x0f1e36babcf0010e6306d121c7765dad5f848f80f2fe4ad85c91dcf32d36a49c",
      "id" : "15000009"
    },
    {
      "hash" : "0xcd9640f01f1c3197846ff57b1a772eecb64c3b381a80b3d4d5f3d786e2e9f6c2",
      "id" : "15000017"
    },
    {
      "hash" : "0xb5c04d60fb493190dad0fa1dfb7eea6647abbd746a2b846be6522e0c637d8609",
      "id" : "15000006"
    },
    {
      "hash" : "0xa7cfa54bc20ba27babea1431fbf2b7095538f51e267ea26809709ed98917a64d",
      "id" : "15000014"
    },
    {
      "hash" : "0xcc40e46c5613fc655165e12b694793686f5f4667076ab0b52af8b14b3d75dc80",
      "id" : "15000015"
    },
    {
      "hash" : "0x67e752443689e8fd121a78435a5ada5eabd783a247ee08caf7a5f2f0b89e6cd7",
      "id" : "15000000"
    },
    {
      "hash" : "0xd74f70193b6105372402101fcb4ffdd2f62b5c1020fe857627359bb590501ed5",
      "id" : "15000018"
    },
    {
      "hash" : "0x548b46b89761a4f428b3e92f31502f244918ab0452aee18bd18470712313dec9",
      "id" : "15000004"
    },
    {
      "hash" : "0x273ba1e1876a167640839bfd18d80d378d2567adc7e12d16449084ba859ba534",
      "id" : "15000003"
    }
  ]
}