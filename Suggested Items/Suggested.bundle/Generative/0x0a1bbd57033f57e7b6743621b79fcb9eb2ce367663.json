{
  "contractAddress" : "0x0a1bbd57033f57e7b6743621b79fcb9eb2ce3676",
  "kind" : "p5js100",
  "projectId" : "63",
  "script" : "let tokenId = tokenData.tokenId;\ntokenData = tokenData.hash;\nlet R, w, h, grid, u, margin;\nlet heights, rows, rh, wh1, wh2, s, b, n, y, divider, dividers;\nlet h1, h2, h3, h4, h5, h6, p1, p2, p3, p4, p5, p6, rindex, cr, crows, ftemp, f, harmony, anything, c;\n\nfunction setup() {\n  colorMode(HSB);\n  R = new Random();\n  w = window.innerWidth;\n  h = window.innerHeight;\n  if (w \/ h > 4 \/ 5) {\n    w = 4 \/ 5 * h;\n  } else {\n    h = 5 \/ 4 * w;\n  }\n  createCanvas(w, h);\n  grid = 64;\n  u = h \/ (grid + 16);\n  margin = h \/ 10;\n  heights = [1, 2, 3, 4, 6, 8, 12];\n  rows = [];\n  dividers = [];\n  wh1 = 345;\n  wh2 = 55;\n  s = 53;\n  b = 98;\n  n = 0;\n  y = 0;\n  c = 0;\n  while (n < grid) {\n    rh = heights[R.random_int(0, heights.length - 1)];\n    if (n + rh < grid) {\n      rows.push(rh);\n      dividers.push(Math.pow(2, R.random_int(0, Math.log2(grid) - 2)));\n    } else {\n      rh = grid - n;\n      rows.push(rh);\n      dividers.push(Math.pow(2, R.random_int(0, Math.log2(grid) - 2)));\n    }\n    n = n + rh;\n  }\n  rindex = [];\n  for (let i = 0; i < rows.length; i++) {\n    rindex.push(i);\n  }\n  rindex = scramble(rindex);\n  if (R.random_bool(5 \/ 100)) {\n    harmony = \"Monochromatic\";\n  } else {\n    if (R.random_bool(10 \/ 95)) {\n      harmony = \"Anything Goes\";\n    } else {\n      if (R.random_bool(20 \/ 85)) {\n        harmony = \"Complementary\";\n      } else {\n        harmony = \"Analogous\";\n      }\n    }\n  }\n  cr = R.random_int(3, Math.max(3, Math.floor(rows.length \/ 2.7)));\n  if (harmony == \"Complementary\") {\n    cr = cr - 1;\n  }\n  if (harmony == \"Monochromatic\") {\n    cr = cr - 2;\n  }\n  crows = [];\n  for (let i = 0; i < cr; i++) {\n    crows.push(rindex[i]);\n  }\n  crows.sort((a, b) => a - b);\n  h1 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  h2 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  h3 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  h4 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  h5 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  h6 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  while (abs(((h2 + 20) % 360) - ((h1 + 20) % 360)) < ((360 - wh1) + wh2) \/ 2) {\n    h2 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  }\n  while (abs(((h3 + 20) % 360) - ((h2 + 20) % 360)) < ((360 - wh1) + wh2) \/ 2) {\n    h3 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  }\n  while (abs(((h4 + 20) % 360) - ((h3 + 20) % 360)) < ((360 - wh1) + wh2) \/ 2) {\n    h4 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  }\n  while (abs(((h5 + 20) % 360) - ((h4 + 20) % 360)) < ((360 - wh1) + wh2) \/ 2) {\n    h5 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  }\n  while (abs(((h6 + 20) % 360) - ((h5 + 20) % 360)) < ((360 - wh1) + wh2) \/ 2) {\n    h6 = (R.random_int(0, (360 - wh1) + wh2) + wh1) % 360;\n  }\n  if (R.random_bool(0.5)) {\n    h1 = (h1 + 180) % 360;\n    h2 = (h2 + 180) % 360;\n  }\n  if (harmony == \"Anything Goes\") {\n    if (R.random_bool(0.5)) {\n      h1 = (h1 + 180) % 360;\n    }\n    if (R.random_bool(0.5)) {\n      h2 = (h2 + 180) % 360;\n    }\n    if (R.random_bool(0.5)) {\n      h3 = (h3 + 180) % 360;\n    }\n    if (R.random_bool(0.5)) {\n      h4 = (h4 + 180) % 360;\n    }\n    if (R.random_bool(0.5)) {\n      h5 = (h5 + 180) % 360;\n    }\n    if (R.random_bool(0.5)) {\n      h6 = (h6 + 180) % 360;\n    }\n  }\n  p1 = color(h1, s, b);\n  p2 = color(h2, s, b);\n  p3 = color(h3, s, b);\n  p4 = color(h4, s, b);\n  p5 = color(h5, s, b);\n  p6 = color(h6, s, b);\n  if (harmony == \"Complementary\") {\n    p2 = color((h1 + 180) % 360, s, b);\n  }\n  anything = [p1, p2, p3, p4, p5, p6];\n}\n\nfunction draw() {\n  background(0, 0, 100);\n  noFill();\n  stroke(0, 0, 15);\n  strokeWeight(u \/ 10);\n  for (let i = 0; i < rows.length; i++) {\n    divider = dividers[i];\n    if (crows.includes(i)) {\n      if (cr > 1) {\n        colorMode(RGB);\n        ftemp = lerpColor(p1, p2, crows.indexOf(i) \/ (cr - 1));\n        colorMode(HSB);\n        f = color(hue(ftemp), s, b);\n        if (harmony == \"Monochromatic\") {\n          f = p1;\n        }\n        if (harmony == \"Complementary\" && i % 2 == 1) {\n          f = p1;\n        }\n        if (harmony == \"Complementary\" && i % 2 == 0) {\n          f = p2;\n        }\n        if (harmony == \"Complementary\" && crows.indexOf(i) == 0) {\n          f = p1;\n        }\n        if (harmony == \"Complementary\" && crows.indexOf(i) == cr - 1) {\n          f = p2;\n        }\n        if (harmony == \"Anything Goes\") {\n          f = anything[c % anything.length];\n          c++;\n        }\n      } else {\n        f = p1;\n      }\n      fill(f);\n    }\n    for (let j = 0; j < 3 * grid \/ (4 * divider); j++) {\n      rect((j * u * divider) + margin, y * u + margin, u * divider, rows[i] * u);\n    }\n    y = y + rows[i];\n    noFill();\n  }\n  noLoop();\n}\n\nfunction scramble(arr) {\n  let newarr = [];\n  let length = arr.length;\n  for (let i = 0; i < length; i++) {\n    let choice = R.random_int(0, arr.length - 1);\n    newarr.push(arr[choice]);\n    arr.splice(choice, 1);\n  }\n  return (newarr);\n}\n\nfunction keyTyped() {\n  if (key === 's') {\n    let d = 2;\n    pixelDensity(d);\n    w = 24 * 300\/d;\n    h = 30 * 300\/d;\n    u = h \/ (grid + 16);\n    margin = h \/ 10;\n    y = 0;\n    c = 0;\n    resizeCanvas(w, h, true);\n    redraw();\n    saveCanvas(tokenId, 'png');\n    setup();\n    redraw();\n  }\n}\n\nclass Random {\n  constructor() {\n    this.useA = false;\n    let sfc32 = function(uint128Hex) {\n      let a = parseInt(uint128Hex.substr(0, 8), 16);\n      let b = parseInt(uint128Hex.substr(8, 8), 16);\n      let c = parseInt(uint128Hex.substr(16, 8), 16);\n      let d = parseInt(uint128Hex.substr(24, 8), 16);\n      return function() {\n        a |= 0;\n        b |= 0;\n        c |= 0;\n        d |= 0;\n        let t = (((a + b) | 0) + d) | 0;\n        d = (d + 1) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        c = (c + t) | 0;\n        return (t >>> 0) \/ 4294967296;\n      };\n    };\n    this.prngA = new sfc32(tokenData.substr(2, 32));\n    this.prngB = new sfc32(tokenData.substr(34, 32));\n    for (let i = 0; i < 1e6; i += 2) {\n      this.prngA();\n      this.prngB();\n    }\n  }\n  random_dec() {\n    this.useA = !this.useA;\n    return this.useA ? this.prngA() : this.prngB();\n  }\n  random_num(a, b) {\n    return a + (b - a) * this.random_dec();\n  }\n  random_int(a, b) {\n    return Math.floor(this.random_num(a, b + 1));\n  }\n  random_bool(p) {\n    return this.random_dec() < p;\n  }\n  random_choice(list) {\n    return list[this.random_int(0, list.length - 1)];\n  }\n}",
  "tokens" : [
    {
      "hash" : "0x30fc362168356d0ef8e0da7a702655c87b8b34ec57f28f410f226a50f23db734",
      "id" : "63000043"
    },
    {
      "hash" : "0xc0f851d869aea70fc9f6f6163f7dd0121fb34da8df040e68d690b52db2851423",
      "id" : "63000063"
    },
    {
      "hash" : "0x40df0c1ccd44ad667a7ecd4b0b479b2435048ab2161812054db47853a50a8b47",
      "id" : "63000072"
    },
    {
      "hash" : "0x499d15d4b04501d3143f903f33e4acec98af903d591bc2d2698522815568888b",
      "id" : "63000062"
    },
    {
      "hash" : "0x3f264bffbf2f2dfe9ec7b90b54c5fc196652ea555e2060dd0408ca005337c656",
      "id" : "63000053"
    },
    {
      "hash" : "0x36e99c9a1209851c8c6b27b501d1ff4d0ecb8fd2a97c78125f3ad7a59d7fc955",
      "id" : "63000077"
    },
    {
      "hash" : "0xd4363fe76b19838a2a9eeb907240aaa15b16d2b862db9c5b870d3a8482291160",
      "id" : "63000051"
    },
    {
      "hash" : "0x2c6f1b45ffda7de77f3a04aa383e8cc64c22df4620decfd938939a261e891b9f",
      "id" : "63000019"
    },
    {
      "hash" : "0xf1febfafe47e9ee5121eed5e8f1cfe5bdf222dffaaeba99ee7edc5c8ff342075",
      "id" : "63000068"
    },
    {
      "hash" : "0x2c1a96b4e5351b90328e3f41d831b372e110f759ed848ea0f3b2698a9c678d8f",
      "id" : "63000020"
    },
    {
      "hash" : "0x970abf55c1e7b56322dc3fe29befcdf3704ae2b99609e9d06c3d6b512f199703",
      "id" : "63000082"
    },
    {
      "hash" : "0xae50396811d502498159981a988441697c43b58ba1a87ab71b84355c101042a9",
      "id" : "63000028"
    },
    {
      "hash" : "0xc87965aa80568d23e2c16b733bec0f061a7fc7df75c5e9e27173873f069e9713",
      "id" : "63000031"
    },
    {
      "hash" : "0xfad4cd52b3050f66f67ad07869a34d3ecb452e7402fde6fbed5a19d84b0379c6",
      "id" : "63000071"
    },
    {
      "hash" : "0x5afc31f7c2632194bbdc9f96d7e40d2d3684eb8af4f2b3f1c76fb2a5fe3f50a0",
      "id" : "63000052"
    },
    {
      "hash" : "0x812ec5d376707b3e4c19fd330285013f49644b2baed3b52c8e02b10bb67d3bf1",
      "id" : "63000075"
    },
    {
      "hash" : "0x9ac7d8ad1605114400824cd4429ac65c494b06829c7145d605f4b6c698523b50",
      "id" : "63000039"
    },
    {
      "hash" : "0x5c00381245b2bb2bebc0b8f3e2c1da8638b02601d25dbb331a8d4052333ae530",
      "id" : "63000055"
    },
    {
      "hash" : "0x8636dce86e771611f6888cfe4725a8da2d7c860e1a41ea60a8e4ec5de45129bc",
      "id" : "63000017"
    },
    {
      "hash" : "0x23a4a95a208cf8a90d74c254193485e2113836a142f50163777f4f70f92a2416",
      "id" : "63000087"
    },
    {
      "hash" : "0x6d2dae8ebc5a3cba53ef299bcfeb67d52b54c682c1ae6f363bd6912de985e152",
      "id" : "63000069"
    },
    {
      "hash" : "0x3d4a1681d917706d64e0cc5ec8d7b974942f4ab4940d49ba22f4972ef74cbf1d",
      "id" : "63000025"
    },
    {
      "hash" : "0x422eb0ea124e254ae54fb5cacf0a7200d0aa8aed8a81559c8579868b06e3d4da",
      "id" : "63000008"
    },
    {
      "hash" : "0x421cd3c64f74f9d2f9ae4c19c5f9a7029396512fb53cd807848fdd25607c0889",
      "id" : "63000006"
    },
    {
      "hash" : "0x0b5024961b544836c15d4d30f02e4302ccba11b8f8719f186a8cb4b5c60a0d6f",
      "id" : "63000021"
    },
    {
      "hash" : "0x6a701581f8ad2f5daafa68a5c3ee1b4de25d7eab1acd5b1fb4e4c09864ec78dd",
      "id" : "63000010"
    },
    {
      "hash" : "0xc16445127ae7a449bfa497c130378500b597247fac23b60a607a141035c57ca7",
      "id" : "63000083"
    },
    {
      "hash" : "0x8c3df08b06e7228fb528fe3f6afe3adc1862dab692d8692a3a9cffd8d2cd514e",
      "id" : "63000060"
    },
    {
      "hash" : "0x7cbd726ae6a4688d069b73f038dc8033d3b8008fc7a2d4048ee473afe9378b82",
      "id" : "63000009"
    },
    {
      "hash" : "0xbe6b94ab91b2fe6e84f79b58e0bfd80d60916a8ef1ffb8f4c93098ded64f9a2b",
      "id" : "63000065"
    },
    {
      "hash" : "0x6573d9a05163cc5f9f5619db68cf3eeaa3c9120c2bde1a622a08ada5eeb24bf6",
      "id" : "63000034"
    },
    {
      "hash" : "0x3766e2b721c34bae05b6120b4b294c52abeca7c9fbe4b7f8fcb03129b7bc6eea",
      "id" : "63000033"
    },
    {
      "hash" : "0x9cffd90d99b4809a8e4e2fd345446586acfaec756b0ed3a9ac0c253dcf2695b8",
      "id" : "63000064"
    },
    {
      "hash" : "0x73c0b6bd072173d42b24069984041585cbead3da451610f4fe01843b75f94937",
      "id" : "63000038"
    },
    {
      "hash" : "0x86b7b416ff257592d9892a1a61502fa15062b7ee0a8990b73a0d2eda10de94de",
      "id" : "63000047"
    },
    {
      "hash" : "0x8408b7c6ab16c7d8da99f04ba29270e5ba3a631bc5e09c07d66f99e71ab31aa1",
      "id" : "63000029"
    },
    {
      "hash" : "0x54f3d8ee0e6d0c778a9f1ecfa6b550a22e01320bc4510d8ca09f129041fa8cb1",
      "id" : "63000080"
    },
    {
      "hash" : "0xf79f7ead5798e202ec53007f3abda6eee33d8113f646ee997b708462e30a641c",
      "id" : "63000067"
    },
    {
      "hash" : "0x4fb8d90635bbaeab6595c66757a1cf5d76ad45f23ae9c2f7fc88007c5583b159",
      "id" : "63000016"
    },
    {
      "hash" : "0x5aa53f4a0b833331cb6c83eee719677a470b5799edd7a71f52a9035246d4e84e",
      "id" : "63000011"
    },
    {
      "hash" : "0x6b3f8d61446282498ae8ec925e86b8c8e740f64b7517958870135d45795b6838",
      "id" : "63000041"
    },
    {
      "hash" : "0xa2bad708950955dc2a0d08769e618db039d464d797ed27b0e69906df6e6b638a",
      "id" : "63000007"
    },
    {
      "hash" : "0xb9c09611766c41dec4edeeca98184afc15a393d5ba587a4d6e4ef7991c5466cd",
      "id" : "63000049"
    },
    {
      "hash" : "0x1e0a7ce8c2f0896cc44a6bc0b1b354fa91d4f4baa8a236026ef2455a326c1fd5",
      "id" : "63000081"
    },
    {
      "hash" : "0x1e2d76d41d666d4c490e219d925e101fbd4ecd7cad9b125086b3afd3bfacfd13",
      "id" : "63000076"
    },
    {
      "hash" : "0x3516e36ae490d4a75bac5e184703d2c9e0a3027b0b816a07d27bb41255dc5df7",
      "id" : "63000018"
    },
    {
      "hash" : "0xaa979d4bf40bf136a29e86d57aba82c4eb1653e931b15d0020b6969ee4003a26",
      "id" : "63000070"
    },
    {
      "hash" : "0x80be5d958956d0e3be22bc847ad255b5ac8904bf3149de0fe18ebf0502b7f68c",
      "id" : "63000056"
    },
    {
      "hash" : "0x32dfaead4176351332d6e12a3286f0e1b1251a1adaf008e4fc0b93c3fb4dd82a",
      "id" : "63000074"
    },
    {
      "hash" : "0x79ae2e21a8b35196829746dd01eb955b26efcbe44340dd70ba9f0247a77c2ec7",
      "id" : "63000014"
    },
    {
      "hash" : "0xf249ae95887a031e4328253c3a31257865f3f96862f28e18834ce1cf0cf6b444",
      "id" : "63000079"
    },
    {
      "hash" : "0x366799573581dfe43c01b9e3086f94085b8a05468eeb39e133fcef3057d2c665",
      "id" : "63000066"
    },
    {
      "hash" : "0x018d611b8d3b81cd6825ea747bec307b471856c5dbf40b926bdfb0f2476dc7d7",
      "id" : "63000048"
    },
    {
      "hash" : "0x466ea6b0d86e825028c2d111fd48e278f9284659b57933f337d12cfcba67b904",
      "id" : "63000084"
    },
    {
      "hash" : "0x09d356c6cf7cbf7c1a310202a6903d90d28d7fdad90cea49bd2a6154428c8c62",
      "id" : "63000023"
    },
    {
      "hash" : "0x74bb9e39130794ae8bf8a7ec7b6bb69f7166cdf5491b53c72b70586e14d2ef8c",
      "id" : "63000042"
    },
    {
      "hash" : "0xe8154c8fefad1aeba26e2f03450aded9785cf90e4c10d596435441f657698669",
      "id" : "63000061"
    },
    {
      "hash" : "0x3a294eaf8aea6d48f5f4b2f31bf71aa034287ff58609375e31e9045b993843b4",
      "id" : "63000054"
    },
    {
      "hash" : "0xf532cf3c5e5c00ead60369d9873008096ec4b7011baffd643e32f29c56bb14a4",
      "id" : "63000044"
    },
    {
      "hash" : "0x4dc8339937d219f700a3e541974be1044b893a76eccfa6453771c88506d2a2fd",
      "id" : "63000027"
    },
    {
      "hash" : "0x2d5ba16c22e9f3544274ac801f0ad83564b5fa83d829903421e64204e845a76a",
      "id" : "63000088"
    },
    {
      "hash" : "0x212ef2e6d881551f5238bb4ef7364520ce8decacc8bbea225952dbcf0d940d3f",
      "id" : "63000002"
    },
    {
      "hash" : "0x44a12577be0e15e149401e3fc78e7c2f17fc40761d28860fe06126518c06baf1",
      "id" : "63000050"
    },
    {
      "hash" : "0xa041aed0a9a2883252ad24b51f48420c3b2e180ebda8b089e973b7dd3a0a5baa",
      "id" : "63000022"
    },
    {
      "hash" : "0x70738d6031086cfa5132df6ba6fd036f914a40c387fcd5e18300c7f322c469ba",
      "id" : "63000005"
    },
    {
      "hash" : "0xf4dda218439ea19202a5aff639106dbb7dbc52cfc2db65d015471f328d6826da",
      "id" : "63000000"
    },
    {
      "hash" : "0x2f4aa5e105fe75cc3db7ef23ac11a4d8ec9564b58b5efc1e4c503e101dd07d4c",
      "id" : "63000024"
    },
    {
      "hash" : "0x7c2150bf858bb5f4d11189f8c9268ad4f6f7a586a4ed07ee03ed0f80a5df9f80",
      "id" : "63000001"
    },
    {
      "hash" : "0xebc5874ec94e36bac457bc24fa86c5894411d8652d2591624609cfd0fc861f31",
      "id" : "63000003"
    },
    {
      "hash" : "0xef721bd8974febe33767785fb4137c7e5b6359c95437b6fedce171284367aea0",
      "id" : "63000015"
    },
    {
      "hash" : "0x71a7f4f9a353f1c0dd3adb0a3a993901421275b8478dd615c90352b8af544e60",
      "id" : "63000078"
    },
    {
      "hash" : "0x74afd7f6e4fc6a575ddea64d5b968d115fff5245f3544724fd593f16395de7ca",
      "id" : "63000086"
    },
    {
      "hash" : "0x225bfc3590f0507dfdab1568a669a0e732d430c73b3bd179819e33cd1f083041",
      "id" : "63000030"
    },
    {
      "hash" : "0x73e9e8b264e90b64a06eef72f24ffb7c7aca1e6abf3f84fdf0fdfc50d82d8863",
      "id" : "63000026"
    },
    {
      "hash" : "0xdc64b3df1ab65f8daa2dddc3945bc07e87cb67af9916be47bb443a233784645b",
      "id" : "63000032"
    },
    {
      "hash" : "0x1b8a4577d35a9e1d4c94b7f5f8cee8512e2e45b84b97f95377ac1cd231bbffbe",
      "id" : "63000037"
    },
    {
      "hash" : "0x8b6602f5ac2c81f33e4a8b36dd7348629acebfda5ec948d58925b1fb9880e6a8",
      "id" : "63000035"
    },
    {
      "hash" : "0x1fe774c0e8891a9698161ea9cd72f45522346fdca4183c64c9e213f1ee828836",
      "id" : "63000004"
    },
    {
      "hash" : "0x313a9b3cc73b925a8d71436919efb50b973605a98529b1a3e5192cd6f6f156d6",
      "id" : "63000073"
    },
    {
      "hash" : "0xc861dfe0fc5c1d3479e0047a569631643e909253c3c288427c73ad8c292fee1c",
      "id" : "63000046"
    },
    {
      "hash" : "0x9cf55c8fad21a7c85165f5fcdab4da6a59693bb38df7b178641a601d78fd3532",
      "id" : "63000059"
    },
    {
      "hash" : "0xc745053fec4ba84dd22d407c709d28c4630ab5f07862de6a615d77bd363b4b19",
      "id" : "63000058"
    },
    {
      "hash" : "0xd6986085e83b01ac1aeedadd00d48aa83ac148d147193868803c45552a08773d",
      "id" : "63000045"
    },
    {
      "hash" : "0xf6ed2e35835304fd619057f74993c3f1bd81325cd1b735c9332b49eb6fa3373f",
      "id" : "63000085"
    },
    {
      "hash" : "0x1605977d2ff469da92bb67c98b76caf10413b2f38f7e63d84cda73c94450c058",
      "id" : "63000036"
    },
    {
      "hash" : "0x45cc3fa71a7d71ed4dc1ac94ce38411174377f2bf13c7d6c04bf02bf7430d9cb",
      "id" : "63000012"
    },
    {
      "hash" : "0xc381d49c2a54a0de1eb0a8f5f2cac403a1dbbe27ea848d1f146578cb653f1cf3",
      "id" : "63000057"
    },
    {
      "hash" : "0x0ec3dad883d9bfaf3cc4a9da30d7064a554c7c7882c8ba822592103a9ccdf483",
      "id" : "63000013"
    },
    {
      "hash" : "0x6ea92c2f1e705f9f5f3cc9d931c3051b81bd7b3d50a861a95895f5c0c4eca4d4",
      "id" : "63000040"
    }
  ]
}