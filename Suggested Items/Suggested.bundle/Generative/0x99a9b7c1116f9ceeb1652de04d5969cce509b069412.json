{
  "contractAddress" : "0x99a9b7c1116f9ceeb1652de04d5969cce509b069",
  "kind" : "three",
  "projectId" : "412",
  "script" : "document.body.innerHTML += '<div class=\"tggl\"><span>2d <\/span><input type=\"checkbox\" id=\"tt\" onclick=\"javascript:window.main.persp=1-window.main.persp\"><label for=\"tt\"><i><\/i><\/label><span> 3d<\/span><\/div>'\nlet tokenHash = tokenData.hash,_=THREE,de=b=>{var f,o,a,e={},d=b.split(\"\"),c=f=d[0],g=[c],h=o=256;for(b=1;b<d.length;b++)a=d[b].charCodeAt(0),a=h>a?d[b]:e[a]?e[a]:f+c,g.push(a),c=a.charAt(0),e[o]=f+c,o++,f=a;return g.join(\"\")}\nclass Rand{constructor(t){this.ua=0;let sfc32=function(u){let a=parseInt(u.substr(0,8),16),b=parseInt(u.substr(8,8),16),c=parseInt(u.substr(16,8),16),d=parseInt(u.substr(24,8),16);return _=>{;a|=0;b|=0;c|=0;d|=0;let t=(((a+b)|0)+d)|0;d=(d+1)|0;a=b^(b>>>9);b=(c+(c<<3))|0;c=(c<<21)|(c>>>11);c=(c+t)|0;return (t>>>0)\/4294967296;};};this.pa=new sfc32(t.substr(2,32));this.pb=new sfc32(t.substr(34,32));for(let i=0;i<1e6;i+=2){this.pa();this.pb();};};r(){this.ua=!this.ua;return this.ua?this.pa():this.pb();};}\nlet rn = new Rand(tokenHash),inv = (rn.r() < 0.5),colorSchemes=['ùùùäåñÕ\\'S#Jßc\u001c\\'_ä?ñ\\'a','\"+3@ÌÿÌÿÌÿÌÿÌÿÌÿÌÿ','(03¦\u0001»þÍ\":Û»»»»»»»','-7CÿBBt¯hÿ­)3\u0014æ#××ááà','\u001b\u001d\u001e\u001b\u001d\u001es%ú#â\\`ÔßÐ\u0010ÿÐ¨C»»»','\u0011\u0012\u0013222Â(2Ä=àÆOC¥ÕWµÄ=îîî','..5SNNSNSNNNÿÿÿ','\u001d\u0019\b¶L|\u0016Ó½&ak°Zl%ÊÂ','ûñÇûñÇÌ$\u001d\u001a×!E±bhj|od','..5SNNSNSNNNÿÿÿ','\u001c\u001f\\'OOO¯KW¯ÓåÀy}¤¤y¦¥îíî','%#O%#OpPP`´ß¯UUÿðÃÐÓp','$&&¢hj¥j£jk£jq£k¥£¢','+\u0019@%ÿÿÿÿÿÿÿ','*!\u001cÌ\u001a\u001cðå:fÿÅek\u0006Ó×Ï','$\u001f3\/)BÿH¶æÀ®ÿïaUÂÿßøøò','333MMMÿ++ûðæÍ?ÿÞ­ÿ  õÞ³','\u0015\u0014\u001b\u0011\u000f\u0018ÿggaÿÊÿÊ¢wÿ¢wÿaÿÊíìî','\u0012\u001b!\u0012\u001c!äGT½÷½QTÀ·~¸P¥¤ÿÿÿ','(03¦\u0001»þÍ\":Û»»»»»»»','(((\u001d\u001d\u001dÅ\u0015\/ÉÐ\\\\ÿÂK³ÞïÓ¹sÎôîîî','JE>000á2\u001aj°\u0017ÿÀ\u0005rÏìHòòò*§ç','ÿÿÿµ@{{µ@µ{@@{µ{@µ@µ{øøø','(*6(*6ÿ\\\\WZ÷óùWÇÿÿjÁíþññð','+$@5ÿÓÿÓÿÓÿÓÿÓÿÓÿÓ','\u001a\u001a\u001a\u001a\u001a\u001aô_à$ú\u0019eÿô_XÑëÄÅµ','\u0012\u0012\u0012âss¹yÿº{¾ÜáÀúÞÞÞ','$$$ÇVF³;Ð°<r³ÌÈ Ñ!°°°','\u001b\u001c\u001d$%&øQ\u001bVWGúw\u001d,p·ð.O<¡¦­­­','\u001b\u001d\u001e\u001b\u001d\u001es%ú#â`ÔßÐ\u0010ÿÐ¨C»»»','\u001e\u001e\u001e495Ï?a{·[é³*LÔ¥Ä8­úúö','B@C.46ücB@CüéOûkuP{4ââÿÿÿ'],colors=[];\ncolorSchemes.forEach(cs=>{let scheme=cs.match(\/.{1,3}\/g),tm=[];for(let i=0;i<scheme.length;i++){let t=[];scheme[i].split('').forEach(s=>t.push(s.charCodeAt(0)));tm.push(t);if((i+1)%9==0){colors.push(tm);tm=[]}}});\nif( rn.r() > 0.5 ) {\n    colors = []\n    colors.push([[0,255,0],[0,255,0],[128,128,128],[0,255,0],[128,128,128],[255,0,64],[0,0,255],[0,0,0],[255,255,0]])\n    colors.push([[255,0,0],[255,0,0],[255,255,255],[0,255,0],[255,255,255],[0,0,255],[0,0,255],[0,0,0],[255,255,0]])\n    colors.push([[0,255,255],[255,0,0],[0,255,0],[0,255,0],[255,255,255],[0,0,255],[0,0,255],[0,255,0],[255,255,0]])\n    colors.push([[0,0,0],[0,0,0],[0,0,255],[0,255,0],[255,255,255],[0,255,0],[255,0,255],[255,255,255],[0,0,0]])\n    colors.push([[255,255,255],[255,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]])\n    colors.push([[255,255,255],[255,255,255],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]])\n    colors.push([[0,0,0],[255,255,255],[255,255,255],[255,255,255],[0,0,0],[128,128,128],[255,255,255],[255,255,255],[255,255,255]])\n    colors.push([[255,255,255],[0,0,255],[0,0,0],[255,255,255],[255,0,0],[128,128,128],[255,255,255],[255,255,255],[255,255,255]])\n    colors.push([[255,255,255],[255,255,255],[0,0,0],[255,255,255],[0,0,0],[128,128,128],[255,255,255],[255,255,255],[255,255,255]])\n    colors.push([[0,0,0],[255,255,255],[255,0,255],[255,255,255],[0,0,0],[255,255,255],[0,0,0],[0,0,0],[255,255,255]])\n    colors.push([[0,0,0],[255,255,255],[255,255,0],[255,255,255],[0,0,0],[255,255,255],[0,0,0],[0,0,0],[255,255,255]])\n    colors.push([[0,0,0],[255,255,255],[0,255,0],[255,255,255],[0,0,0],[255,255,255],[0,0,0],[0,0,0],[255,255,255]])\n}\nlet colorIndex = Math.floor(rn.r()*colors.length)\nwindow.pal = colors[colorIndex]\nlet renderer = new _.WebGLRenderer(),scene = new _.Scene(), camera = new _.OrthographicCamera(),ww = innerWidth, wh = innerHeight,passthrough='varying vec2 vUv;void main(){vUv=uv;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);}';\ndocument.head.appendChild(document.createElement('style')).innerText=`html,body,canvas{width:100%;height:100%;padding:0;margin:0;position:fixed;overflow:hidden;}.tggl{position:fixed;z-index:10;font-family:Helvetica, sans-serif;color:#ffffff;font-size:10px;left:50%;bottom:10px;}label{display:inline-block;width:28px;height:16px;border-radius:100px;border:solid 1px #ffffff;top:3px;position:relative;}input{display:none;}i{height:14px;width:14px;background: #ffffff;display: inline-block;border-radius:100px;margin-left:2px;margin-top:1px;}input:checked+label>i {margin-left:12px;}`;\nlet ccv=document.createElement('canvas')\nlet aes = 1 + Math.floor(10 * rn.r());\nlet esrng = 10 + 300 * rn.r()\nif(rn.r()>.99){aes = 25;esrng=300;}\nlet curl = 0.3, dens = .998;\nlet cr=(r,o,s,c)=>{r.setRenderTarget(o.w);r.render(s,c);r.setRenderTarget(r.getRenderTarget());o.swap()}\nvar un='undefined',rnd=_=>{return rn.r()},zeros=n=>{return typeof n===un||isNaN(n)?[]:typeof ArrayBuffer===un?new Array(n).fill(0):new Float64Array(n)},randf=(a,b)=>{return rnd()*(b-a)+a;},randi=(a,b)=>{return Math.floor(rnd()*(b-a)+a);}\nclass GPUComputationRenderer{constructor(x,y,r){let v=[],a=0,s=new _.Scene(),c=new _.Camera(),p={T:{value:0}},C=()=>{return new _.WebGLRenderTarget(x,y,{wrapS:1001,wrapT:1001,minFilter:1003,magFilter:1003,format:1023,type:1015,depthBuffer:0})},S=(c,u)=>{let m=new _.ShaderMaterial({uniforms:u||{},vertexShader:'void main(){gl_Position=vec4(position,1.);}',fragmentShader:c});m.defines.rr='vec2('+x+','+y+')';return m;},M=S('uniform sampler2D T;void main(){vec2 uv=gl_FragCoord.xy\/rr.xy;gl_FragColor=texture2D(T,uv);}',p),m=new _.Mesh(new _.PlaneGeometry(2,2),M),T=r.setRenderTarget,D=(n,o)=>{let t=r.getRenderTarget();m.material=n;T(o);r.render(s,c);m.material=M;T(t);},R=(i,o)=>{p.T.value=i;D(M,o);};c.position.z=1;s.add(m);this.v=(n,c,t)=>{let w={n:n,i:t,m:S(c),t:[],minFilter:1003,magFilter:1003};v.push(w);return w;};this.i=()=>{v.forEach(v=>{v.t=[C(),C()];R(v.i,v.t[0]);R(v.i,v.t[1]);v.d.forEach(d=>{v.m.uniforms[d.n]={value:0};v.m.fragmentShader='uniform sampler2D '+d.n+';\\n'+v.m.fragmentShader;});});a=0;};this.c=()=>{let c=a,n=a===0?1:0;v.forEach(v=>{let u=v.m.uniforms;v.d.forEach(d=>{u[d.n].value=d.t[c].texture;});D(v.m,v.t[n])});a=n};this.t=()=>{return new _.DataTexture(new Float32Array(x*y*4),x,y,1023,1015)};this.g=(v)=>{return v.t[a]}}};\nclass Text extends _.CanvasTexture{constructor(){super(ccv);ccv.width=2048;ccv.height=1024;let strs=[`..\/$ăĄĀĂĄĈāĈąĊċăčċĆĎďćĀĖĒ$ėĖĕĘčĚč\\nč__Āă|.ăģĪ\/ħĩĤĨ$ĭ$ĪģĬİģĥıķĴĶďĚĲğŀ.ĲĲęěĄ\\nł\\\\ĵłėŊİōĖŏĦİŁŕĿŗŎŗńİľćăŉřŒŝľŃŤĄĽĉĀŅĉŬņŦťţűūśŐŕăĕŠőŴĮ\/ŲĳįŔŽſĸŶƃżůſŖľŜľĄĲšűƂƉƈĀ\\\\ƆƔŰņƗƓƋƙŻƚƈĲƗĨƚšŧ$ũĎłƍēŮŸƯƓƫƨŔƨũ.\\\\žƦƸĴĵŃƽī|ƾƿ_ĬǀŌǇžǂǉǋǀǆǉƼƽǊǃŒƾ`,`.Ā.__āĂăĀăćąĉĈČċĊĄąĂĒĆĕĆĄČ\\nā\/Ā]ĀĜĂ]|ą\\\\ěĈĢĤĦġģģāĬąĭıĭ.ĳ|Ě.ĠĹĀ[ĄĭDĀ)ĸĻĽĀoŀł.ļĴŋĮŌĀıŏģđēĶňĠĳīąĜŘ_ĨİŜĨ|ČĬţŏőĀ\\\\_ŗ\\nĠ.ũŎŊŘĥĳűĀOŧŃŎŸĮĭ:Żĵ\\nĥşĒ|ŘŮƆƅƄƈƋƊƍŦŏĚũĉƅĉăƔ_|ũƗƓŢƕƛƖƝƜƕƘŮă,ƘơƩ`,`.._ĂāăĂ_ĄćĆĈāĀĀćĎčĉďă\\n.\/Ą|ĘČ\\\\Ěć)Ěę.ęģĢĥġ\\\\ėĢ\\nę(Ăę_|ġĖāıěĴģĮĢİĺĤ|Ĩģĕ\\\\Ć|Ńİ_łĮĆ\/ŅŌĂň_\/ńġŒ`,`.Ā_ĂăĄą_āĆăĈĆĀĈč.ĂċćĐĂ\\nĀ\/ĔĂĘĄěć\\\\ĝĚĔ.)Ġ_ĘĘė.ĨĪĬħĀ|Ĩ\/ĖĮĩġħĦĬĶĢĹĸĴĭčĮŁ|Ľ.\\nķĶăě,ĐŇĽń\/ŉĪőŐňŁĩĨ\\n\\\\ĜąŐĘŃŔŉŜŢśĜŚšıĦ`,`.#āĂĀĂăąā.ĄćĊăČĆ#ĉđĄĒĉĈđĈčĕĈ\\nĖĒĝėĐĚēĔĝĘġĞħĠĔģĢąĚěğįĥċĎĠĮĵĢĤĩĹĭĐĮİĻĬĪĽīĳłļŃĨŊĖŌĐ\\nĎľćőĪŒőķŕŐŖŗĴıĄ`];this.str = de(strs[Math.floor(rn.r()*strs.length)]).replaceAll('.',' ');this.ln=this.str.split('\\n')[0].length}fill(v){let n=(!v)?1:4;return `rgba(${pal[n][0]},${pal[n][1]},${pal[n][2]},1)`;}update(v){let sp = new Array(this.str.split('\\n')[0].length).fill('#').join(''),ctx=ccv.getContext('2d'),lns=this.str.split('\\n');lns.push('','-','Training ~~~> '+(v?'True':'False'),sp,sp,sp,sp,sp);ctx.clearRect(0,0,ccv.width,ccv.height);ctx.fillStyle=this.fill(v);ctx.fillRect(0,0,ccv.width,ccv.height);ctx.fillStyle=this.fill(!v);ctx.font=70+\"px courier,monospace\";lns.forEach((l,i)=>{ctx.fillText(l,80,40+((2+i)*72));});}}\nclass Window extends _.Mesh{constructor(id,tt,ty,x,y,w=(.2+rn.r()*.4)*ww,h=(.2+rn.r()*.4)*wh){super();let t=this;Object.assign(t,{zid:id,drg:0,rsx:0,rsy:0});t.d=(id==0)?new _.Vector2(dims.x*1.01,dims.y*1.01):new _.Vector2(Math.min(w,h),Math.min(w,h));t.c=(id==0)?new _.Vector2(200*rn.r()-100,200*rn.r()-100):new _.Vector2((-ww+t.d.x)\/2+rn.r()*(ww-t.d.x),(-wh+t.d.y)\/2+rn.r()*(wh-t.d.y));t.p=t.position;t.s=t.scale;t.p.set(t.c.x,t.c.y,t.zid);t.s.set(t.d.x,t.d.y,1);t.geometry=new _.PlaneBufferGeometry(1,1);t.material=new _.ShaderMaterial({uniforms:{dims:{value:t.d},tex:{value:tt},tsz:{value:new _.Vector2(tt.image.width,tt.image.height)},wp:{value:t.p},wr:{value:t.s},inv:{value:(inv?1:0)},ch:{value:1},sd:{value:dims},type:{value:ty}},vertexShader:passthrough,fragmentShader:de('varying vec2ćUv;uniformćĉċdimsďđēĕ sampler2D texĞĒĔĖĈĊĬszİĠĳĉ3 wpĹĲėcĽwrŁġĴċsdňĖfloat ĄĎĐıġbool chŎ ŐŒŔtype;Ťœ roĐdBox(Ńċcenĭr,ŷĢizežŬŔr ){Ůeturn ħąthŶmaŵ absŶŹŻĨƈ-ƀƂ +Ůž0.0ƈƭƣŇ }ƅşircħŶŊ pƄőŭƇƉƋƍƏƑźgƔŶpƮŮ;ƱƳĄnĨųrdĨMaskŶƳĚstƽťľidƔƈƊrƌƎƐƷĤpŶǝŔƧwǣƔƩƫž1ƫǋǬĥ(ǰǶ0ǸǺ)Ǎ}voǣ ƗĄ(Ɖƺsč =Čv *ľr.xy \/ĢdƦ ŶĿȚȜƣņȥȖ ƪ5ƭȞŌȡŊŶȬƈ;ĒŶŧũȒȓǹƬ)ĢȑȓƹȑȞȲĶzȩȞȨțƭȗ8ȃȱĘȳǷɇ.Ȝȗƪ12ȭȧșȜȿȞȸķɖȪəɛƭƧɆƪȁ 24Ǻɡtɣɗȫ.ɚ5ȿȿ;ĴĽcŰŔȓĭxǃeĪȸĮžȐȕ).rgbɻĘƻȒȔȪĚĜȶfƞhǦɾuʀȊiƙʞǟŃ3ɓ9 ƣŖɥ.8Ƕʩʫnȕɘʮʰʪŕʳʭ8ƈʉmŜƔǞeǮ ʗsɤƣɮƫ1žˆˈɭɯɬpɤɹ ;ʤʔmʢƞɿžʦʨǶ3ˡ)žǼ˄-cƵƷeǉʸɆɚɔˎȦ 13ȃž5˷ɵɬȽɹ˗ɿ˙˛ş˝˟ƪ2Ƕ̇ɵċˤʹǑrǓǕrǗǙƞ˪Ƹʓƣ˯2˱ěˇ˳˵˺˹ȾȂȾȵ˘ȓ˚ʣ̄˟ɵˢ̭ˣ˥lǭŶ˨̖ˬ̘ŷŶ26̜Ĝˏ̠̣ ̢ʽ˻̤˾̧ʡ̪ʟžɼ(̆̈̈̈́ǐǒĔ̑̓ǚƴƶ̗Ǌ̙ɒɭ̼ɬ˲ʸ̀̈́̓̌ȽƭȄ͈̩˜͋ ̬ƪ̮ͱ̰ş̲ǽʪ˩̷͚̹͜ 4ɫˍ̝̿˶́ͦĄ̦̏͆̀̂ʤ͌ļ͎.̉͏̊͒n̎̐ǖǘ͘͹˫˭͝ĊŶͿ̞̽ͣ΄ͥ˺ͨ˾ƲƾŔǰʔůűųƙͼˆȝɭΣζ̛Ƭž͠Ήʟ́͊ʥ͍˴ɔȽ̤ΕΗ͕Ἱ˅iǞχ˾gl_FragCŝĔʍʏʔʤ;ϒϔϖϘϚșaʔͨƣsʿoˁĭ˧ȬǶ5žǯώŔΪ'),transparent:1});   };updatePosition(p){this.c.x+=p.x;this.c.y-=p.y;};updateDimensions(p){let t=this,dx=t.d.x,dy=t.d.y;if(t.rsx){t.d.x+=p.x;t.d.x=Math.max(t.d.x,360);t.c.x+=(t.d.x-dx)\/2;}if(t.rsy){t.d.y+=p.y;t.d.y=Math.max(t.d.y,240);t.c.y-=(t.d.y-dy)\/2;}}step(e){let t=this,ev=t.c.clone().normalize();t.p.x+=((t.c.x+ev.x*1000*e)-t.p.x)*.6;t.p.y+=((t.c.y+ev.y*1000*e)-t.p.y)*.6;t.s.x+=(t.d.x-t.s.x)*.6;t.s.y+=(t.d.y-t.s.y)*.6;t.material.uniforms.dims.value=new _.Vector2(t.s.x,t.s.y);t.p.z=((t.zid+1)*150)-150;t.material.uniforms.wp.value=t.p;t.material.uniforms.wr.value=t.s;}}class Ascii extends _.WebGLRenderTarget{constructor(w,h,r){super(w*devicePixelRatio,h*devicePixelRatio);let u=this,g=\" ▏▎▍▌▋▊▉`◦~+¤▲▜▓═╤╟╩═╫╬╪⁃)10‘™◊∞ .˚◦©o@● '^;-\\zbB ␣▗▘▚▙░☻.:-=+*#▒\".split(''),c=document.createElement('canvas'),s=256,t=8,a=c.getContext('2d');c.width=c.height=s*t;a.font='300px courier,monospace';g.forEach((l,i)=>a.fillText(l,s*(i%t)+10,s*(Math.floor(i\/t))+200));u.w=w;u.h=h;u.renderer=r;u.cp=new GPUComputationRenderer(w,h,r);u.rv = u.cp.v( 'accumulateTex', de('uniform vec2 mouse;ĀĂĄĆĈĊ res;voidČain(){ėċuv=gl_FragCoĄd.xy\/rrĹyĝĉ4 p=textuĚ2D(accumulaŇTň,ī);p.b+=(1.-sčothsŇp(.0,.5,((lengūŷčďe-Ŝ*ĩŤ.,Ěs.ĻƉĹ)Ə\/ŴƏ)\/ƆƑ5)*.2ŞŠ=cŖmůşb,0ƇťŝƤ-=Ƥƚ01;ĮİĲĴolĄƭ;}'),u.cp.t());u.rv.m.uniforms={mouse:{value:new _.Vector2()},res:{value:new _.Vector2(w,h)}};u.rv.d=[u.rv];u.cp.i();u.s=new _.Scene();u.c=new _.OrthographicCamera(-1,1,1,-1,.01,10);u.mat=new _.ShaderMaterial({uniforms:{ms:{value:8*devicePixelRatio},dpr:{value:devicePixelRatio},data:{value:null},res:{value:new _.Vector2(w,h)},seed:{value:new _.Vector3(rn.r(),rn.r(),rn.r())},txt:{value:new _.CanvasTexture(c)},bgc:{value:new _.Vector3(pal[2][0],pal[2][1],pal[2][2])},fgc:{value:new _.Vector3(pal[0][0],pal[0][1],pal[0][2])}},vertexShader:passthrough,fragmentShader:de('varying vec2ćUv;uniform float msďđēĕėęě dprĠĒĔĖsampler2DħěaīĢĮİĲĴĶ txtĻĭćĉċreğĐĬģĈc3 bgcņŐĉœfŖŘĖőœseed;voidĝaĄ(){őċp=gl_FragCoĔd.xy;ĘĚĜmm=teńuŋĶ(ĸta,(ƄĔ(p\/Ğ)\/Ɩr(ŋsƚs))*(1.\/Ĩrƥ.b*8.;Ē(ŢŤƀ>.5)Ƈ=ƞ(Ƈ);ŵŷŹŻoęr=ő4ǁix(ŕc\/255.,Ŝǔǖǘ,ƊƌƎD(ŃtƔmodƘ,ƛƣƜƲ+űǁm\/ƲǚęƗƷſyƱ.ǯǾ).a),Ʃǃ}'),transparent:1,depthWrite:0,depthTest:0});u.mesh=new _.Mesh(new _.PlaneBufferGeometry(w,h),u.mat);u.s.add(u.mesh);u.c.position.z=1;u.c.updateProjectionMatrix()}updatePosition(p){this.rv.m.uniforms.mouse.value=new _.Vector2(p.x\/this.w,1-p.y\/this.h)}step(){let t=this;t.cp.c();t.mesh.material.uniforms.data.value=t.cp.g(t.rv).texture;t.renderer.setRenderTarget(t);t.renderer.render(t.s,t.c);t.renderer.setRenderTarget(null);}}\nclass SlabOpBase{constructor(f,u,g){this.g=g;this.uniforms=u;this.ca=new _.OrthographicCamera(-1,1,1,-1,0,1);this.sc=new _.Scene();this.sc.add(new _.Mesh(new _.PlaneGeometry(2*(g.size.x-2)\/g.size.x,2*(g.size.y-2)\/g.size.y),new _.ShaderMaterial({uniforms:u,fragmentShader:f,depthWrite:0,depthTest:0,blending:0})))};}\nclass AdvectOp extends SlabOpBase{constructor(g){super(de('uniform sampler2D v;ĀĂĄĆĈĊČĎĐaēāăąđec2 gzĞĕġfloatĦsĩĠĆĬĮİtĲĔĴ Ķį dĲvģĥb(Ęċčďŀ,ŃĤ p){Ŏ4 ij;ŗ.xy=ĶĄ(p-.5)+Ťřj.zw=ŚŜ+1.;Ŕ uvŮj\/ħśyŜŴńŀ11=textureď(d,ŷŽ)Žƀŏd2ƄƆƈƊƌDƎƐvūyƓſŎĥd12ƅƇƉƋƍƏƑxwƤyƕƧ2ƪƚƭƝƟƑŬƴƶ a=ŢůƵƋƭn mix(ǌǎƨ1,ƗǓaś),ǐƎƩǔƸ,ǗxǙǗƣ;}voidǋain(ŒƦŐ=gl_FragCoĄdŽ-Ĺ*(ŲŻs)*ƺƜƍv,ǵǷǹǻǽrǿŜŻzƒƔȏǸǺǼĭr=ŔƎs*ņa,ő,0.,Ų)Ǧ'),{v:{},a:{},gz:{},gs:{},ts:{},ds:{}},g)};compute(r,v,a,o){[['v',v.r.texture],['a',a.r.texture],['gz',this.g.size],['gs',1],['ts',1],['ds',dens]].forEach(u=>{this.uniforms[u[0]].value=u[1]});cr(r,o,this.sc,this.ca);}}\nclass JacobiOp extends SlabOpBase{constructor(g){super(de('uniform sampler2D x;ĀĂĄĆĈĊČĎĐbēāăą vec2 gzĞĕġfloat aĪĠĆĭįıbt;void main(){ģĥ uv=gl_FragCoĄd.xy\/ĨŚy,xo=ŉ2(1.ŝzŚ,.0),yţť(0.,ŨŪ.y);ŏőœŕoĮrŤĤ4((textureď(x,Ō-Ţ)Ś+ƋƍƏƑDƓƕv+ƘƚƜƎƐƒƔƖŲƙxƛƌƨƟơŌ+ƭƚa*ƧƞƒbƢƮ)\/ĺ,ŶǄŷŨŽ}'),{x:{},b:{},gz:{},a:{},bt:{}},g);}compute(r,x,b,o){for(var i=0;i<50;i++)this.step(r,x,b,o);}step(r,x,b,o){[['x',x.r.texture],['b',b.r.texture],['gz',this.g.size],['a',-1],['bt',4]].forEach(u=>{this.uniforms[u[0]].value=u[1]});cr(r,o,this.sc,this.ca)}}\nclass DivergenceOp extends SlabOpBase{constructor(g){super(de('uniform sampler2D v;ĀĂĄĆvec2 gzēāăą floatĜs;void main(){ĘĚ uv=gl_FragCoĄd.xy\/ĝŉy,xo=ĸ2(1.Ōzŉ,.0),yŒŔ(0.,ŗř.y);ľŀłńoĥrœę4((.5Ōs)*(textureď(v,Ļ+ő)ŉ-ƁƃƅƇDƉƋv-Ǝŉ+ƒƄƆƈƊƌšƏyƑƂƟƕƗĻ-ƤŪşť,ƱŗŬ}'),{v:{},gz:{},gs:{}},g)};compute(r,v,d){[['v',v.r.texture],['gz',this.g.size],['gs',1]].forEach(u=>{this.uniforms[u[0]].value=u[1]});cr(r,d,this.sc,this.ca)}};\nclass GradientOp extends SlabOpBase{constructor(g){super(de('uniform sampler2D p;ĀĂĄĆĈĊČĎĐwēāăą vec2 gzĞĕġfloatħs;void main(){ģĥ uv=gl_FragCoĄd.xy\/ĨŒy,xo=Ł2(1.ŕzŒ,0.),yśŝ(Ŧ,ŠŢ.y);ŇŉŋōoĮrŜĤ4(textureď(w,ń)ŗ-((.5ŕs)*ŬƁƃƅƇD(pƋv+Śƍx-ƙƄƆƈƟń-ƣŤƧƛƪƠ+ŪƤƦƂƨƜƞƠ-ƵŒ)ŨŮŠŴ}'),{p:{},w:{},gz:{},gs:{}},g)};compute(r,p,w,o){[['p',p.r.texture],['w',w.r.texture],['gz',this.g.size],['gs',1]].forEach(u=>{this.uniforms[u[0]].value=u[1]});cr(r,o,this.sc,this.ca)}}\nclass SplatOp extends SlabOpBase{constructor(g){super(de('uniform sampler2D r;ĀĂĄĆvec2 gzēāăą Ęc3 clğĕĢĤěpĪġĆfloatđd;ĳĵķgs(ĭ p,ĻĶđ){return exp(-dot(Ńp)\/r);}void main(ňgl_FragCoĴr=Ĥ4(tőŌŊď(r,(ŭůűųoĄd.xy\/ĝƌy))Ƒz*.99+(Ĩ*ľřƑ-ƅŰŲŴƊƑ,Ɛx*rdƓ,1.ş}'),{r:{},gz:{},cl:{},p:{},rd:{}},g)};compute(r,i,c,p,o){[['gz',this.g.size],['r',i.r.texture],['cl',c],['p',p],['rd',1.5]].forEach(u=>{this.uniforms[u[0]].value=u[1]});cr(r,o,this.sc,this.ca)}}\nclass VorticityOp extends SlabOpBase{constructor(g){super(de('uniform sampler2D v;ĀĂĄĆvec2 gzēāăą floatĜs;void main(){ĘĚ uv=gl_FragCoĄd.xy\/ĝŉy;ľŀłńoĥr=ĸ4((.5Ōs)*(textureď(v,Ļ+ĸ2(1.Ōzŉ,.0)).y-ŤŦŨŪDŬŮv-űųŵōxŹŻŽſƁŧũūŭůƊ0.,ŴŶžżŉ+ƓƃƖƇƉęŲƚƜƌŷyƠx),ƪƪŴ);}'),{v:{},gz:{},gs:{}},g)};compute(r,v,o){[['v',v.r.texture],['gz',this.g.size],['gs',1]].forEach(u=>{this.uniforms[u[0]].value=u[1]});cr(r,o,this.sc,this.ca)}}\nclass VorticityConfinementOp extends SlabOpBase{constructor(g){super(de('uniform sampler2D v;ĀĂĄĆĈĊČĎĐvoēāăąđec2 gzğĕĢfloatħsĪġĆĭįıtĳĔĵ ķİ eĴĖģĥ c;ĝid main(){vĤĦuv=gl_FragCoĄd.xy\/ĨŦy,xo=ŕĥ(1.ũzŦ,.0),yůű2(0.,ŴŶ.y)ŉŖľ=(.5ũs)*ƀ(abs(textureď(ĝ,Ř+ž)Ŧ)-ƘƚƜƞƠƢDƤoƦv-Ʃƫ,ƮƛƝƟơƣƥƧŮƪxƬƽưǀƳƵƷ-ǅƫƊf*=Őŕrsesqrt(Ŏx(e,doǞf,f)ǫ*c*ǊƲǂƶŘǆ;fƈǔ-Ŵ;śŝşšoĮrŰĤ4ƾƱǁƴvƷǆy+ƛs*Ǫ,ƃƅ.Ɗ}'),{v:{},vo:{},gz:{},gs:{},ts:{},e:{},c:{value:new _.Vector2()}},g)}compute(r,v,vo,o){[['v',v.r.texture],['vo',vo.r.texture],['gz',this.g.size],['gs',1],['ts',1],['e',2.4414e-4],['c',new _.Vector2(curl*1,curl*1)]].forEach(u=>{this.uniforms[u[0]].value=u[1]});cr(r,o,this.sc,this.ca)}}\nclass Slab{constructor(w,h){this.r=new _.WebGLRenderTarget(w,h,{magFilter:1003,minFilter:1003,type:1015,depthBuffer:0});this.w=this.r.clone();}swap(){var t=this.r;this.r=this.w;this.w=t}}\nclass Solver{constructor(g){var w=g.size.x,h=g.size.y;Object.assign(this,{g:g,v:new Slab(w,h),d:new Slab(w,h),vd:new Slab(w,h),vv:new Slab(w,h),p:new Slab(w,h),a:new AdvectOp(g),divergence:new DivergenceOp(g),ppe:new JacobiOp(g),gradient:new GradientOp(g),splat:new SplatOp(g),vorticity:new VorticityOp(g),vc:new VorticityConfinementOp(g),source:new _.Vector3(.5,.5,.5)})};step(r,m){let t=this.a.d,s=this;s.a.d=1;s.a.compute(r, s.v, s.v, s.v);s.a.d=t;s.a.compute(r,s.v,s.d,s.d);var p=new _.Vector2((m.position.x\/s.g.size.x)*s.g.size.x,((s.g.size.y-m.position.y)\/s.g.size.y)*s.g.size.y);s.splat.compute(r,s.v,new _.Vector3(m.velocity.x*.1,-m.velocity.y*.1,0),p,s.v);s.splat.compute(r,s.d,s.source,p,s.d);s.vorticity.compute(r,s.v,s.vv);s.vc.compute(r,s.v,s.vv,s.v);s.project(r);};project(r){let t=this;t.divergence.compute(r,t.v,t.vd);t.cs(r,t.p);t.ppe.alpha=-t.g.scale*t.g.scale;t.ppe.compute(r,t.p,t.vd,t.p);t.gradient.compute(r,t.p,t.v,t.v);};cs(r,s){r.setRenderTarget(s.w);r.clear(1,0,0);r.setRenderTarget(r.getRenderTarget());s.swap();}}\nclass Display extends _.WebGLRenderTarget{constructor(w,h,fs){super(w,h,{wrapS:1002,wrapT:1002});Object.assign(this,{m:new _.ShaderMaterial({uniforms:{},vertexShader:passthrough,fragmentShader:fs,depthWrite:0,depthTest:0}),c:new _.OrthographicCamera(-1,1,1,-1,0,1),s:new _.Scene()});this.s.add(new _.Mesh(new _.PlaneGeometry(2,2),this.m))}render(rr,r){this.m.uniforms={r:{value:r.texture}};rr.setRenderTarget(this);rr.render(this.s,this.c);rr.setRenderTarget(null);}}\nclass Fluid{constructor(w,h,r){let t=this,s=Math.min(512,w),g={size:new _.Vector2(s,s)};t.r=r;t.s=s\/w;t.motion={position:{x:0,y:0},velocity:{x:0,y:0}};t.op=new _.Vector2();t.sol=new Solver(g,new _.Vector2(s,s));t.velocityRT=new Display(s,s,'uniform sampler2D r;varying vec2 vUv;void main(){gl_FragColor=vec4(texture2D(r,vUv).xyz+.5,1.);}',r);t.densityRT=new Display(s,s,'uniform sampler2D r;varying vec2 vUv;void main(){gl_FragColor=vec4(vec3(dot((texture2D(r,vUv).xxx*vec3(vUv,1.)),vec3(.299,.587,.114))),1.);}',r);}updatePosition(p){let t=this;p.x*=t.s;p.y*=t.s;t.motion={position:{x:p.x,y:p.y},velocity:new _.Vector2(p.x-t.op.x,p.y-t.op.y)};t.op.set(p.x,p.y)}step(){let t=this;t.sol.step(t.r,t.motion);t.velocityRT.render(t.r,t.sol.v.r);t.densityRT.render(t.r,t.sol.d.r)}}\nclass FSQ{constructor(m){this.material=m;let g=new _.BufferGeometry();g.setAttribute('position',new _.Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3));g.setAttribute('uv',new _.Float32BufferAttribute([0,2,0,0,2,0],2));this.m=new _.Mesh(g,m);};render(r){r.render(this.m,new _.OrthographicCamera(-1,1,1,-1,0,1));}};\nclass AfterimagePass{constructor(d){this.needsSwap=1;this.u=_.UniformsUtils.clone({'d':{value:d},'o':{value:0},'n':{value:0}});let p={minFilter:1006,magFilter:1003,format:1023};this.a=new _.WebGLRenderTarget(1,1,p);this.b=new _.WebGLRenderTarget(1,1,p);this.c=new FSQ(new _.ShaderMaterial({uniforms:this.u,vertexShader:passthrough,fragmentShader:de('uniform float d;ĀĂĄĆsampler2D oďāăą ĔĖĘĚĜn;varying vec2ĲUvĪoid maį(){ĳc4 to=textureě(o,vĸ);ŉ*=d*Ŀx(sign(ŉ-.1),0.řgl_FragCoĉr=ŠŧōŏőœnŖŘ,ŉř}')}));this.d=new FSQ(new _.MeshBasicMaterial());};render(r,w,b){this.u.o.value=this.b.texture;this.u.n.value=b.texture;r.setRenderTarget(this.a);this.c.render(r);this.d.material.map=this.a.texture;r.setRenderTarget(w);this.d.render(r);let t=this.b;this.b=this.a;this.a=t;};setSize(w,h){this.a.setSize(w,h);this.b.setSize(w,h);}};\nclass RenderPass{constructor(s,c){this.s=s;this.c=c;};render(r,_,b){let oldAutoClear=r.autoClear;r.autoClear=0;r.setRenderTarget(b);r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil);r.render(this.s,this.c);r.autoClear=oldAutoClear;};setSize(){}};class EffectComposer{constructor(r){this.r=r;let s=r.getSize(new _.Vector2());this.p=r.getPixelRatio();this.w=s.width;this.h=s.height;let t=new _.WebGLRenderTarget(this.w*this.p,this.h*this.p,{minFilter:1006,magFilter:1006,format:1023});this.u=t;this.v=t.clone();this.b=this.u;this.readBuffer=this.v;this.renderToScreen=1;this.t=[];this.c=new _.Clock();}sb(){let tmp=this.readBuffer;this.readBuffer=this.b;this.b=tmp;}addPass(p){this.t.push(p);p.setSize(this.w*this.p,this.h*this.p);}lp(p){for(let i=p+1;i<this.t.length;i++)if(this.t[i].enabled)return 0;return 1;}render(){let d=this.c.getDelta(),c=this.r.getRenderTarget();this.t.forEach(p=>{p.renderToScreen=this.renderToScreen&&this.lp(i);p.render(this.r,this.b,this.readBuffer,d,0);if(p.needsSwap)this.sb();});this.r.setRenderTarget(c);};setSize(w,h){this.w=w;this.h=h;let x=this.w*this.p,y=this.h*this.p;this.u.setSize(x,y);this.v.setSize(x,y);this.t.forEach(p=>p.setSize(x,y)); }};\nclass Particles extends EffectComposer{constructor(w,h,r,rf){super(r);let t=this,sz=1024,s=new _.Scene(),c=new _.OrthographicCamera(),ps=[],ds=[];t.bgp=new _.Mesh(new _.PlaneBufferGeometry(w,h),new _.MeshBasicMaterial({color:0x000000}));t.bgp.position.z=-1;s.add(t.bgp);for(var i=0;i<sz*sz;i++){ps.push((rn.r()-.5)*4,(rn.r()-0.5)*4,rn.r(),0);ds.push((i%sz)\/sz,(Math.floor(i\/sz))\/sz,0,0);}let geo=new _.BufferGeometry();geo.setAttribute('position',new _.BufferAttribute(new Float32Array(ps),4));geo.setAttribute('particleData',new _.BufferAttribute(new Float32Array(ds),4));t.prts=new _.Points(geo,new _.ShaderMaterial({uniforms:{positionData:{value:null},dpr:{value:devicePixelRatio}},vertexShader:de('attribute vec4 particleDĀa;uniform sampĕr2DĎosiĒonėtęěĝğġfloĀ dpr;void main(){gl_PŃntSize=(ľr>1.)?4.:2.;ŎŐĬĮiİ=ĿojċįnMĀăx*modelViewŵĂiŸĊČ(Ƈ3(ćxtureĩ(pŪųĲa,ďđēĕƘ.xy)Ơy,0ş,Ş);}'),fragmentShader:'void main(){gl_FragColor=vec4(1.,1.,1.,smoothstep(.45,.75,1.-length(vec2(gl_PointCoord.x,gl_PointCoord.y)-vec2(.5))*2.));}',transparent:1,depthWrite:0,depthTest:0}));s.add(t.prts);t.gpC=new GPUComputationRenderer(sz,sz,r);let positionTex=t.gpC.t();positionTex.image.data=new Float32Array(ps);t.pVar=t.gpC.v('texturePosition',de('uniform float time;ĀĂĄĆsampler2D veĉcityTex;ġc3 pĜmute(ĬĮx){return mod(ņx*34.)+1Ō*x,289Ō;}ĈĊČsnĶec2ĠĺconsČĬ4 C=Ū(.211324865405187,.36602ź03784439,-.57735Ɔ69ž9626ƁƆƎ9ƢƏƥ9)īŠŢi=ŚĄĶ+dotĶ,C.yy)),x0Ů-iƲƴ(iƷ.xĹ,i1;Ǎ=(ƿǉ>Ǔƻ?Ĭ2(ŏ,0Ō:Ǚ(Ǟ,ŏƩŪ x12=ǓxyǮ+ƸǊzz;ǩ2ǉy-=ǍǏ=ŃŅǇŔŖǦŠĮp=İąĳĵȊĲĴǆƹ+ķǢ.ǌŏyǤŌōiǉȓȆȕȗǉȚƼƪĭłǿaxŰ5-ȔƳƵƿƾ0ƽȰǒǪǹƾȸǮȵǅǷ.zwȺǸɁƼơƩmǿ*m;ɉmɋȦĸ=Ǹ*fracƵp*Ƹwɞ)-ŏɑ h=absǒɠƓɣoxƮĉưx+Ɠȅȧaǀx-ɮɍ*=ŏ79Ŕ42ƛŻ0159ƒ85ƊŊ7209ʎ14*(ɸ*ɸ+h*hɶĮg;gǉɦǞňǭʝǉőǞyʤƹzʧʱőȻzʫyzʵǸyw;ļľŀ ŴǞ*ȶm,gƩ}voidłaiŞĺǧpos=ĴxˁeĞ(˛˝P˘ĥiŦˉl_FɗgCoĄdǹ\/rrǹƩ˗sǹ+˚ĩ˝˟ġģĥħĩ,(˸˺ǥ*ɵǹ̊0Ɔ;̇zǻ.̎ǎĂ̆˘ɀ<=ǞĺŚċ n1=ŝşš̘˹ň1ǣĎĐȥ̟Čnǫ̥ǡ̇y*̫Ṷ̑eȥ̇ǮʲȔ̸̢Ɠ,̲̓5ȤŘg˩˫a˭oĉrȉ˘Ř'),positionTex);t.pVar.m.uniforms={time:{value:0},velocityTex:{value:rf}};t.pVar.d=[t.pVar];t.gpC.i();t.addPass(new RenderPass(s,c));t.afterImagePass=new AfterimagePass(.97);t.addPass(t.afterImagePass);t.renderToScreen=0;t.prts.scale.set(w\/2,h\/2,1);Object.assign(c,{left:w\/-2,right:w\/2,top:h\/2,bottom:h\/-2});c.position.z=1;c.updateProjectionMatrix();t.setSize(w*devicePixelRatio,h*devicePixelRatio)};step(){this.prts.material.uniforms.positionData.value=this.gpC.g(this.pVar).texture;this.pVar.m.uniforms.time.value+=.01;this.gpC.c();this.render()}}\nclass Vol{constructor(x,y,d,c){var n=x*y*d;Object.assign(this,{rv:0,vv:0,sx:x,sy:y,d:d,w:zeros(n),dw:zeros(n)});for(var i=0;i<n;i++)this.w[i]=typeof c===un?this.gRnd()*Math.sqrt(1\/(x*y*d)):c;}clone(){var V=new Vol(this.sx,this.sy,this.d,0);this.w.forEach((w,i)=>V.w[i]=w);return V;}gRnd(){if(this.rv){this.rv=0;return this.vv;}var u=2*rnd()-1,v=2*rnd()-1,r=u*u+v*v;if(r===0||r>1)return this.gRnd();var c=Math.sqrt((-2*Math.log(r))\/r);this.vv=v*c;this.rv=1;return u*c;}fromJSON(j){this.sx=j.sx;this.sy=j.sy;this.d=j.depth;var n=this.sx*this.sy*this.d;this.w=zeros(n);this.dw=zeros(n);for(var i=0;i<n;i++){this.w[i]=j.w[i]}}}\nclass FullyConnLayer{constructor(o={}){this.out_depth=o.num_neurons||o.filters;this.l1_decay_mul=o.l1_decay_mul||0;this.l2_decay_mul=o.l2_decay_mul||1;this.num_inputs=o.in_sx*o.in_sy*o.in_depth;this.out_sx=1;this.out_sy=1;this.filters=[];for(var i=0;i<this.out_depth;i++){this.filters.push(new Vol(1,1,this.num_inputs));}this.bs=new Vol(1,1,this.out_depth,0);}forward(V){this.ia=V;var A=new Vol(1,1,this.out_depth,0);var Vw=V.w;for(var i=0;i<this.out_depth;i++){var a=0,wi=this.filters[i].w;for(var d=0;d<this.num_inputs;d++){a+=Vw[d]*wi[d];}a+=this.bs.w[i];A.w[i]=a;}this.out_act=A;return this.out_act;}backward(){var V=this.ia;V.dw=zeros(V.w.length);for(var i=0;i<this.out_depth;i++){var tfi=this.filters[i],cg=this.out_act.dw[i];for(var d=0;d<this.num_inputs;d++){V.dw[d]+=tfi.w[d]*cg;tfi.dw[d]+=V.w[d]*cg;}this.bs.dw[i]+=cg;}}getPrms(){var r=[];for(var i=0;i<this.out_depth;i++){r.push({params:this.filters[i].w,grads:this.filters[i].dw,l1_decay_mul:this.l1_decay_mul,l2_decay_mul:this.l2_decay_mul});};r.push({params:this.bs.w,grads:this.bs.dw,l1_decay_mul:0,l2_decay_mul:0});return r;}fromJSON(j){new Array('out_depth','out_sx','out_sy','num_inputs','l1_decay_mul','l2_decay_mul').forEach(d=>{this[d]=j[d]||1});this.filters=[];j.filters.forEach(f=>{var v=new Vol(0,0,0,0);v.fromJSON(f);this.filters.push(v);});this.bs=new Vol(0,0,0,0);this.bs.fromJSON(j.biases);}}\nclass InputLayer{constructor(o={}){this.out_depth=this.go(o,['out_depth','depth'],0);this.out_sx=this.go(o,['out_sx','sx','width'],1);this.out_sy=this.go(o,['out_sy','sy','height'],1)}go(o,f,d){var r=d;f.forEach(f=>{if(typeof o[f]!==un)r=o[f]});return r}forward(v){return v;}backward(){}getPrms(){return []}fromJSON(j){Object.keys(j).forEach(k=>this[k]=j[k])}}\nclass RegressionLayer{constructor(o={}){this.num_inputs=o.in_sx*o.in_sy*o.in_depth;this.out_depth=this.num_inputs;this.out_sx=1;this.out_sy=1}forward(V){this.ia=V;this.out_act=V;return V;}backward(y){var x=this.ia;x.dw=zeros(x.w.length);var l=0,i=y.dim,yi=y.val,dy=x.w[i]-yi;x.dw[i]=dy;l+=.5*dy*dy;return l;}getPrms(){return []}fromJSON(j){Object.keys(j).forEach(k=>this[k]=j[k])}}\nclass ReluLayer{constructor(opt={}){this.out_sx=opt.in_sx;this.out_sy=opt.in_sy;this.out_depth=opt.in_depth;}forward(V){this.ia=V;var V2=V.clone(),N=V.w.length,V2w=V2.w;for(var i=0;i<N;i++){if(V2w[i]<0)V2w[i]=0;}this.out_act=V2;return this.out_act;}backward(){var V=this.ia,V2=this.out_act,N=V.w.length;V.dw=zeros(N);for(var i=0;i<N;i++){if(V2.w[i]<=0)V.dw[i]=0;else V.dw[i]=V2.dw[i]}}getPrms(){return []}fromJSON(j){Object.keys(j).forEach(k=>this[k]=j[k])}}\nclass Net{constructor(){this.layers=[]}makeLayers(defs){var desugar=_=>{var new_defs=[];defs.forEach(def=>{if(def.type==='regression')new_defs.push({type:'fc',num_neurons:def.num_neurons});if((def.type==='fc')&&typeof (def.bias_pref)===un){def.bias_pref=(typeof def.activation!==un&&def.activation==='relu')?0.1:0;}new_defs.push(def);if(typeof def.activation!==un){if(def.activation==='relu'){new_defs.push({type:'relu'});}}});return new_defs;};defs = desugar(defs);this.layers=[];defs.forEach((def,i)=>{if(i>0){def.in_sx=this.layers[i-1].out_sx;def.in_sy=this.layers[i-1].out_sy;def.in_depth=this.layers[i-1].out_depth;}this.layers.push(this.getLayer(def.type,def))})}forward(V, t){if(typeof(t)===un)t=0;var act=this.layers[0].forward(V,t);for(var i=1;i<this.layers.length;i++){act=this.layers[i].forward(act,t);}return act;}backward(y){var N=this.layers.length,l=this.layers[N-1].backward(y);for(var i=N-2;i>=0;i--)this.layers[i].backward();return l;}getPrms(){var r=[];this.layers.forEach(l=>l.getPrms().forEach(p=>r.push(p)));return r;}getLayer(t,p){return new {input:InputLayer,relu:ReluLayer,regression:RegressionLayer,fc:FullyConnLayer}[t](p)}fromJSON(j){this.layers=[];j.layers.forEach(Lj=>{var L = this.getLayer( Lj.layer_type,undefined);L.fromJSON(Lj);this.layers.push(L);})}}\nclass Trainer{constructor(n){this.net=n;this.learning_rate=.001;this.l1_decay=0;this.l2_decay=.01;this.bs=64;this.k=0;}train(x,y){this.net.forward(x,1);var s=new Date().getTime(),e=new Date().getTime(),ft=e-s,s=new Date().getTime(),cl=this.net.backward(y),l2dl=0,l1dl=0,e=new Date().getTime(),bt=e-s;this.k++;if(this.k%this.bs===0){var pgl=this.net.getPrms();for(var i=0;i<pgl.length;i++){var pg=pgl[i],p=pg.params,g=pg.grads,l2dm=pg.l2_decay_mul||1,l1dm=pg.l1_decay_mul||1,l2d=this.l2_decay*l2dm,l1d=this.l1_decay*l1dm;for(var j=0;j<p.length;j++) {l2dl+=l2d*p[j]*p[j]\/2;l1dl+=l1d*Math.abs(p[j]);p[j]+=-this.learning_rate*(((l2d*(p[j]))+(l1d*(p[j]>0?1:-1))+g[j])\/this.bs);g[j]=0;}}}return {fwd_time:ft,bwd_time:bt,l2_decay_loss:l2dl,l1_decay_loss:l1dl,cost_loss:cl,softmax_loss:cl,loss:cl+l1dl+l2dl} }}\nclass Win{constructor(s,m){this.v=[];this.size=s;this.ms=m;this.sum=0;}add(x){this.v.push(x);this.sum+=x;if(this.v.length>this.size){this.sum-=this.v.shift();}}get_average(){if(this.v.length<this.ms)return -1;else return this.sum\/this.v.length;}}\nclass Vec{constructor(x,y){this.x=x;this.y=y;}dist_from(v){return Math.sqrt(Math.pow(this.x-v.x,2)+Math.pow(this.y-v.y,2));}length(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2));}add(v){return new Vec(this.x+v.x,this.y+v.y);}sub(v){return new Vec(this.x-v.x,this.y-v.y);}rotate(a){return new Vec(this.x*Math.cos(a)+this.y*Math.sin(a),-this.x*Math.sin(a)+this.y*Math.cos(a));}scale(s){this.x*=s;this.y*=s;}normalize(){var d=this.length();this.scale(1.0\/d);}}class Brain {constructor(ns,na,o){Object.assign(this,{ni:ns+na+ns,ns:ns,num_actions:na,s_w:[0,0],a_w:[0,0],r_w:[0,0],n_w:[0,0],xp:[],age:0,f_p:0,epsilon:1,latest_reward:0,last_input_array:[],average_reward_window:new Win(1000,10),average_loss_window:new Win(1000,10),learning:1});this.value_net=new Net();this.value_net.makeLayers(o.layer_defs);this.tdt=new Trainer(this.value_net);}ra(){return randi(0,this.num_actions);}policy(s){var svol=new Vol(1,1,this.ni);svol.w=s;var aw=this.value_net.forward(svol),maxk=0,maxval=aw.w[0];for(var k=1;k<this.num_actions;k++){if(aw.w[k]>maxval){maxk=k;maxval=aw.w[k];}}return {action:maxk,value:maxval};}getNetInput(xt){var w=[],n=2;w=w.concat(xt);w=w.concat(this.s_w[n-1]);var act=new Array(this.num_actions);for(var q=0;q<this.num_actions;q++)act[q]=0;act[this.a_w[n-1]]=1*this.ns;return w.concat(act);}forward(ia){this.f_p+=1;this.last_input_array=ia;var c;if(this.f_p>1){var ni=this.getNetInput(ia);this.epsilon=(this.learning)?Math.min(1,Math.max(.05,1-(this.age-3000)\/(200000-3000))):.05;c=(randf(0,1)<this.epsilon)?this.ra():this.policy(ni).action;}else{var ni=[];c=this.ra();}this.n_w.shift();this.n_w.push(ni);this.s_w.shift();this.s_w.push(ia);this.a_w.shift();this.a_w.push(c);return c;}backward(r){this.latest_reward=r;this.average_reward_window.add(r);this.r_w.shift();this.r_w.push(r);if(!this.learning){return;}this.age+=1;if(this.f_p>1+1){var e={state0:this.n_w[0],state1:this.n_w[1],action0:this.a_w[0],reward0:this.r_w[0]};if(this.xp.length<30000)this.xp.push(e);else this.xp[randi(0,30000)]=e};if(this.xp.length>Math.floor(Math.min(30000*.1,1000))){var av=0;for(var k=0;k<this.tdt.bs;k++){var re=randi(0,this.xp.length),e=this.xp[re],x=new Vol(1,1,this.ni);x.w=e.state0;var maxact=this.policy(e.state1),r=e.reward0+.7*maxact.value,ystruct={dim:e.action0,val:r},loss=this.tdt.train(x,ystruct);av+=loss.loss;}av=av\/this.tdt.bs;this.average_loss_window.add(av);}}}\nvar lint=(a,b,c,d)=>{var e=(d.y-c.y)*(b.x-a.x)-(d.x-c.x)*(b.y-a.y);if(e===0)return 0;var u=((d.x-c.x)*(a.y-c.y)-(d.y-c.y)*(a.x-c.x))\/e,v=((b.x-a.x)*(a.y-c.y)-(b.y-a.y)*(a.x-c.x))\/e;if(u>0&&u<1&&v>0&&v<1)return {ua:u,ub:v,up:new Vec(a.x+u*(b.x-a.x),a.y+u*(b.y-a.y))};return 0;},lpint=(a,b,c,r)=>{var v=new Vec(b.y-a.y,-(b.x-a.x)),d=Math.abs((b.x-a.x)*(a.y-c.y)-(a.x-c.x)*(b.y-a.y));d=d\/v.length();if(d>r)return 0;v.normalize();v.scale(d);var v=c.add(v),u=(Math.abs(b.x-a.x)>Math.abs(b.y-a.y))?(v.x-a.x)\/(b.x-a.x):(v.y-a.y)\/(b.y-a.y);if(u>0&&u<1)return {ua:u,up:v};return 0;},box=(lst,x,y,w,h)=>{lst.push({p1:{x:x,y:y},p2:{x:x+w,y:y}},{p1:{x:x+w,y:y},p2:{x:x+w,y:y+h}},{p1:{x:x+w,y:y+h},p2:{x:x,y:y+h}},{p1:{x:x,y:y+h},p2:{x:x,y:y}})},gwlls=(w,h)=>{let l,x1,y1,x2,y2,p=50;if(rn.r()<.5){l=w*.4+(rn.r()*((w*.6)-p*2));x1=p+rn.r()*(w-l-p*2);x2=x1+l;y1=y2=p+rn.r()*(w-p*2);}else{l=h*.4+(rn.r()*((h*.6)-p*2));y1=p+rn.r()*(h-l-p*2);y2=y1+l;x1=x2=p+rn.r()*(h-p*2);};return {p1:{x:x1,y:y1},p2:{x:x2,y:y2}};}\nclass Agent{constructor(px=1,py=1,es=9,rng=85){this.p=new Vec(px,py);this.op=this.p;this.angle=0;this.actions=[[1,1],[0.8,1],[1,0.8],[0.5,0],[0,0.5]];this.rad=10;this.eyes=[];for(var k=0;k<es;k++){this.eyes.push({angle:(k-3)*0.25,max_range:rng,sensed_proximity:rng,sensed_type:-1});}var num_inputs=es*3,na=5,ns=num_inputs+na+num_inputs,ld=[{type:'input',out_sx:1,out_sy:1,out_depth:ns},{type:'fc',num_neurons:50,activation:'relu'},{type:'fc',num_neurons:50,activation:'relu'},{type:'regression',num_neurons:na}];this.brain=new Brain(num_inputs,na,{layer_defs:ld});this.ds=0;}forward(){var c=this.eyes.length,ia=new Array(c*3);for(var i=0;i<c;i++){var e=this.eyes[i];ia[i*3]=1;ia[i*3+1]=1;ia[i*3+2]=1;if(e.sensed_type !== -1) {ia[i*3 + e.sensed_type] = e.sensed_proximity\/e.max_range;}}var x=this.brain.forward(ia),a=this.actions[x];this.actionix=x;this.rot1=a[0];this.rot2=a[1];}backward(){var rew=0;this.eyes.forEach(e=>{rew+=e.sensed_type===0?e.sensed_proximity\/e.max_range:1;});rew=rew\/this.eyes.length;rew=Math.min(1,rew*2);var fr=0;if(this.actionix===0&&rew>.75)fr=.1*rew;var d_r=this.ds;this.ds=0;this.brain.backward(rew+fr+d_r);}}\nclass World{constructor(w,h){Object.assign(this,{W:w,H:h,t:0,items:[],agent:new Agent(rn.r()*w,rn.r()*h,aes,esrng)});for(var k=0;k<30;k++)this.items.push({p:new Vec(randf(20,this.W-20),randf(20,this.H-20)),type:randi(1,3),rad:10,age:0,c:0});}genWalls(){this.walls=[];box(this.walls,1,1,this.W-2,this.H-2);for(var i=0;i<3;i++)this.walls.push(gwlls(this.W,this.H));return this.walls}collide_(p1,p2,cw,ci){var m=0;if(cw){this.walls.forEach( wl=>{let r=lint(p1,p2,wl.p1,wl.p2);if(r){r.type=0;if(!m){m=r;}else{if(r.ua<m.ua){m=r;}}}})}if(ci){this.items.forEach(it=>{let r=lpint(p1,p2,it.p,10);if(r){r.type=it.type;if(!m){m=r}else{if(r.ua<m.ua){m=r;}}}})}return m;}step(){this.t++;var a=this.agent,is=this.items;a.eyes.forEach(e=>{var r=this.collide_(a.p,new Vec(a.p.x+e.max_range*Math.sin(a.angle+e.angle),a.p.y+e.max_range*Math.cos(a.angle+e.angle)),1,1);e.sensed_proximity=(r)?r.up.dist_from(a.p):e.max_range;e.sensed_type=(r)?r.type:-1;});this.agent.forward();a.op=a.p;a.oangle=a.angle;var v=new Vec(0,10\/2);v=v.rotate(a.angle+Math.PI\/2);var k=a.p.add(v),h=a.p.sub(v),g=a.p.sub(h);g=g.rotate(-a.rot1);var q=a.p.sub(k);q=q.rotate(a.rot2);var o=h.add(g);o.scale(.5);var m=k.add(q);m.scale(.5);a.p=o.add(m);a.angle-=a.rot1;if(a.angle<0)a.angle+=2*Math.PI;a.angle+=a.rot2;if(a.angle>2*Math.PI)a.angle-=2*Math.PI;var res=this.collide_(a.op,a.p,1,0);if(res){a.p=a.op;}if(a.p.x<0)a.p.x=0;if(a.p.x>this.W)a.p.x=this.W;if(a.p.y<0)a.p.y=0;if(a.p.y>this.H)a.p.y=this.H;var u=0;for(var i=0,n=is.length;i<n;i++){var it=is[i];it.age+=1;var d=a.p.dist_from(it.p);if(d<20){if(!this.collide_(a.p, it.p, 1, 0)){if(it.type===1)a.ds+=5;if(it.type===2)a.ds+=-6;it.c=1;u=1;break;}};if(it.age>5000&&this.t%100===0&&randf(0,1)<.1){it.c=1;u=1;}}if(u){var nt=[];is.forEach(it=>{if(!it.c)nt.push(it);});this.items=nt;}if(is.length<30&&this.t%10===0&&randf(0,1)<.25){is.push({p:new Vec(randf(20,this.W-20),randf(20,this.H-20)),type:randi(1,3),rad:10,age:0,c:0});}this.agent.backward();}}\nclass Sim extends _.WebGLRenderTarget{constructor(w,h,r){super(w*2,h*2);Object.assign(this,{w:w,h:h,t:0,items:[],renderer:r,simspeed:2,world:new World(w,h),s:new _.Scene(),c:new _.OrthographicCamera(-w\/2,w\/2,h\/2,-h\/2,.01,1000),agent:new _.Object3D()});let t=this;t.agent.add(new _.Mesh(new _.SphereBufferGeometry(5),new _.MeshBasicMaterial({color:new _.Color(`rgb(${pal[0][0]},${pal[0][1]},${pal[0][2]})`)})));t.genWalls();t.world.agent.eyes.forEach(e=>{let sr=e.sensed_proximity,dir=new _.Vector3(t.world.agent.op.x+20*Math.sin(e.angle),t.world.agent.op.y+20*Math.cos(e.angle),0).sub(new _.Vector3(t.world.agent.op.x+sr*Math.sin(e.angle),t.world.agent.op.y+sr*Math.cos(e.angle),0)).normalize();t.agent.add(new _.ArrowHelper(dir,new _.Vector3(0,0,0),e.sensed_proximity\/2,`rgb(${pal[0][0]},${pal[0][1]},${pal[0][2]})`,10,6));});t.items=new _.Object3D();for(var i=0;i<100;i++)t.items.add(new _.Mesh(new _.SphereBufferGeometry(5),new _.MeshBasicMaterial()));t.s.add(t.agent,t.items);t.c.position.z=100;t.c.updateProjectionMatrix()}genWalls(){if(this.walls)this.s.remove(this.walls);this.world.genWalls();let g=new _.BufferGeometry(),ws=[];this.world.walls.forEach(l=>ws.push( l.p1.x-this.w\/2, -l.p1.y+this.h\/2, 0, l.p2.x-this.w\/2, -l.p2.y+this.h\/2, 0 ));g.setAttribute('position', new _.BufferAttribute(new Float32Array(ws),3));this.walls =new _.LineSegments(g, new _.LineBasicMaterial({color:`rgb(${pal[0][0]},${pal[0][1]},${pal[0][2]})`}));this.s.add(this.walls);}loadnet(j){this.world.agent.brain.value_net.fromJSON(j);toggleLearn(0);this.simspeed=1}toggleLearn(v){this.world.agent.brain.learning = v;this.simspeed=(v)?2:1}step(){let t=this;for(var i=0;i<t.simspeed;i++)t.world.step();t.items.children.forEach(i=>{i.material.visible=0});t.agent.rotation.z=t.world.agent.oangle;t.world.items.forEach((it,i)=>{t.items.children[i].material.visible=1;t.items.children[i].position.set(it.p.x-t.w\/2,-it.p.y+t.h\/2);if(it.type==1)t.items.children[i].material.color=new _.Color(`rgb(${pal[1][0]},${pal[1][1]},${pal[1][2]})`);if(it.type==2)t.items.children[i].material.color=new _.Color(`rgb(${pal[2][0]},${pal[2][1]},${pal[2][2]})`);});t.agent.position.set(t.world.agent.op.x-t.w\/2,-t.world.agent.op.y+t.h\/2,0);t.renderer.setRenderTarget(this);t.renderer.render(t.s,t.c);t.renderer.setRenderTarget(null);}}class AppMain {\n    constructor() {\n        this.n = document.body\n        this.n.appendChild( renderer.domElement )\n        this.cameraTl = 0\n        this.exposeTl = 0\n        this.persp = 0\n        this.expose = 0\n        scene.add( this.windows = new _.Object3D() )\n        scene.add( this.shadows = new _.Object3D() )\n        \n        let d = Math.min( ww * 0.7, wh * 0.7 )\n        window.dims = new _.Vector2( d, d )\n        this.sim = new Sim( dims.x, dims.y, renderer )\n\n        this.simPlane = new _.Mesh( new _.PlaneBufferGeometry( dims.x, dims.y ), new _.MeshBasicMaterial( { map : this.sim.texture } ) )\n        this.simPlane.position.z = -150\n        scene.add( this.simPlane )\n\n        this.isLearning = true\n         \n        this.fluid = new Fluid( dims.x, dims.y, renderer )\n        this.particles = new Particles( dims.x, dims.y, renderer, this.fluid.sol.v.r.texture )\n        this.text = new Text()\n        this.text.update(this.sim)\n        this.text.needsUpdate = true\n        this.ascii = new Ascii( dims.x, dims.y, renderer )\n\n        let l = new Array(3).fill().map((a, i) => a = i).sort(_ => rn.r() - 0.5);\n        \n        this.windows.add(\n            new Window( l[0],  this.fluid.velocityRT.texture, 0 ),\n            new Window( l[1],  this.fluid.densityRT.texture, 0 ),\n            new Window( l[2],  this.particles.readBuffer.texture, 0 ),\n            new Window( 4, this.text, 1, undefined, undefined, this.text.ln * 5.15, undefined ),\n            new Window( 3, this.ascii.texture, 0 )\n        )\n\n        this.windows.children.forEach( w=> {\n            let s = new _.Mesh(\n                new _.PlaneBufferGeometry(1,1), \n                new _.ShaderMaterial( {\n                    uniforms : {\n                        dims : { value :  0 },\n                        op : { value : 1 }\n                    },\n                    vertexShader : `\n                    varying vec2 vUv;\n                    void main(){\n                        vUv = uv;\n                        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                    }\n                    `,\n                    fragmentShader : `\n                        varying vec2 vUv;\n                        uniform vec2 dims;\n                        uniform float op;\n                        float roundBox( vec2 c, vec2 s, float r ){ return length( max( abs( c )- s + r, 0.0 ) ) - r; }\n                        void main(){\n                            vec2 p = vUv * dims ;\n                            gl_FragColor = vec4( vec3(0.0), (op *((1.0 - smoothstep( -80.0, 0.0, (roundBox( p - dims \/ 2.0, dims \/ 2.0 , 80.0 )) ))*0.25))-(1.0 - smoothstep( -0.5, 0.5, (roundBox( p - dims \/ 2.0 , ( dims - vec2( 80.0 ) ) \/ 2.0 , 6.0 )) )) );\n                        }\n                    `,\n                    transparent : true\n                } )\n            )\n            this.shadows.add(s)\n            w.userData.s = s\n        })\n\n        this.raycaster = new _.Raycaster();\n        this.pointer = null\n        this.activeWindow = null\n        this.oldMouse = null\n\n        if(('ontouchstart' in window) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)) {\n            document.querySelectorAll('.tggl')[0].style.display = 'none';\n            document.addEventListener( 'touchstart', e => {this.persp = 1 - this.persp} )\n        } else {\n            document.addEventListener( 'mousemove', e => this.onMoueMove( e ) )\n            document.addEventListener( 'mousedown', e => this.onMouseDown( e ) )\n            document.addEventListener( 'mouseup', e => this.onMouseUp( e ) )\n            document.addEventListener( 'keydown', e => {\n                if(!e.repeat){\n                    let kc = e.keyCode;\n                    if( kc==84) {\n                        this.sim.toggleLearn( this.isLearning = !this.isLearning)\n                        this.text.update(this.isLearning)\n                        this.text.needsUpdate = true\n                    }\n                    if( kc==87) this.sim.genWalls()\n                    if( kc==80) {this.persp = 1 - this.persp}\n                    if( kc==69) {this.expose = 1 - this.expose}\n                    if( kc==67) {this.windows.children.forEach(w=>w.material.uniforms.ch.value =!w.material.uniforms.ch.value )}\n                }\n            } )\n        }\n        requestAnimationFrame(( t ) => this.step( t ) )\n        window.addEventListener('resize', () => this.onResize() )\n        this.onResize()\n    }\n\n    onMouseDown( e ){\n        if(this.persp > 0)return;\n        this.raycaster.setFromCamera( this.pointer, camera );\n        const intersects = this.raycaster.intersectObjects( this.windows.children )\n        if( intersects.length ){\n            this.activeWindow = intersects[ 0 ].object\n            if( this.activeWindow.d.y * ( 1 - intersects[ 0 ].uv.y ) < 24 ) this.activeWindow.drg = true\n            if( 24 \/ this.activeWindow.d.y > intersects[ 0 ].uv.y ) this.activeWindow.rsy = true\n            if( 24 \/ this.activeWindow.d.x > 1 - intersects[ 0 ].uv.x )  this.activeWindow.rsx = true\n            this.oldMouse = new _.Vector2( e.clientX, e.clientY )\n            this.windows.children.forEach( w => { if( w.zid > this.activeWindow.zid ) w.zid = w.zid - 1 } )\n            this.activeWindow.zid = this.windows.children.length\n        }\n    }\n\n    onMouseUp( e ){\n        if( this.activeWindow ) this.activeWindow.drg = false \n        if( this.activeWindow ) this.activeWindow.rsy = false \n        if( this.activeWindow ) this.activeWindow.rsx = false \n        this.activeWindow = null\n    }\n\n    onMoueMove( e ){\n        this.pointer = new _.Vector2( ( e.clientX \/ this.n.offsetWidth ) * 2 - 1, -( e.clientY \/ this.n.offsetHeight ) * 2 + 1 )\n        if( !this.activeWindow ) return\n        let p = new _.Vector2( e.clientX, e.clientY ).sub( this.oldMouse )\n        if( this.activeWindow && this.activeWindow.drg ) this.activeWindow.updatePosition( p )\n        if( this.activeWindow && ( this.activeWindow.rsx || this.activeWindow.rsy ) ) this.activeWindow.updateDimensions( p )\n        this.oldMouse = new _.Vector2( e.clientX, e.clientY )\n    }\n\n    onResize() {\n        [ ww, wh ] = [ innerWidth, innerHeight ]\n        renderer.setSize( ww, wh )\n        renderer.setPixelRatio( window.devicePixelRatio * 2 )\n        Object.assign( camera, { left: ww \/ -2, right: ww \/ 2, top: wh \/ 2, bottom: wh \/ -2, near : 0.02, far : 5000 } ).updateProjectionMatrix()\n        camera.position.z = 1000\n    }\n\n    step(t) {\n        requestAnimationFrame((t) => this.step(t))\n        this.cameraTl += ( this.persp - this.cameraTl ) * 0.05\n        this.exposeTl += ( this.expose - this.exposeTl ) * 0.05\n        \n        camera.position.x = -800 * this.cameraTl\n        camera.position.y = -800 * this.cameraTl\n\n        camera.up= new _.Vector3(0,1-this.cameraTl,this.cameraTl)\n        camera.lookAt(new _.Vector3(0,0, 250 ))\n        camera.zoom = 1 - 0.2 * this.cameraTl\n        camera.updateProjectionMatrix()\n        this.windows.children.forEach( c => c.step( this.exposeTl ) )\n        this.sim.step( t )\n        renderer.setClearColor( new _.Color(0x00000000));\n        this.fluid.step( )\n        renderer.setClearColor( new _.Color(`rgb(${pal[5][0]},${pal[5][1]},${pal[5][2]})`), 1 );\n        this.fluid.updatePosition( new _.Vector2( this.sim.world.agent.op.x, this.sim.world.agent.op.y ) )\n        this.particles.step( t )\n        this.ascii.updatePosition( new _.Vector2( this.sim.world.agent.op.x, this.sim.world.agent.op.y ) )\n        this.ascii.step( t )\n        this.windows.children[2].material.uniforms.tex.value = this.particles.readBuffer.texture\n        \n        this.windows.children.forEach( w=> {\n            w.renderOrder = w.zid\n            w.userData.s.position.copy(w.position)\n            w.userData.s.position.z = w.position.z + 10\n            w.userData.s.scale.set(w.scale.x + 80, w.scale.y + 80, 1 )\n            w.userData.s.material.uniforms.dims.value = new _.Vector2( w.scale.x + 80, w.scale.y + 80 )    \n            w.userData.s.material.uniforms.op.value = 1 - this.cameraTl\n        })\n        renderer.render(scene, camera)\n    }\n}\nwindow.main;\nwindow.onload=()=>{ main = new AppMain() };",
  "tokens" : [
    {
      "hash" : "0x2e5502686219fa2d135abefe05cbf932268398ef3291f6f4d5ea4832b99a8767",
      "id" : "412000237"
    },
    {
      "hash" : "0xe99e862834f6a66fba5dc54abe6285672c75164c015decdb28b7b214f63f5135",
      "id" : "412000298"
    },
    {
      "hash" : "0xea0b10b8ac1265adec9eabba92f0f38eecb3a5582fe25261d92330ca9310f271",
      "id" : "412000092"
    },
    {
      "hash" : "0xe028589e21b433eb76c1239db2ab1c36ee12cdf201b2921fabba4b054eff5af1",
      "id" : "412000049"
    },
    {
      "hash" : "0xae16c9c2b7dd68512b59070df2a3fdea9a4ef74027ab0a73cc7d5b38e29e10d6",
      "id" : "412000223"
    },
    {
      "hash" : "0x5db3ea8940c5e51aefb6d94894f6afcffdb9ead6b330d62b79b58c120f7cc108",
      "id" : "412000173"
    },
    {
      "hash" : "0x4460971f53029945d5849ddc87165009a1817c994b8b7f152c065e9f482f210e",
      "id" : "412000147"
    },
    {
      "hash" : "0xbf5f0c3a7a4797d88b41b9c7e343438c2f8efe28116b16fe7cdcf5422c548f10",
      "id" : "412000201"
    },
    {
      "hash" : "0x405a5a5e0d1054a8f9caca6b67e6bb185765924563ee30c66dfe0eab7b58dbf4",
      "id" : "412000062"
    },
    {
      "hash" : "0x00472d4f60f18d2a25448476e71fbc6197ac39eda779a9e0cc4e98b5023e0423",
      "id" : "412000217"
    },
    {
      "hash" : "0x6180284b8ca19b7cf5c429d53d975b6af7da8f72e6bf0febf23fba3b50613baf",
      "id" : "412000095"
    },
    {
      "hash" : "0x48904db127a8e63d789c026f3d25308753ae827a72df001f4f773126b442b865",
      "id" : "412000104"
    },
    {
      "hash" : "0x7c480891cbb509391d5fa44f5247d83b94eb8ad139995dbbdaf4fdc594bd24bd",
      "id" : "412000060"
    },
    {
      "hash" : "0x3f4a3f02bac3394b04ba99d4d89fe3fb622a483edb0e2f3148448a1be05b2446",
      "id" : "412000150"
    },
    {
      "hash" : "0xe7503477f79d3e2abb564ace564ee2da26607a73b36a92c2139202f176120336",
      "id" : "412000185"
    },
    {
      "hash" : "0x8f1f14df6eefd6cec4999d80f7973b1b04861c0d2b0442f1181a69037f334215",
      "id" : "412000064"
    },
    {
      "hash" : "0xf73afa42a407eae213bbb277933b53aa2528f93b1d3063b70b7357a5c46f20f7",
      "id" : "412000251"
    },
    {
      "hash" : "0xe068eceeea862b780fa8cd2b46804a4864399e12dde4a66439370563ad57b1c8",
      "id" : "412000218"
    },
    {
      "hash" : "0x69680bf263f33950682eea870852cac04030174c6d358ac1a0a5a8246e3587bc",
      "id" : "412000266"
    },
    {
      "hash" : "0x2f012ef37017b4b32b278972afc16783b53f86bc853c6623650fcc98104e7679",
      "id" : "412000137"
    },
    {
      "hash" : "0xc0907f217418dd629e82889e880b3c917b905b05d21591eaebbc81c3457079ac",
      "id" : "412000205"
    },
    {
      "hash" : "0xa149a39e3a59e4aac55609c4cd4a21a5c915281a361d69eecb9160265eba617e",
      "id" : "412000187"
    },
    {
      "hash" : "0x8810c0ee150fefb28b4f7c9cb4ce83b4ee9511c1203a6469776263c1774a3a92",
      "id" : "412000024"
    },
    {
      "hash" : "0x0ce8161f97477acb92412217370604a04dd3c09c8238f5d689c86babd2dfc127",
      "id" : "412000039"
    },
    {
      "hash" : "0xce3d538808899dc5d6874379e3109d8ffc3fc6c22cbe795763c0a8f186ce68eb",
      "id" : "412000018"
    },
    {
      "hash" : "0xd2787c38f44cfc04253dd1459290eb3f9e80ee35368e0ff2df748d96153684fe",
      "id" : "412000073"
    },
    {
      "hash" : "0xd7f8caa36f620ad246163524e51f63dd69ed3066791bddb469b19d563fd45a33",
      "id" : "412000122"
    },
    {
      "hash" : "0xc4e3c72f93314997648e09e1f4435c0602abf441ec2dbbe6c2cb11c4bda1bfce",
      "id" : "412000178"
    },
    {
      "hash" : "0xf87534c8059a6aa931df023086928576f64b397c97d0a678405881fdedd5b7b5",
      "id" : "412000227"
    },
    {
      "hash" : "0x7f3a4bf340b85e249a2a60ae3e523898bbe4e2142f23668e4d15afc21b90c611",
      "id" : "412000116"
    },
    {
      "hash" : "0x194e1dc96a6c739dbd1fade922c623fb863cb41dda65f29d74f08d90742d7142",
      "id" : "412000207"
    },
    {
      "hash" : "0xc73b936291e7fe9ba3e0bf73b19ae9d598bc2c04a7c7536ff5dd047af2c1ddff",
      "id" : "412000126"
    },
    {
      "hash" : "0xa1ba4ad54f028f8e48ffdff1a06a17c2e4d00450810f94e1b7e101cf7dfe2bff",
      "id" : "412000002"
    },
    {
      "hash" : "0x09ff5d43f2b70209b4a4f53238f7cf5e49c05fe0e5180bcb0a6662abf999ac30",
      "id" : "412000079"
    },
    {
      "hash" : "0xc4eff8558a3a6b41eee1c564bf60503ba2e63e85e264e689530f65468c904ef6",
      "id" : "412000113"
    },
    {
      "hash" : "0x03eb238cb0c302fc1030532b3d424572863e0fca90df7c309ced3d8262bef014",
      "id" : "412000128"
    },
    {
      "hash" : "0x66354ceb1e56a93772c5d1e65aaa6d15da596beea38abc33e8a073f37e283153",
      "id" : "412000130"
    },
    {
      "hash" : "0x70e086d54ff831528948aa4f869b350475978f2c4ef23aeba6aa643a27898d21",
      "id" : "412000257"
    },
    {
      "hash" : "0x7ef2f8688efa2ab67c340efdf09c22fc0d502b3e92aba796269f0d9e5c2b49c1",
      "id" : "412000167"
    },
    {
      "hash" : "0xb37997a32163d34bc5bf50d56d1df4bc9f7007fea48d4377ab9c6041215e624f",
      "id" : "412000036"
    },
    {
      "hash" : "0xa8ce56a575dded68ed40694b6dc3a48c19a96d615c6f1311ae8f023a8276bd1c",
      "id" : "412000117"
    },
    {
      "hash" : "0x8acd27137e91bc549d3e4e3fe495c845fc577e4b9305eaf27fd2cf9a8fc38dd1",
      "id" : "412000102"
    },
    {
      "hash" : "0x17dacd36ba85700c534ae963b99a546c40d6a213e5e645e54e45aa62aa05b467",
      "id" : "412000204"
    },
    {
      "hash" : "0x9e81041a1e909d3d4d42b7e6a1cc445a8d9c1d6c433bb568c65ae3ce2353a01f",
      "id" : "412000235"
    },
    {
      "hash" : "0xa4aee2d3ac59b573771f3291c642a1a880d6f4d298d5c673641053bb0dc7e76a",
      "id" : "412000103"
    },
    {
      "hash" : "0x8f93a6f798d06ee9eaa55128370ff96a7b39512ed2706c38dda07737256a6cf4",
      "id" : "412000099"
    },
    {
      "hash" : "0x301915470ef7862a2113469c4ddbba526c4e00c07dc8e1b3f4d623315ff28c94",
      "id" : "412000154"
    },
    {
      "hash" : "0x04aabba256323e041725c376b0a2166f1aca9610a9c9374c77331059f96fd370",
      "id" : "412000261"
    },
    {
      "hash" : "0x45f41a297fa40f22551bf3ec66e58eedcba4236f2b3f46f43da9205730f9e262",
      "id" : "412000194"
    },
    {
      "hash" : "0xd3fda48703f697dab6517562750d74817475eeb8c0e4900d49925bcb1421e8f9",
      "id" : "412000228"
    },
    {
      "hash" : "0x8016942e8408e044fce75b637de2bb6041188e2154f0e77ed30d953b3eb26e95",
      "id" : "412000031"
    },
    {
      "hash" : "0x08658429450ea37937a6483255b5539725c558923087c57a9ec665cc632c1d6e",
      "id" : "412000290"
    },
    {
      "hash" : "0x80806bb07173dbcddc1d06e70caf4b28c0fc6ebc9063f30439f1bc4fa3f86e70",
      "id" : "412000110"
    },
    {
      "hash" : "0x1479ee86acbd33887c3322419c6d910c28b56868f479d71aa50952696bc12fdd",
      "id" : "412000287"
    },
    {
      "hash" : "0xc7e5bd0db366cd1cb260f5450cdfea80a19f5303ae959084f634a4b79b6593c3",
      "id" : "412000193"
    },
    {
      "hash" : "0x94213e5c84bce15a2e157084cc77b06bd88775547a2186ef775494fbeba9eb0a",
      "id" : "412000157"
    },
    {
      "hash" : "0xdc0ab4793e0b59676cda220dd8194176ba878d9135734e1f78b4149bb7edb5ca",
      "id" : "412000170"
    },
    {
      "hash" : "0xb4c336d28f11e872c895af3708bee2c67642f9ebbc5b45fa994c69d825bbb2bb",
      "id" : "412000105"
    },
    {
      "hash" : "0x9ba8d24b360adc8942227cf66334253b862cbd7ba23d08f99e6ad73a3ab661e2",
      "id" : "412000034"
    },
    {
      "hash" : "0x7de9f0efea35ded7b44894d86ceea346001a061420a42dc683df3cb97515ef8c",
      "id" : "412000098"
    },
    {
      "hash" : "0x07b9f6d710413af3a06fda67e505463389ed7d00b2f8a8f33702c6bb5f031238",
      "id" : "412000108"
    },
    {
      "hash" : "0x9852897b2b8d5bfd9d73e36dc7a51eb7ac0e22d03459ed262825d8d91703bbd1",
      "id" : "412000051"
    },
    {
      "hash" : "0x83c701c730c47041d3bb2d008ff13296ba5cf15a293e3560e930f6473f1ea5e1",
      "id" : "412000094"
    },
    {
      "hash" : "0x6e3a23a1aded39ea25576102cd47cf1f3c7d62dd0964985d590d839223ef79e9",
      "id" : "412000242"
    },
    {
      "hash" : "0x98fa06ed84f8a70b3f480dd1db424fd5c8daf76cd5402b3f1b87ece569d5837f",
      "id" : "412000233"
    },
    {
      "hash" : "0xac1f3cdf53241b97e096f744d6a2ca8134d3ec29ff98ea567963725bd152461f",
      "id" : "412000155"
    },
    {
      "hash" : "0x1a4c388e517fb26e22c7c98a7b398c00c1718824aba7a6b2805547c152cbb981",
      "id" : "412000135"
    },
    {
      "hash" : "0x1b430e4ad9ee5de48c498d8ba1500e7d03e1309010b290c7682508879800be93",
      "id" : "412000296"
    },
    {
      "hash" : "0x4d80d357172eadf582b9f7158adfd262a8d2134d57ec5da695949739402f6966",
      "id" : "412000202"
    },
    {
      "hash" : "0xd0824bd5504bf2bcb8d8833f88576399673a273434852e32deeddb90412485c0",
      "id" : "412000297"
    },
    {
      "hash" : "0xaa6b236ed18fd853a9cc4f86143a78c29867d0fcdc70a493993d20e8cb3eaa40",
      "id" : "412000184"
    },
    {
      "hash" : "0x863a7f9b1f13b96f37a4ba1c3361088ecf20b380c2b0721e812c4979cd98f1f2",
      "id" : "412000008"
    },
    {
      "hash" : "0xadd8b60c9327fdc5641e9faadab30ae00d045e7c3be223dfd4f1a1f196c9ff0e",
      "id" : "412000179"
    },
    {
      "hash" : "0xcc3d46af8aa23cf02a83447c2c45900230f3cb6cf9994368c114ec9a1aeaeb7c",
      "id" : "412000250"
    },
    {
      "hash" : "0x5823d256c1757864597a34e9300d5c009861d74b2616ed5ef8eba16b53bb1650",
      "id" : "412000200"
    },
    {
      "hash" : "0x5116d438219331dcd816585dfa9b8734dabd0125793e6039ba822fd09babd8a7",
      "id" : "412000293"
    },
    {
      "hash" : "0x0adcbe89af039a2082107b9456966bfd588e1ded4d2663961905f67a15dce2ac",
      "id" : "412000097"
    },
    {
      "hash" : "0xd9a392fe80853610df2d71f707335a47e738aa572ad8037399c371e4427b7f0b",
      "id" : "412000035"
    },
    {
      "hash" : "0xfb1f10f1b3292b87e8fdf6ab15163b6d7237412134b0b9755eb7779f2568ff9f",
      "id" : "412000188"
    },
    {
      "hash" : "0x602d393a47d884c44e1affd7abbdedea51b2c56af63fc16b8b4513114f994fd6",
      "id" : "412000136"
    },
    {
      "hash" : "0x4c8e75cbc03eb8f8b1494960c9628848e6962528da6bb067aa061160741763f9",
      "id" : "412000208"
    },
    {
      "hash" : "0x4ffb1e3ada6fdae1f29ab7ca42ac77daa67487a46c7a817f7eed636bd3572eb2",
      "id" : "412000262"
    },
    {
      "hash" : "0x7426d279f16e0c8a5d3d8f3bab0b67d5bc6479f3c4db6bc371924a8bdc351678",
      "id" : "412000212"
    },
    {
      "hash" : "0x7753a595ae9886dc6dcaac9a9f0bdba50f17de60202aab5e1dac507f29d26dfe",
      "id" : "412000028"
    },
    {
      "hash" : "0xda2e2e3222b596acb4c06b53ae6584ece32b1b6d7677b5e12dab9c57399e83de",
      "id" : "412000057"
    },
    {
      "hash" : "0xeec07bed7196376a313a4e3273d15531fd706e96d1d5869bbf2c4db679c8e3cf",
      "id" : "412000248"
    },
    {
      "hash" : "0xd1aa5979f081cd287e069fa2365dca6fad72f3f5cda720e8a966acbfc6c615f5",
      "id" : "412000087"
    },
    {
      "hash" : "0x7b1024523053ab12e7d9577733cfce772e6ab67a7c771fc9a35b305c28388e64",
      "id" : "412000050"
    },
    {
      "hash" : "0xe2a2a7ce608ce6f93aad2f839afdd78daf66d201d7c8b0a7ea3406c82aaf4789",
      "id" : "412000061"
    },
    {
      "hash" : "0xd6a94f3e5c1587e5a1a930f074f0d7d9fb6d8a115c1a2a6e116988c78721aaa1",
      "id" : "412000234"
    },
    {
      "hash" : "0x44a58dc6779a0aa8c312a9bbcf527cf6ae67c62845a6b5b3ad67b6cc4d8f050e",
      "id" : "412000273"
    },
    {
      "hash" : "0xa0e783f1d7274adc4971922d0c37e946832788e47d7c2efcae2224c9670f86d8",
      "id" : "412000216"
    },
    {
      "hash" : "0x3a5d184dee44619a1eebfea7864072215d4bda4f9baab83d83d5e8640a0e4685",
      "id" : "412000144"
    },
    {
      "hash" : "0xed2f93e6b11b4c688ffb93fbbd377fe7eb2cd48677ccf74c9c1af956c09c27b5",
      "id" : "412000109"
    },
    {
      "hash" : "0x28432c7ae89a11e0aa10ba1d8baca836a9594c7df2b6ca2672b876b91709cba0",
      "id" : "412000118"
    },
    {
      "hash" : "0x5b55aec7cba3429de69bdc3907cf16f5480f9ca2f5033b4eddc8844f3a62f803",
      "id" : "412000158"
    },
    {
      "hash" : "0x44c8e5adda6911242fcd96c9b8dd2d7e2d131e9493bcac36b81e153d3664e742",
      "id" : "412000101"
    },
    {
      "hash" : "0xbccabcb51aa2e5716373eef895242aebf8aaf9dc622202b4509b0efe96302812",
      "id" : "412000283"
    },
    {
      "hash" : "0xfabb78e244b77a3712c74e9da5b8cad217b35291f14e72b008ed00f584c6695c",
      "id" : "412000265"
    },
    {
      "hash" : "0x1fef7f5745c6718996f2e38d20ba94adb1c1050e501f2f8bf653dd62d398255d",
      "id" : "412000019"
    },
    {
      "hash" : "0x03433f625b0d3d1ed1a1ed0aff865a74f2388672a5ba0097e94699210fbe0bfb",
      "id" : "412000246"
    },
    {
      "hash" : "0xec6f6b7687c2f676c1a781afe4cc379ce4f97687020569e697ab4badd3c29b62",
      "id" : "412000166"
    },
    {
      "hash" : "0xcedd03ad237ccafe780611a611bb6edc45d923e70dbb03e4f0cc30adc1298cff",
      "id" : "412000134"
    },
    {
      "hash" : "0x94f14d405566e44550cc58d9da739f0f48a4ad3744ff7839d29b3b8c043415c2",
      "id" : "412000163"
    },
    {
      "hash" : "0xc48ee652f2f5c959e9586c379d385627c0352e03e51dcf57614bc030965a763c",
      "id" : "412000025"
    },
    {
      "hash" : "0xf92f1cdcab547233b2280c8b4d4aad9bac8ac244fdaefc4d0abfe2c5f0bc170b",
      "id" : "412000124"
    },
    {
      "hash" : "0x1478432eef098d62d557c36e68155a838710b9d18e9dfcde4b47f3ed4bd0a9cb",
      "id" : "412000203"
    },
    {
      "hash" : "0x13d9e2caa815775a59c049ddc5ee5e62ab2c0273d6cd67ac23d4f95bcc95fdd3",
      "id" : "412000014"
    },
    {
      "hash" : "0xdfc0d9912ca64dea261c241f825507804cd8142ba8763a70d480dd8a7169c0a9",
      "id" : "412000053"
    },
    {
      "hash" : "0x3f23466ac9a61e331b924736e9b7e82470b62d52d0db553dbec234d3a1ceff66",
      "id" : "412000260"
    },
    {
      "hash" : "0xb0e23c30f8cd4fb8323ac4ee4159042e4dd5f72e61f3db53f4c46df3d9cb992a",
      "id" : "412000284"
    },
    {
      "hash" : "0x7e7dbfcc1414c4ad2ff0c0bbb410014f91b99427fdf3c22bea03f213d0176374",
      "id" : "412000100"
    },
    {
      "hash" : "0xbcb22d75c0b821fe7833416cc638894e331f5fb2e97a5feac421b81ffd3842ea",
      "id" : "412000268"
    },
    {
      "hash" : "0x75c80eabca45b2105e07a9678490e689f8a4ebe382cdb07ba2ce10c4d1bf23b4",
      "id" : "412000168"
    },
    {
      "hash" : "0x03b8a48bc007251b22b1609b9a6d50fb03e98354571dc0c76567a23a1a2497d9",
      "id" : "412000186"
    },
    {
      "hash" : "0x6ad1d5b81f9e9ea367ff7ffaa3c0cb2b6b25001eac99148310b281970ab650c5",
      "id" : "412000016"
    },
    {
      "hash" : "0xd7a9ee9c2fd53e092d5fdf852a62e746a5b261e31a9b0e0cf83bdd5b94e60473",
      "id" : "412000003"
    },
    {
      "hash" : "0x7481b2b19da76562d5dd43f46f64da8ec03108b3c5da04a2d71c1ec905ca462a",
      "id" : "412000106"
    },
    {
      "hash" : "0xfd75f503557cebb0d3b9e8dd79f73de87a79d35b299f03ae6721a1451dd57476",
      "id" : "412000258"
    },
    {
      "hash" : "0x7b6df74e45c33fac19c7df143a72b73029ba7a57c52fd9dc17f63608800f023b",
      "id" : "412000146"
    },
    {
      "hash" : "0xd4eb8759b14d9ec084804976b0452b583768ca06d1b8fc223d2f2cb90423a548",
      "id" : "412000254"
    },
    {
      "hash" : "0x697c77662e8119a6239e7412389b225beed006d869b3afd5e34de202398beaf1",
      "id" : "412000162"
    },
    {
      "hash" : "0x230dc8ad4a1e60ca5c8025cee061f303c2c1b234c8991277390a10a02eb9cf62",
      "id" : "412000084"
    },
    {
      "hash" : "0x5cbfdea578d867f06f7a30f780946649844fa777dbb63b70530582074bb632ff",
      "id" : "412000054"
    },
    {
      "hash" : "0x29ec291ac1e0729612c59f538eaf763913e4b9221ee388df446d0c1500cfc881",
      "id" : "412000295"
    },
    {
      "hash" : "0x244c603b6f03e2a1bcd63f1922fb288aa3a372acf1349e127aa6feaf88ecfa94",
      "id" : "412000107"
    },
    {
      "hash" : "0xfee1e7327b4c4ace5b20ca6fd261a95366853f86a3f3007d944a8c35499d9e68",
      "id" : "412000072"
    },
    {
      "hash" : "0xf53daa1c8c14ee1d53903674fb6558a8fecc41b90a1d8e6efadd2ae367d18799",
      "id" : "412000080"
    },
    {
      "hash" : "0x222171a2e0ab0460b033ee7cf6225007ecf10b648929de36f66262f25e53d94c",
      "id" : "412000043"
    },
    {
      "hash" : "0x565063c4876b9f0d695eaf15822616743eb87cdc7e15eb3f96fbfbf381e60bbd",
      "id" : "412000195"
    },
    {
      "hash" : "0xac38fb78bbd56b4408baf1acf4ffe7ff7e9c03bf0b12e0437f0eeedfc23b2d4b",
      "id" : "412000243"
    },
    {
      "hash" : "0xe6de32b3960385e5e7b343b876c5b6f8ee51cfa5cb8ebf7e3b23809808b6537d",
      "id" : "412000052"
    },
    {
      "hash" : "0xc47b13c886bd476330491e46c051e79b25021de8b4e9188108d635f9e6543d7b",
      "id" : "412000175"
    },
    {
      "hash" : "0xaf2a522a4b94ab40edd956f8ea3eaf55bd4282bff4e4a1beacf2ddbe7ed0fcbb",
      "id" : "412000112"
    },
    {
      "hash" : "0xd15e73c3bf2ec613ed0c10eef36ce0db9d0a87fddb013c5e3fe0aa612c5ffd08",
      "id" : "412000066"
    },
    {
      "hash" : "0x98e2cf89021d1f5043fad31851e78629e9742b994c6b7e9d5af7cf25c232eee4",
      "id" : "412000299"
    },
    {
      "hash" : "0xb81fe13b799eae580a109865c015e5d657bb1b5efbf450c6907fd47a50919c9e",
      "id" : "412000044"
    },
    {
      "hash" : "0xee013b4c60eeddb709130b5aeec4bd7663d59a2167fab6053d890736548c7d83",
      "id" : "412000285"
    },
    {
      "hash" : "0x2ab5ba40d7f2ef39ffc0b410ab6a0cffd129a4e4c150d412a192fc2bb90dbf09",
      "id" : "412000159"
    },
    {
      "hash" : "0x5a18ce2d2c3f2cc302ce373b67db79c78a440920f778a00404595ff5a706e9b2",
      "id" : "412000115"
    },
    {
      "hash" : "0x5157e7855ae46f75fccb32ffaaa6b7e18d1367da66f850a7fc3b0dfb166fc8f7",
      "id" : "412000197"
    },
    {
      "hash" : "0x685e77b77745bc13c1d045e5028813e80d08c6f01979fd5c377dac5e375a70f4",
      "id" : "412000114"
    },
    {
      "hash" : "0x3216c5e32233e5be6db7bdafeddbae336ffce2339f54ec05c97e4ba05f8e7bd7",
      "id" : "412000220"
    },
    {
      "hash" : "0x114c29f325474e2f1dc9ccd27e39e799b0bf8510aecdfe889c9622461e74be16",
      "id" : "412000140"
    },
    {
      "hash" : "0x5a954fef3b1e5757ff0c781e5a89f33483e21b307a04bbfc7fc8b6c48a33e0df",
      "id" : "412000063"
    },
    {
      "hash" : "0x3e987dd18f63263bfa1f609318116ddd0fa68609cc22841af586df680c630db0",
      "id" : "412000275"
    },
    {
      "hash" : "0x9261ec7dab5f4135c9af566346b3040f1d4c940e3ff3d24a63f77a5d5d0f6b9a",
      "id" : "412000253"
    },
    {
      "hash" : "0xe770466a354dfa603b00acb29ea074fdfb011dcc690cf291f8006f992d8215e2",
      "id" : "412000041"
    },
    {
      "hash" : "0x62159caded44e0c7f297b9bd03fbb4521300ad0a0f0865f10d7cd9344f279209",
      "id" : "412000076"
    },
    {
      "hash" : "0xbdcdb4ad467d3c67e73024d7b176359d3138fe78126400079f5ac2615a955111",
      "id" : "412000192"
    },
    {
      "hash" : "0xa1e20c4c28b953f76164bb59336b5d76b2bd7a3e567166277e44192bfb742c4b",
      "id" : "412000172"
    },
    {
      "hash" : "0xc2013cd146853c62b13220affc1fd490fd89b9cd4860852b9f9f345bdbc5ff3d",
      "id" : "412000027"
    },
    {
      "hash" : "0xd18a32256665ab2e4f5451aff7b2e4df6a6bf5af4590d1cd71f085109ad906c0",
      "id" : "412000123"
    },
    {
      "hash" : "0x5123079967fd02a168c08ad19f8957becae0f8230e468e05daeaf20bec161c78",
      "id" : "412000015"
    },
    {
      "hash" : "0xc1590e53c9500521dc156c68bb9a7356d59697ee04475f40b6b0ecd9a70ae589",
      "id" : "412000236"
    },
    {
      "hash" : "0x7938010d1d1dcccbd3be0368929f217b1437e4d14822dd80f9801118fc7d1c91",
      "id" : "412000081"
    },
    {
      "hash" : "0x8b11122921e9eb38d247a3a127a42cf0126fbe1df90367c9d9a01e63dd2de658",
      "id" : "412000009"
    },
    {
      "hash" : "0xa0a5439ff1f62f927430e8c4581963aad0cb64d40755830efb66a64d2a8aaaef",
      "id" : "412000149"
    },
    {
      "hash" : "0x9ca56fd726fe90ac621de9a23aedc84465613d947848a2123301cb4fefc99a2b",
      "id" : "412000291"
    },
    {
      "hash" : "0xe7441a7934ce205b29b83c03baf418c7350e687a091be66cc63f466b1e00a616",
      "id" : "412000211"
    },
    {
      "hash" : "0x29420e86a2effd84eaffde6643620e4febe3fc294a8ecedb92a528fd4d897c34",
      "id" : "412000017"
    },
    {
      "hash" : "0x97025d0628443843ccaebd9d99796d6ce8ec0583237bdd99ab8781b61d9cdba4",
      "id" : "412000182"
    },
    {
      "hash" : "0xcc83671787551bdf17e9a89029dbc1034d92990229e63f8fe3d5bafdd7568437",
      "id" : "412000292"
    },
    {
      "hash" : "0x91700f99b8f313b6e1f8469799763e272d4815c7f701ed7f9a967461037d8b5f",
      "id" : "412000267"
    },
    {
      "hash" : "0xc2c4105126c7a78430d0ab42383be5f471416cd875947390d1811caa822ed6d0",
      "id" : "412000085"
    },
    {
      "hash" : "0x0df1bf53fa0aef50e2846d689fbdffd22606eb4834ad5deecbf886b1ca75f0e2",
      "id" : "412000240"
    },
    {
      "hash" : "0x34ed7c6d387179a47cc3a100d26583a71b7ac6a406aa247a329620c13374cfa4",
      "id" : "412000068"
    },
    {
      "hash" : "0x8740900b7777b83806421f411bf53ab81ad80d5aed011d7139bd0f7190af3329",
      "id" : "412000078"
    },
    {
      "hash" : "0xa848da27ac33ca2b36f99cad343b766a89081fdbed03d3e7fa3b793518d813c0",
      "id" : "412000096"
    },
    {
      "hash" : "0xb837ca11721594b44d9e72c98a6f85c0cc088786dd29f96f80e6d0514e50bb90",
      "id" : "412000219"
    },
    {
      "hash" : "0x78fadb63cbf863e5dd68a606a2b89cfef4f11945aa00932e0a961761f3b4cfda",
      "id" : "412000026"
    },
    {
      "hash" : "0x53ffa2ccdc6ef82c8dfe5068138f3c206c9879d378f7ceb9899144cf945207f3",
      "id" : "412000279"
    },
    {
      "hash" : "0xb7d15ee4f961d5aaeac14aec76e0f7573cd1ee873bc1be8b29e7696d7746cc87",
      "id" : "412000089"
    },
    {
      "hash" : "0xdf9795b5e523a0362239c57eea61b32216500e1f1d13d6d520342dd5a4c0460c",
      "id" : "412000141"
    },
    {
      "hash" : "0x924430e150e01581d2b84f6e65246dd1d266a916641e5c73bdb841785cd5072b",
      "id" : "412000059"
    },
    {
      "hash" : "0xc3727e312573e4dcd49e53b91def16b1701e061721562b705ccc5bf668bce081",
      "id" : "412000133"
    },
    {
      "hash" : "0xf8946298e885ac8fe4a7fb39c84645d90229df3324e118b1daf11a49c683b307",
      "id" : "412000143"
    },
    {
      "hash" : "0x056efce6b195f0f12b3d0479afec4bc3b6ce755b55ac300cd4c944c04e3cbaa7",
      "id" : "412000065"
    },
    {
      "hash" : "0x5ec534b3422cda2dcae2ca2526db43b2341339c0a6338573e01cb2abec7d973a",
      "id" : "412000241"
    },
    {
      "hash" : "0x69599c0afa5be37c0755527ec63e41d7af2734d74e6ad85559fece344001bda8",
      "id" : "412000280"
    },
    {
      "hash" : "0x1e0db30bc8693024507fc57271fa56fc7dc024f95ccffe157695efeb39d97af8",
      "id" : "412000042"
    },
    {
      "hash" : "0x7662a68b7fdcd18264cf95992ba46921405ba80d6722e2f8e981a00f3234622a",
      "id" : "412000151"
    },
    {
      "hash" : "0xa2e41d11a1f2740bae0b57aeddd9afcb2978627aa282a9664084a506ef1828c6",
      "id" : "412000238"
    },
    {
      "hash" : "0x2f11768a64323ee630000119f7df87386d111f4b678c886a4034ff1a61214185",
      "id" : "412000245"
    },
    {
      "hash" : "0x1ba6e4fea82f9667fb90a98208405a4e2bf1bfc41edaf8dfed739f831070511b",
      "id" : "412000030"
    },
    {
      "hash" : "0xb0f1c10506b3334900c7fbca9f9c1afc608632495f92e1aaceb25a4800010b22",
      "id" : "412000252"
    },
    {
      "hash" : "0x8e7cfa45c4fb6b0a7c88624495a0216f39ab880d5418d83c6fcc63131a8c3356",
      "id" : "412000259"
    },
    {
      "hash" : "0xe5cfc80eaa3fb2bfc09ece9c3bf1ead4bfcd007991e38b91027c8398e85c0c8a",
      "id" : "412000058"
    },
    {
      "hash" : "0xa0a536fe5ebf6eeef537f3ec5b00447545df2dc2d740d5537937e6f8264213fb",
      "id" : "412000164"
    },
    {
      "hash" : "0x0955bfc28beb9fa6035539a807b0f7a08ae521a603050e5c3f5f5662009939cc",
      "id" : "412000282"
    },
    {
      "hash" : "0xf99703a20d7315945fb7a3f41f1f2ca1d87b18a9bea366f49a79ac85d34de1a8",
      "id" : "412000210"
    },
    {
      "hash" : "0x9e474bb726313b8915d821658051d43254d2a8bc25dc03c8708d909a76a49ba4",
      "id" : "412000277"
    },
    {
      "hash" : "0xe48e59f6adf3dbadc8b4a2b38e0fa147ae67abb1cea9978349a65f615197c99c",
      "id" : "412000274"
    },
    {
      "hash" : "0x37747ec0de947f5ef74364e0f5c20faafc6a08e47ed9e21d35821b646f8343e8",
      "id" : "412000023"
    },
    {
      "hash" : "0x0efba1103177ea2562bb6a15c1d38b0bbc38dc04f206cec01b84a5421e4d8707",
      "id" : "412000222"
    },
    {
      "hash" : "0xd243c9a3b57e697027915e09b8bd145f2607bc3c657f579e569706e0c2c9277b",
      "id" : "412000129"
    },
    {
      "hash" : "0xd9f1c7ae899a6cffa235e473c5eedfc99066ff08b1371e5a0f0cd0c329584a65",
      "id" : "412000180"
    },
    {
      "hash" : "0x6666ebced55ee87cf224cedb3a39a0d68a6026a3d13fea483c56354043f709b9",
      "id" : "412000226"
    },
    {
      "hash" : "0x81844e107668a4cce71c799fcabf4f01d58223d551588ac0d3e02e27fc958731",
      "id" : "412000230"
    },
    {
      "hash" : "0xff5eaaabc9694a6827aff1a00530c674b4bfe131ba253536d00d16cc1044d125",
      "id" : "412000119"
    },
    {
      "hash" : "0x8afaad76374836f466a5aef876e7c74647fa20bf1a86a43a952756e52591230a",
      "id" : "412000174"
    },
    {
      "hash" : "0xf193657264770db7fa92b06c1ef09408ffcbb82ed86de55732dda877e15ec0fa",
      "id" : "412000067"
    },
    {
      "hash" : "0x5a2e6cb06b8323fa1a28dbce4a429091a4bc0eede4ab7f2fbdb55a339f50e5af",
      "id" : "412000048"
    },
    {
      "hash" : "0xf15bad37c17e585971cc1aed0da9cb4444bd231fb5d48dfd8276d03c21d9fc56",
      "id" : "412000199"
    },
    {
      "hash" : "0xa7e776abbae2c324e23fb1415d2b0eece4557d6b12815723502a576a5d646c56",
      "id" : "412000121"
    },
    {
      "hash" : "0x6ebbc5c20a98e9b446b0f02c947de147c6ed98d2c19e2df98e506a90f458af13",
      "id" : "412000004"
    },
    {
      "hash" : "0xf59d486bc5a7a037c75bc1f5d0a3c9a3f44a5d8c83ed5ac7483dccc72c8fbe92",
      "id" : "412000263"
    },
    {
      "hash" : "0x2a9b4c68e58aa90d6a2de53858e03f6436d7b0b8f4c0c5f2069eda18df2e7764",
      "id" : "412000181"
    },
    {
      "hash" : "0x75664c6ed3d4231689e492f12c7a5dc9dddcaef790291680ce1d20e007c0b3c4",
      "id" : "412000069"
    },
    {
      "hash" : "0xf18955174b1dd603a9a02f58b262cd2eee445912eaa09c4df08f45643609ab85",
      "id" : "412000191"
    },
    {
      "hash" : "0xd33a96edfd926b8267ca9338c09aa38e4302694c774aa5214669979318ba79e0",
      "id" : "412000056"
    },
    {
      "hash" : "0xe708f478722bd0e97bebfd3a26da0e9412d418532c548f2bf91aaf44443aac71",
      "id" : "412000247"
    },
    {
      "hash" : "0x482d541025c3b31157dc15615d67ed80691686ae1db9d633797dab87f0eebe98",
      "id" : "412000040"
    },
    {
      "hash" : "0xb52900b76be58867d9aa37081eb3697f53b9e4e1ee90345c79d4839d91860411",
      "id" : "412000055"
    },
    {
      "hash" : "0xf42e74eef6ff3bdd5499d656a1a2f0809e4a5c15bb12d9eff8dd30099759c4fe",
      "id" : "412000075"
    },
    {
      "hash" : "0x12c8f216c09f748513da5db800a9508e663c6b40685afe8f9ddce7003d6a8d7c",
      "id" : "412000131"
    },
    {
      "hash" : "0x4ec863bb0b616f159bb18e6de8021d82ac26820ceee85e112e56a90d97f9e047",
      "id" : "412000156"
    },
    {
      "hash" : "0x5d5870ac52cfdb132fd9028d797fe7dff49916a5921e0d3705ac1b4beb350b83",
      "id" : "412000171"
    },
    {
      "hash" : "0xcb70befb0afc468bb377d5143034e709f097cf4c44b156d589d43450e2657a85",
      "id" : "412000038"
    },
    {
      "hash" : "0x6d1d1483914bfe695dcc24426a53414151893c1b50b401abed0b444b1032e4fe",
      "id" : "412000289"
    },
    {
      "hash" : "0x8291a8da0961471f04ef62d17335ba377ee1c77ded0ef96c658fdadc1af7b2e3",
      "id" : "412000093"
    },
    {
      "hash" : "0x4d28c52458d2db90e82a64133e91c2c68a6addc7b90858a0db7be84394dcd335",
      "id" : "412000139"
    },
    {
      "hash" : "0x49aee3f83c8df356d0b57eada733797bbef91c5dd23f2d197dc69efe571e73ec",
      "id" : "412000111"
    },
    {
      "hash" : "0xa04388c18a0c78f21b5a34ee68eeb67de0af18ab90aa402f0ac3879126dc637c",
      "id" : "412000145"
    },
    {
      "hash" : "0x19a30f4e3b79ef6ae532e59bc962baf55d91c5d77a098598b1aa420a285aae43",
      "id" : "412000213"
    },
    {
      "hash" : "0xe63a4f6a15915a79808a8d05ec137cf6e4017470cd8021cd9edd31698e86bc7f",
      "id" : "412000070"
    },
    {
      "hash" : "0x0dda21b595e601085ab17eef4fb65fd5b14f042062a8680d594e3442510b57e6",
      "id" : "412000221"
    },
    {
      "hash" : "0xdf85c1fc8426286ecd351bc05da43825e02cd727eeb3f8af8766a17044884e01",
      "id" : "412000264"
    },
    {
      "hash" : "0xac7d282f6ee7919421fb7e70889bd95d3115021214fd4b449adfb138b337b0f3",
      "id" : "412000239"
    },
    {
      "hash" : "0x3f82a2eb2bfcf0aa09363f048b80ac30f1bc996dc0b44b5414e95160ca35ac1c",
      "id" : "412000276"
    },
    {
      "hash" : "0xa25f7c3fbc1b31efd3aef3e4e6a238e4ac6b9301147f51a32911a45356623822",
      "id" : "412000007"
    },
    {
      "hash" : "0xd5b6e2c2ca3f861780d393cfc1bb1652e7c998d3d9cd0da1aa07b87bd337489a",
      "id" : "412000045"
    },
    {
      "hash" : "0xdcebf94488f41c8b42bb993597bc7f8b12a8881ec4327a15842c1ab532e1d99f",
      "id" : "412000032"
    },
    {
      "hash" : "0x46c2abf355a912211c169e479c77f930ff2a5faa98f5b928e04d6bd13f6669d7",
      "id" : "412000086"
    },
    {
      "hash" : "0xdcb6b83020331cd834aa451bd895acc9d1c43cde4625fd862447f53381b664fe",
      "id" : "412000022"
    },
    {
      "hash" : "0x23f0f96a812ef27c9fea8eeb7ec63c5943bf6c008eb71068242e02ab4aa6a665",
      "id" : "412000160"
    },
    {
      "hash" : "0x5ef3414d18afe4ca54b5579f511d67ba7d706cf591beb0de01710526b5512800",
      "id" : "412000127"
    },
    {
      "hash" : "0x98b55a6fbc0dfb0b1ce2fdf0730e640215f3bba7d85961d91aafa5f164fc775e",
      "id" : "412000229"
    },
    {
      "hash" : "0x89012900de3ddc071eda7984dacb747caae4f4922a77cb215603dcfe9f97344a",
      "id" : "412000010"
    },
    {
      "hash" : "0x5af7a3a65426bf03966c7082a81b2651018b072be46bec521bdab89ace146315",
      "id" : "412000011"
    },
    {
      "hash" : "0x458a22db198129a65fd8e0c642da3107ad1914d39124516f0c61bc98369954e5",
      "id" : "412000071"
    },
    {
      "hash" : "0x215d3ee047121e5f35b90fd0b8fd19da6886ef7359ea1ac78b44b57e4aacee94",
      "id" : "412000006"
    },
    {
      "hash" : "0x2098426037eb4c3a9f257ebc4dfdabfe80e4f8a0547768ca4bdfe7f52cca80bb",
      "id" : "412000189"
    },
    {
      "hash" : "0xa8de304358045e1e6bfc56f8dddf8032ea22a2f74dab624d9acbd7cbee7414ab",
      "id" : "412000132"
    },
    {
      "hash" : "0x6eecf887147472f58dc7546bc6dec3d6c6020082cc387137abd19dea5caa055b",
      "id" : "412000090"
    },
    {
      "hash" : "0x6c60c371bcd22be1a8271872c1043c2a5e2701671b8a34f70c17b2e4c0dac5c8",
      "id" : "412000272"
    },
    {
      "hash" : "0x3f7e2f1b748cab1ad2227b253dff5f97239d2f7e02aab87a2df5c420c2cb189d",
      "id" : "412000269"
    },
    {
      "hash" : "0x779146fdf16fe1b3c75cd68fb7e8d9d71687048d2349e456b2129ba95e65489a",
      "id" : "412000161"
    },
    {
      "hash" : "0xdd6ee466bd745575abc1465fa384170bccfc37095f23dff6e59633afad889fdf",
      "id" : "412000286"
    },
    {
      "hash" : "0xe6e45f23ff5e09c8a18ccd97810b22b165a099e3aae495bac88efbd7f43c589b",
      "id" : "412000255"
    },
    {
      "hash" : "0x3160e58faa105d95c14751f4a7eb6a4f2de63f551db714732064499488ec4339",
      "id" : "412000037"
    },
    {
      "hash" : "0xae5d480c406058c5ef0de11313913cb1c64d9d43892ef7045e9d253c9f009cc1",
      "id" : "412000169"
    },
    {
      "hash" : "0x00becbb2f99b84365dde0dde6a68c7b707f85a08c960651bd50dd092404eaab4",
      "id" : "412000088"
    },
    {
      "hash" : "0x69a2af23ede29b47538ca0ac86bd1172ddb42b7bf38d5c5beebb295b829cbd87",
      "id" : "412000206"
    },
    {
      "hash" : "0x8d100915be48edefa8a9f68de2ae2bbfae1152458669fd617ea1b35c7ef81b32",
      "id" : "412000029"
    },
    {
      "hash" : "0x736b84431e75516476afefb464ca42fcd673860c721f427ccee28eb539035454",
      "id" : "412000183"
    },
    {
      "hash" : "0xd4dcbea36f52e4b8ddeb73c730e0913767df8f31b1f59969e85f3cbfce48c2a0",
      "id" : "412000148"
    },
    {
      "hash" : "0xca942ecb13911355bf59c78118ae44364697e89570f3004de3328a7e8f01a6ed",
      "id" : "412000198"
    },
    {
      "hash" : "0x34e17d28236953cb49675197335bbfff27d2459cb4174f08ea496c1861581a01",
      "id" : "412000288"
    },
    {
      "hash" : "0xa6c3005cd9943951da41ce34e1fb753d217bfe7c52e9825c7de122bd01b58355",
      "id" : "412000074"
    },
    {
      "hash" : "0x297b92fa414921cc42b34ccaec2d7e983a6659d64e620bd54797e7cade393c63",
      "id" : "412000142"
    },
    {
      "hash" : "0x50aadb853bf0663dfef1241b3bc38cc86e5780fa28dfbb6600ff60df86ce7f70",
      "id" : "412000033"
    },
    {
      "hash" : "0x81fbff14a887af9455ae6f575d7ce01315063f820edac6e80db43e09f8b500af",
      "id" : "412000190"
    },
    {
      "hash" : "0xda2fdf43d60996fbd66bfaaa9d34fbd3833cb9aac74d0bf3f773200683f79ccd",
      "id" : "412000215"
    },
    {
      "hash" : "0x182d787aa1db792e5e0cc353d9c6d3e6761fb5e2fc770dbd4b54842546c2f21e",
      "id" : "412000046"
    },
    {
      "hash" : "0x25dd52e1291e2392212111d4400309680b8a93a2df38a031b3157e9b1d5428c2",
      "id" : "412000047"
    },
    {
      "hash" : "0x514fb6d33b7c0c8eb1bb87b141bde32a7caf8ac3708bba34ec39c45f9ff771ba",
      "id" : "412000082"
    },
    {
      "hash" : "0x41325b8f587c53be4b07a8e9aa7314add0e2081eea8b4b4b0efa350542cdb768",
      "id" : "412000231"
    },
    {
      "hash" : "0x537276b7773e02a75d641e85394614b349983cc71d7158877ada20d322db858e",
      "id" : "412000225"
    },
    {
      "hash" : "0xd6a60de14ae12d12b693692baf3416dc0952ee7d92c798f5d1a97689d5195360",
      "id" : "412000270"
    },
    {
      "hash" : "0x339ea556a371eb34fb07de1d4054b20f72fe6b8a47718d7ba7a953e088e08a6f",
      "id" : "412000271"
    },
    {
      "hash" : "0xce16d6e30b491e4a30dad4e35ac3562d072028d498a1bef8e514def54a5f52ab",
      "id" : "412000000"
    },
    {
      "hash" : "0xb2cc2547eaf4202e274b0348776c87b85004c5d452e62bf6568d19411cca7f9c",
      "id" : "412000278"
    },
    {
      "hash" : "0x5d7a074df02e9eaecef0d150d7310da9a621289fe3afc456e5019a7fceafca83",
      "id" : "412000176"
    },
    {
      "hash" : "0x74199cd18d1d7239fc3b3b236882afb837a0a1ee4de1952e139837480b81c871",
      "id" : "412000214"
    },
    {
      "hash" : "0x3cfa6b56046cb035e68d5060a719617b44c12103df23e069b4a444a0562ae80e",
      "id" : "412000209"
    },
    {
      "hash" : "0x3877d67578230ecbf2dd87e6779a033ceeeb8f77ff60fdd1d2896d21cc066f8f",
      "id" : "412000281"
    },
    {
      "hash" : "0x0d998843cca24c7745161b3f2f68a1e357a3072c9e48fb6201dd71827368c1c7",
      "id" : "412000196"
    },
    {
      "hash" : "0x1adced55b5dbe82ad4896c9380ed796af6825e2d489d36cf8068828f3237690f",
      "id" : "412000125"
    },
    {
      "hash" : "0x78d7d072f48e72e94b4330d9dbca93dd47811ee537d3b337fc0d62597673aca2",
      "id" : "412000152"
    },
    {
      "hash" : "0xa3859a7392f336dacb0daa7e3dac90ffbf652315bfd2e4a1c98586868448c6f7",
      "id" : "412000177"
    },
    {
      "hash" : "0x3c70017b1418b27da6103885bef8ec631a68ef6820eb177f7111f30674522c80",
      "id" : "412000153"
    },
    {
      "hash" : "0x77c890def7a6715e0b558eab42cd82e9976eb0232d4d3bfa0a3cf149192aadfa",
      "id" : "412000249"
    },
    {
      "hash" : "0xc5d9dffc196cea8b1ae3289e52510728f78050217859f4446686662d3bbc4310",
      "id" : "412000224"
    },
    {
      "hash" : "0xc0e3190ee5682e7917ba8b9c748c64ec81f672cbc65691b8a7d3b7921042f8af",
      "id" : "412000005"
    },
    {
      "hash" : "0x6cd6d7ad563f1e90fd96ded53455d9a4e12cbfdb07d45424fca1efef97a19cef",
      "id" : "412000013"
    },
    {
      "hash" : "0x43ef6a19468be5dd7304af7a6d6681c5ddf9ee279798d7df8dceaf2c66bfe7f4",
      "id" : "412000020"
    },
    {
      "hash" : "0xe49e6aa5b6a4cfd62b1f3b46cfe6b0009bdfe7b7d3b90c5c8953f6460c676f00",
      "id" : "412000021"
    },
    {
      "hash" : "0x7e54bbe6b78a7b8f7bf8e508977fcef4166361d1f268ffcef2874fdf34a0fc8c",
      "id" : "412000083"
    },
    {
      "hash" : "0x7556a07aaaa63a2c1579bd0c35f04ad42a7ca90c07a521bbea71f3f39f21c0ed",
      "id" : "412000120"
    },
    {
      "hash" : "0x5e10134d4adc6adb4452fd96e58ea144b03077c944c000133315798a6aa6c54b",
      "id" : "412000138"
    },
    {
      "hash" : "0x1b8941a26aa570c98301d3ad0a81de6a6fedb7428f0653f302edd1e4b718ffe7",
      "id" : "412000165"
    },
    {
      "hash" : "0x268aba4e0748d3fe2d45245b4c74b33b73a642263f88165ada6b1c1132822a69",
      "id" : "412000091"
    },
    {
      "hash" : "0x90f60142cd44c2e3c79a8f4a7d4e1893e8e29ee9d81ce2a37dcf51376d4ce62b",
      "id" : "412000012"
    },
    {
      "hash" : "0xf30cf396c0720fa54baaabce01d70423b63d8b9b114e847adf7a2a24ddf0a458",
      "id" : "412000077"
    },
    {
      "hash" : "0x5514a52311e9702d14cb085ea72251be7ab32c456b5361e4158f352c662ef88f",
      "id" : "412000256"
    },
    {
      "hash" : "0x0168d8eb4e745468bfa638cdff4c005e4d9976fc19ba5041473bdf610608b5ae",
      "id" : "412000001"
    },
    {
      "hash" : "0x2fb993414fe089e8a8771de6ca82ade5f2a8d2b9b32fed91ef8afeca341c47df",
      "id" : "412000244"
    },
    {
      "hash" : "0xd89ef5ccde896a323a73f8d105d31a00f2ccf684c84f42f6ed730b74edec31bd",
      "id" : "412000294"
    },
    {
      "hash" : "0xe7a0dd91cdeaef6e4c7a37b8bd271bcd11f1430ac0c96a0e74eec7f1908381d0",
      "id" : "412000232"
    }
  ]
}