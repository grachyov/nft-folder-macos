{
  "contractAddress" : "0x0a1bbd57033f57e7b6743621b79fcb9eb2ce3676",
  "kind" : "p5js",
  "projectId" : "80",
  "script" : "let time;\nlet posn11=[];let posn12=[]; let posn21=[]; let posn22=[];\nlet mg1,mg2;\nlet eWH;let w1,w2;\nlet cvGWH;let cvPWH;let ecvp=.1;\nlet oWm=150;let sa;let r1,r2;let ESC;\nlet trcA;let XtrcA;let trcD;let XtrcD;let initmsA;let duradaA=20;let initmsO;let duradaO=20;\nlet clrs=[];\nlet ptt=[[\"#102C42\",\"#144251\",\"#164B5B\",\"#2C7063\",\"#DDD0A3\"],[\"#FFEDBF\",\"#F7803C\",\"#F54828\",\"#2E0D23\",\"#F8E4C1\"],[\"#212C32\",\"#496C7F\",\"#B4C1B7\",\"#ECE1C5\",\"#F0D2AE\"],[\"#FFFFFF\",\"#2D1E94\",\"#190D69\",\"#0A0241\",\"#06022E\"],[\"#CBDCEE\",\"#CEFF9D\",\"#E6FC51\",\"#FBDD25\",\"#000000\"],[\"#2E2833\",\"#C96E4D\",\"#E68F3D\",\"#D5B06F\",\"#8DC5B5\"],[\"#00B7FF\",\"#000000\",\"#FFFFFF\",\"#E4E4E4\",\"#00435E\"],[\"#127965\",\"#F7E229\",\"#FBF1CC\",\"#FACF6E\",\"#FE6421\"]];\nlet ptt2=[[\"#b16040\",\"#cda461\",\"#2c7063\",\"#164b5b\",\"#b16040\"],[\"#086d83\",\"#38b2ba\",\"#FFEDBF\",\"#f54828\",\"#2e0d23\"],[\"#b8b2a0\",\"#6f4621\",\"#c89261\",\"#4d5d68\",\"#b8b2a0\"],[\"#b4c15c\",\"#d6ee27\",\"#82b401\",\"#10046f\",\"#3d22fb\"],[\"#032351\",\"#cbdcee\",\"#1b209d\",\"#151f2c\",\"#ceff9d\"],[\"#076353\",\"#5f9d82\",\"#481546\",\"#593678\",\"#9b461a\"],[\"#e41679\",\"#ff055e\",\"#1b2843\",\"#e4e4e4\",\"#e43d05\"],[\"#01225e\",\"#040fa3\",\"#fd423d\",\"#fbf1cc\",\"#ec1544\"]];\nlet nptt;let llv;let blb;let cs;let R;let fl;\nsetup=()=>{\nR=new Random();\nmF=Math.floor;mC=Math.cos;mS=Math.sin;cg=createGraphics;mX=Math.max;mN=Math.min;cv=createVector;\nlet llenc = createCanvas(eWH=1500,eWH);\nllenc.id(\"llenc\");\ndocument.getElementById('llenc').style.imageRendering = \"crisp-edges\"\npixelDensity(1);noCursor();frameRate(20);\n\nESC=1;time=0;trcA=.0;trcD=.0;cs=[];\nmg1=mF(eWH*.55);mg2=mF(eWH*.7);pd=pixelDensity();\noWH=(mN(windowWidth,windowHeight))\/pd\nresizeCanvas(oWH,oWH);\nllv=R.random_num(0,4294967295);\nnptt=mF(R.random_num(0,8));\nfor(var i=0;i<8;i++) clrs[i]=ptt[nptt][i];\ngs=oWH\/eWH;sa=mF(eWH\/oWm);\n\ncvGWH=mF(eWH);cvPWH=mF(ecvp*eWH);\npgf=cg(eWH,eWH);pgb=cg(eWH,eWH);pgbl=cg(eWH,eWH);pgp=cg(eWH,eWH);pgal=cg(eWH,eWH);pga=cg(eWH,eWH);pgo=cg(eWH,eWH);\npgb.blendMode(DIFFERENCE);pgbl.blendMode(DIFFERENCE);pgb.noStroke();\n\npgbn1=cg(cvGWH,cvGWH);pgbn2=cg(cvGWH,cvGWH);pgbnMix=cg(cvGWH,cvGWH);\npgbnMix.blendMode(ADD);blb=new BlobDetection(cvGWH,cvGWH);\npgbn1.stroke(0);pgbn1.strokeWeight(2);pgbn1.fill(128);pgbn2.stroke(0);pgbn2.strokeWeight(2);pgbn2.fill(128);\n\npgfbn1=cg(cvPWH,cvPWH);pgfbn2=cg(cvPWH,cvPWH);pgfbnMix=cg(cvPWH,cvPWH);pgfbnMixTh=cg(cvPWH,cvPWH);pgfbnMixTh2=cg(cvPWH,cvPWH);\t\npgfbn1.scale(ecvp);pgfbn2.scale(ecvp);pgfbnMix.blendMode(ADD);pgfbn1.noStroke();pgfbn1.fill(128);pgfbn2.noStroke();pgfbn2.fill(128);\n\nnoiseSeed(llv);\nXtrcA=mF(R.random_num(12,17));XtrcD=mF(R.random_num(328,438));if(R.random_dec()<.5) XtrcA=-XtrcA;if(R.random_dec()<.5) XtrcD=-XtrcD;\nr1=mF(R.random_num(8,15));r2=mF(R.random_num(10,17));\nlfr=R.random_dec();fl=0;if(lfr>0.6)fl=1;if(lfr>0.8)fl=2;if(lfr>0.92)fl=3;\n\nlet u=2.;let k=2.;let s=2.;\npgf.clear();pgf.background(0);let c2=color(clrs[2]);c2.setAlpha(45);pgf.fill(c2);pgf.noStroke();\nfor(i=0;i<200000;i++){u=R.random_dec()*eWH;k=R.random_dec()*eWH;s=noise(u*.01,k*.01,8)*eWH*.002;pgf.rect(u,k,s,s);}\ncleL(pgal,eWH*.8,eWH*.2,98);\npgo.clear();for(i=0;i<R.random_num(18,36);i++) cleA(pgo,R.random_dec()*eWH,R.random_dec()*eWH,R.random_num(8,16),mF(5.*R.random_dec()));\npga.clear();cleT(pga,eWH*.8,eWH*.2,98);\n}\n\ndraw=()=>{\npush();scale(gs,gs);\nif(ESC==1){\ntime +=.01;\ncreaOna();pgb.clear();ona1(pgb,1);ona2(pgb,1);pgfbn1.clear();ona1(pgfbn1,2);pgfbn2.clear();ona2(pgfbn2,2);\n\npgfbnMix.clear();pgfbnMix.background(0);pgfbnMix.image(pgfbn1,0,0);pgfbnMix.image(pgfbn2,0,0);\npgfbnMixTh.copy(pgfbnMix, 0,0,cvPWH,cvPWH, 0,0,cvPWH,cvPWH);pgfbnMixTh.filter(THRESHOLD,.8);\npgfbnMixTh2.copy(pgfbnMix, 0,0,cvPWH,cvPWH, 0,0,cvPWH,cvPWH);pgfbnMixTh2.filter(THRESHOLD,.1);\n\nbw1=false;w1=0;\nfor(let i=0;i<cvPWH;i+=3){for(let j=0;j<cvPWH;j+=3){let bright=brightness(pgfbnMixTh.get(i,j));if(bright>10) w1++;}}\nif(w1>90)bw1=true;w2=0;\nif(bw1){for(let i=0;i<cvPWH;i+=3){for(let j=0;j<cvPWH;j+=3){let bright=brightness(pgfbnMixTh2.get(i,j));if(bright>10) w2++;}}}\nif((w2>920)&&bw1) ESC=2;\nif(fl==0)image(pgf,0,0);image(pgb,0,0);image(pga,0,0);image(pgo,0,0);\nif(fl==1){push();scale(-1,1);image(pgf,-eWH,0);image(pgb,-eWH,0);image(pga,-eWH,0);image(pgo,-eWH,0);pop();}\nif(fl==2){push();scale(1,-1);image(pgf,0,-eWH);image(pgb,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\nif(fl==3){push();rotate(radians(90));image(pgf,0,-eWH);image(pgb,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\n}\nif(ESC==2){\npgbn1.clear();ona1(pgbn1,2);pgbn2.clear();ona2(pgbn2,2);\npgbnMix.clear();pgbnMix.background(0);pgbnMix.image(pgbn1,0,0);pgbnMix.image(pgbn2,0,0);\npgbnMix.filter(THRESHOLD,.95);pgbnMix.loadPixels();\nblb.computeBlobs(pgbnMix.pixels);\nlet nn=0;\nfor(let n=0;n<blb.getBlobNb();n++){b=blb.getBlob(n);\nif(b){let bw=(b.xMax-b.xMin)*eWH;let bh=(b.yMax-b.yMin)*eWH;if(bw>70 && bh>70){let punts=[];let rp=mF(mX(bw,bh)*.02);\nfor(let i=0;i<rp;i++) cs.push(new Crtll(nn,b.xMin*eWH,b.yMin*eWH,R.random_num(8,11),R.random_num(4,6),true,punts));nn++;}\nelse{if(bw>10 && bh>10){let punts=[];for(let m=0;m<=b.getEdgeNb();m++){eA=b.getEdgeVertexA(m);eB=b.getEdgeVertexB(m);if(eA && eB) punts.push(createVector((eA.x-b.xMin)*eWH,(eA.y-b.yMin)*eWH));}\ncs.push(new Crtll(nn,b.xMin*eWH,b.yMin*eWH,bw,bh,false,punts));nn++;}}}\n}\nvar ord=cs.sort((a,b)=>b.area-a.area);cs=[];\nfor(let i=0;i<ord.length;i++){cs.push(new Crtll(ord[i].id,ord[i].x,ord[i].y,ord[i].w,ord[i].h,ord[i].esD,ord[i].shape));}\ndocument.getElementById('llenc').style.imageRendering = \"auto\"\nESC=3;\n}\nif(ESC==3){pgbl.clear();ona1(pgbl,4);ona2(pgbl,4);ona1(pgbl,5);ona2(pgbl,5);ESC=4;}\nif(ESC==4){\nlet lf=0;\npgp.clear();cs.forEach(c=>{c.update();c.d();if(c.vida<99)lf++;});\nif(fl==0)image(pgf,0,0);image(pgb,0,0);image(pgp,0,0);image(pga,0,0);image(pgo,0,0);\nif(fl==1){push();scale(-1,1);image(pgf,-eWH,0);image(pgb,-eWH,0);image(pgp,-eWH,0);image(pga,-eWH,0);image(pgo,-eWH,0);pop();}\nif(fl==2){push();scale(1,-1);image(pgf,0,-eWH);image(pgb,0,-eWH);image(pgp,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\nif(fl==3){push();rotate(radians(90));image(pgf,0,-eWH);image(pgb,0,-eWH);image(pgp,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\nif(lf>cs.length*.6){ESC=5;initmsA=frameCount;}\n}\nif(ESC==5){\nlet ta=map(frameCount-initmsA,0,duradaA,0.,1.);trcA=XtrcA*easeInQuad(ta);\nif(ta>=.4){initmsO=frameCount;ESC=6;}\npga.clear();cleT(pga,eWH*.8,eWH*.2,98);\npgb.clear();ona1(pgb,3);ona2(pgb,3);\npgp.clear();cs.forEach(c=>{c.d();});\nif(fl==0)image(pgf,0,0);image(pgbl,0,0);image(pgal,0,0);image(pgb,0,0);image(pgp,0,0);image(pga,0,0);image(pgo,0,0);\nif(fl==1){push();scale(-1,1);image(pgf,-eWH,0);image(pgbl,-eWH,0);image(pgal,-eWH,0);image(pgb,-eWH,0);image(pgp,-eWH,0);image(pga,-eWH,0);image(pgo,-eWH,0);pop();}\nif(fl==2){push();scale(1,-1);image(pgf,0,-eWH);image(pgbl,0,-eWH);image(pgal,0,-eWH);image(pgb,0,-eWH);image(pgp,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\nif(fl==3){push();rotate(radians(90));image(pgf,0,-eWH);image(pgbl,0,-eWH);image(pgal,0,-eWH);image(pgb,0,-eWH);image(pgp,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\n}\nif(ESC==6){\nlet fia=false;let ta=map(frameCount-initmsA,0,duradaA,0.,1.);\ntrcA=XtrcA*easeInQuad(ta);\nif(ta>=1.){trcA=XtrcA;fia=true;}\nlet fiO=false;let tO=map(frameCount-initmsO,0,duradaO,0.,1.);\ntrcD=XtrcD*easeInQuad(tO);\nif(tO>=1.){trcD=XtrcD;fiO=true;}\npga.clear();cleT(pga,eWH*.8,eWH*.2,98);\npgb.clear();ona1(pgb,3);ona2(pgb,3);\npgp.clear();cs.forEach(c=>{c.d();});\nif(fl==0)image(pgf,0,0);image(pgbl,0,0);image(pgal,0,0);image(pgb,0,0);image(pgp,0,0);image(pga,0,0);image(pgo,0,0);\nif(fl==1){push();scale(-1,1);image(pgf,-eWH,0);image(pgbl,-eWH,0);image(pgal,-eWH,0);image(pgb,-eWH,0);image(pgp,-eWH,0);image(pga,-eWH,0);image(pgo,-eWH,0);pop();}\nif(fl==2){push();scale(1,-1);image(pgf,0,-eWH);image(pgbl,0,-eWH);image(pgal,0,-eWH);image(pgb,0,-eWH);image(pgp,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\nif(fl==3){push();rotate(radians(90));image(pgf,0,-eWH);image(pgbl,0,-eWH);image(pgal,0,-eWH);image(pgb,0,-eWH);image(pgp,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\nif(fia&&fiO) ESC=7;\n}\nif(ESC==7){\npgp.drawingContext.shadowOffsetX=3;pgp.drawingContext.shadowOffsetY=3;pgp.drawingContext.shadowBlur=9;\npgp.clear();cs.forEach(c=>{c.d();});\nif(fl==0)image(pgf,0,0);image(pgbl,0,0);image(pgal,0,0);image(pgb,0,0);image(pgp,0,0);image(pga,0,0);image(pgo,0,0);\nif(fl==1){push();scale(-1,1);image(pgf,-eWH,0);image(pgbl,-eWH,0);image(pgal,-eWH,0);image(pgb,-eWH,0);image(pgp,-eWH,0);image(pga,-eWH,0);image(pgo,-eWH,0);pop();}\nif(fl==2){push();scale(1,-1);image(pgf,0,-eWH);image(pgbl,0,-eWH);image(pgal,0,-eWH);image(pgb,0,-eWH);image(pgp,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\nif(fl==3){push();rotate(radians(90));image(pgf,0,-eWH);image(pgbl,0,-eWH);image(pgal,0,-eWH);image(pgb,0,-eWH);image(pgp,0,-eWH);image(pga,0,-eWH);image(pgo,0,-eWH);pop();}\nnoLoop();\n}\npop();\n}\n\ncreaOna=()=>{\nnoiseSeed(llv);\nrandomSeed(llv);\nlet v1=random(.002)*random(1);let v2=1.3*random(.002)*random(1);let ds1=time*random(-1,1);let ds2=time*random(-1,1);let a1=1.0;let a2=.8;\nfor(var r=0;r<r1;r++){\nposn11[r]=[];posn12[r]=[];var p=0;\nfor(var i=-mg1;i<mg1;i+=sa){\nlet dy1=noise(ds1+i*v1,2.88,0);let dy2=noise(ds1+i*v1,2.87,0);let a=noise(ds2+i*v2,2.89);dy1=(dy1-a)*a1*3000;dy2=(dy2-a)*a2*3000;yy=288*mS(i*.005);\nposn11[r][p]=cv(i,yy+dy1);posn12[r][p]=cv(i,yy+dy2);p++;\n}a1 -=.15;a2 -=.1;\n}\nv1=v2=random(.002)*random(1);ds1=time*random(-1,1);ds2=time*random(-1,1);a1=1.0;a2=.8;\nfor(var r=0;r<r2;r++){\nposn21[r]=[];posn22[r]=[];var p=0;\nfor(var i=-mg2; i<mg2; i+=sa){\nlet dy1=noise(ds1+i*v1,3,0);let dy2=noise(ds1+i*v1,3,0);let a=noise(ds2+i*v2,3);dy1=(dy1-a)*a1*2888;dy2=(dy2-a)*a2*2889;yy=277*mS(i*.005);\nposn21[r][p]=cv(i, yy+dy1);posn22[r][p]=cv(i, yy+dy2);p++;\n}a1 -=.14;a2 -=.095;\n}\n}\nona1=(pg,t)=>{\nfor(var r=0;r<r1;r++){\npg.push();pg.translate(eWH*.5,eWH*.5);\nif((t==1)||(t==3)){let cc=clrs[(r+2)%5];pg.fill(cc);}\nif(t==4){pg.noStroke();let cf=color(clrs[(r+2)%5]);cf.setAlpha(30);pg.fill(cf);}\nif(t==5){let cs=clrs[(r+2)%5];pg.stroke(cs);pg.noFill();pg.strokeWeight(1);pg.drawingContext.setLineDash([4,7]);}\npg.beginShape();\nfor(var i=0;i<posn11[r].length;i++){\nif(t==3){let p=torca(posn11[r][i].x, posn11[r][i].y);pg.curveVertex(p.x,p.y);}\nelse pg.curveVertex(posn11[r][i].x,posn11[r][i].y);\n}\nlet l=posn12[r].length;\nfor(var i=0;i<l;i++){\nif(t==3){let p=torca(posn12[r][(l-i)-1].x,posn12[r][(l-i)-1].y);pg.curveVertex(p.x,p.y);}\nelse pg.curveVertex(posn12[r][(l-i)-1].x,posn12[r][(l-i)-1].y);\n}\npg.endShape(CLOSE);\npg.pop();\n}\n}\nona2=(pg,t)=>{\nfor(var r=0;r<r2;r++){\npg.push();pg.translate(eWH*.5,eWH*.5);pg.rotate(radians(38));\nif((t==1)||(t==3)){let cc=clrs[r%5];pg.fill(cc);}\nif(t==4){pg.noStroke();let cf=color(clrs[r%5]);cf.setAlpha(30);pg.fill(cf);}\nif(t==5){let cs=clrs[r%5];pg.stroke(cs);pg.noFill();pg.strokeWeight(1);pg.drawingContext.setLineDash([4,7]);}\npg.beginShape();\nfor(var i=0;i<posn21[r].length;i++){\nif(t==3){let p=torca(posn21[r][i].x,posn21[r][i].y);pg.curveVertex(p.x,p.y);}\nelse pg.curveVertex(posn21[r][i].x,posn21[r][i].y);\n}\nlet l=posn22[r].length;\nfor(var i=0;i<l;i++){\nif(t==3){let p=torca(posn22[r][l-i-1].x,posn22[r][l-i-1].y);pg.curveVertex(p.x,p.y);}\nelse pg.curveVertex(posn22[r][l-i-1].x,posn22[r][l-i-1].y);\n}\npg.endShape(CLOSE);\npg.pop();\n}\n}\nclass Crtll{\nconstructor(id,x,y,sw,sh,bd,p) {\nthis.id=id;\nif(R.random_dec()<.5) this.cf=ptt2[nptt][(this.id)%5]\nelse this.cf=ptt[nptt][(this.id)%5]\nthis.x=x;this.y=y;this.vx=R.random_num(-23, 23);this.vy=R.random_num(-23, 23);\nthis.vida=R.random_num(200,350);this.vida0=this.vida;\nthis.w=sw;this.h=sh;this.area=sw*sh;this.gir0=R.random_num(-45,45);this.gir=0;\nthis.esD=bd;this.shape=[];if(!bd){for(let i=0;i<p.length;i++) this.shape[i]=p[i].copy();}\n}\nd(){\npgp.drawingContext.shadowColor=color(this.cf);\npgp.noStroke();pgp.fill(this.cf);  \npgp.push();\npgp.translate(this.x,this.y);pgp.rotate(radians(this.gir));\nif(this.esD){pgp.beginShape();pgp.vertex(-this.w,0);pgp.vertex(0,-this.h);pgp.vertex(this.w,0);pgp.vertex(0,this.h);pgp.endShape(CLOSE);}\nelse{pgp.beginShape();for(let i=0;i<this.shape.length;i+=4)pgp.curveVertex(this.shape[i].x, this.shape[i].y);pgp.endShape();}\npgp.pop();\n}\nupdate(){if(this.vida>0){let a=map(this.vida,this.vida0,0, 1.,0.);this.vx *= easeInOutSine(a);this.vy *= easeInOutSine(a);if(this.vida>this.vida0*.7) this.gir=this.gir0+a*60;this.x += this.vx;this.y += this.vy;this.vida -=3;}}\n}\n\ntorca=(x,y)=>{let magicn=.001;let ang=noise(magicn*x,magicn*y)*trcA;let df=noise(magicn*x,magicn*y)*trcD;return createVector(x+mC(ang)*df,y+mS(ang)*df);}\n\ncleT=(pg, x, y, s)=>{let cc = color(ptt2[nptt][0]);cc.setAlpha(10);pg.fill(cc);pg.noStroke();\nfor(i=0;i<s;i+=3){let d = map(i,0,s,s,s*2.8);cleO(pg,d,6,x,y);}pg.fill(ptt2[nptt][1]);cleO(pg,s,11,x,y);pg.fill(ptt2[nptt][2]);cleO(pg,s*.68,14,x,y);pg.fill(ptt2[nptt][3]);cleO(pg,s*.45,18,x,y);pg.fill(ptt2[nptt][4]);cleO(pg,s*.18,23,x,y);\n}\ncleO=(pgt,m,st,x,y)=>{pgt.beginShape();for(let i=0;i<360;i+=st){let xx=x+m*.5*mC(radians(i));let yy=y+m*.5*mS(radians(i));let p=torca(xx, yy);pgt.curveVertex(p.x, p.y);}pgt.endShape(CLOSE);}\ncleA=(pg,x,y,s,ic)=>{let cc=color(clrs[ic]);cc.setAlpha(20);pg.fill(cc);pg.noStroke();for(i=0;i<s;i+=3){let d=map(i,0,s,s,s*2.8);pg.circle(x,y,d);}cc.setAlpha(255);pg.fill(cc);pg.circle(x,y,s);pg.fill(clrs[(ic+2)%5]);pg.circle(x,y,s*.68);pg.fill(clrs[(ic+3)%5]);pg.circle(x,y,s*.45);pg.fill(clrs[(ic+6)%5]);pg.circle(x,y,s*.18);}\ncleL=(pg,x,y,s)=>{pg.noFill();pg.strokeWeight(2);pg.stroke(ptt2[nptt][0]);pg.drawingContext.setLineDash([5,7]);pg.circle(x,y,s*2.8);pg.stroke(ptt2[nptt][1]);pg.circle(x,y,s);pg.stroke(ptt2[nptt][2]);pg.circle(x,y,s*.68);pg.stroke(ptt2[nptt][3]);pg.circle(x,y,s*.45);pg.stroke(ptt2[nptt][4]);pg.circle(x,y,s*.18);pg.drawingContext = [];}\neaseInOutSine=(x)=>{return -(mC(Math.PI*x)-1)*.5;}\neaseInQuad=(x)=>{return x*x;}\n\nclass Random{\nconstructor(){\nthis.useA=false;let sfc32=function(uint128Hex){\nlet a=parseInt(uint128Hex.substring(0,8),16);let b=parseInt(uint128Hex.substring(8,16),16);let c=parseInt(uint128Hex.substring(16,24),16);let d=parseInt(uint128Hex.substring(24,32),16);\nreturn function(){a |= 0;b |= 0;c |= 0;d |= 0;\nlet t=(((a+b)|0)+d)|0;d=(d+1)|0;a=b^(b>>>9);b=(c+(c<<3))|0;c=(c<<21)|(c>>>11);c=(c+t)|0;\nreturn (t>>>0)\/4294967296;};\n};\nthis.prngA=new sfc32(tokenData.hash.substring(2,34));this.prngB=new sfc32(tokenData.hash.substring(34,66));\nfor (let i=0;i<1e6;i+=2){this.prngA();this.prngB();}\n}\nrandom_dec(){this.useA=!this.useA;return this.useA?this.prngA():this.prngB();}\nrandom_num(a,b){return a+(b-a)*this.random_dec();}\n}\nconst MetaballsTable={\nedgeCut:[[-1,-1,-1,-1,-1],[0,3,-1,-1,-1],[0,1,-1,-1,-1],[3,1,-1,-1,-1],[1,2,-1,-1,-1],[1,2,0,3,-1],[0,2,-1,-1,-1],[3,2,-1,-1,-1],[3,2,-1,-1,-1],[0,2,-1,-1,-1],[1,2,0,3,-1],[1,2,-1,-1,-1],[3,1,-1,-1,-1],[0,1,-1,-1,-1],[0,3,-1,-1,-1],[-1,-1,-1,-1,-1]],\nedgeOffsetInfo:[[0,0,0],[1,0,1],[0,1,0],[0,0,1]],edgeToCompute:[0,3,1,2,0,3,1,2,2,1,3,0,2,1,3,0],neightborVoxel:[0,10,9,3,5,15,12,6,6,12,12,5,3,9,10,0],\ncomputeNeighborTable:function(){\nfor (let i=0;i<16;i++){\nlet n=0,iEdge;this.neightborVoxel[i]=0;\nwhile((iEdge=this.edgeCut[i][n++])!=-1){switch (iEdge){case 0:this.neightborVoxel[i] |= (1<<3);break;case 1:this.neightborVoxel[i] |= (1<<0);break;case 2:this.neightborVoxel[i] |= (1<<2);break;case 3:this.neightborVoxel[i] |= (1<<1);break;}}\n}}};\n\nclass Metaballs2D{\nconstructor(isovalue,resx,resy){\nthis.isovalue=isovalue;this.resx=resx;this.resy=resy;this.stepx=1.\/(this.resx-1);\nthis.stepy=1.\/(this.resy-1);this.nbGridValue=this.resx*this.resy;this.gridValue=Array(this.nbGridValue);this.nbVoxel=this.nbGridValue;this.voxel=Array(this.nbVoxel);this.nbEdgeVrt=2*this.nbVoxel;this.edgeVrt=Array(this.nbEdgeVrt);this.lineToDraw=Array(2*this.nbVoxel);this.nbLineToDraw=0;let n=0,index,x,y;\nfor(x=0;x<resx;x++)\nfor(y=0;y<resy;y++){index=2*n;this.voxel[x+this.resx*y]=index;this.edgeVrt[index]=createVector(x*this.stepx,y*this.stepy);this.edgeVrt[index+1]=createVector(x*this.stepx,y*this.stepy);n++;}    \n}\n\ncomputeIsovalue(){}  \ncomputeMesh(){\nthis.computeIsovalue();let x,y,squareIndex,n;let iEdge;let offx,offy,offAB;\nlet toCompute;let offset;let t;let vx,vy;let edgeOffsetInfo=[];this.nbLineToDraw=0;vx=0.0;\nfor(x=0;x<this.resx-1;x++){vy = 0.0;\nfor(y=0;y<this.resy-1;y++){offset=x+resx*y;squareIndex=getSquareIndex(x,y);n=0;\nwhile((iEdge = MetaballsTable.edgeCut[squareIndex][n++])!=-1){\nedgeOffsetInfo = MetaballsTable.edgeOffsetInfo[iEdge];offx=edgeOffsetInfo[0];offy=edgeOffsetInfo[1];offAB=edgeOffsetInfo[2];this.lineToDraw[nbLineToDraw++]=this.voxel[(x+offx)+resx*(y+offy)]+offAB;\n}\ntoCompute=MetaballsTable.edgeToCompute[squareIndex];\nif(toCompute>0){\nif((toCompute & 1)>0){t=(this.isovalue-this.gridValue[offset])\/(this.gridValue[offset+1]-this.gridValue[offset]);this.edgeVrt[this.voxel[offset]].x=vx*(1.0-t)+t*(vx+stepx);}\nif((toCompute & 2)>0){t=(this.isovalue-this.gridValue[offset])\/(this.gridValue[offset+resx]-this.gridValue[offset]);this.edgeVrt[this.voxel[offset]+1].y=vy*(1.0-t)+t*(vy+stepy);}\n}\nvy += stepy;}vx += stepx;}\nthis.nbLineToDraw \/= 2;}  \n}\n\nclass BlobDetection extends Metaballs2D{\nstatic \nstatic(){}\nconstructor(resx,resy){\nsuper(0,resx,resy);\nthis.gridVisited=Array(this.nbGridValue);\nthis.blob= Array();\nfor (let i=0;i<5000;i++)\nthis.blob.push(new Blob(this));\nthis.blobNumber=0;this.blobWidthMin=0;this.blobHeightMin=0;this.coeff=3.*255.;\n}\ngetBlob(n){if (n<this.blob.length)return this.blob[n];return null;}\nsetThreshold(value){if(value<0.)value=0.;if(value>1.)value=1.;this.isovalue=value*this.coeff;}  \ncomputeIsovalue(){\nlet pixel,r,g,b;let x,y;let offset,offsetPix;let coeff=0.;r=0;g=0;b=0;\nfor(y=0;y<this.resy;y++)\nfor(x=0;x<this.resx;x++){offset=(x+this.resx*y);offsetPix=4*offset;this.gridValue[offset]=this.pixels[offsetPix]+this.pixels[offsetPix+1]+this.pixels[offsetPix+2];}\n}  \ncomputeBlobs(pixels,filter){\nthis.pixels=pixels;\nfor(let i=0;i<this.nbGridValue;i++)this.gridVisited[i]=false;\nthis.computeIsovalue();\nlet x,y,squareIndex,n;let iEdge;let offx,offy,offAB;let toCompute;let offset;let t;let vx,vy;\nthis.nbLineToDraw=0;this.blobNumber=0;vx=0.;\nfor(x=0;x<this.resx-1;x++){vy=0.;\nfor(y=0;y<this.resy-1;y++){offset=x+this.resx*y;if(this.gridVisited[offset]==true) continue;\nsquareIndex=this.getSquareIndex(x,y);\nif(squareIndex>0 && squareIndex<15){if(this.blobNumber<500){this.findBlob(this.blobNumber,x,y,filter);this.blobNumber++;}}\nvy+=this.stepy;}\nvx += this.stepx;}\nthis.nbLineToDraw\/=2;this.blobNumber+=1;}\ncomputeEdgeVertex(iBlob,x,y){let offset=x+this.resx*y;if(this.gridVisited[offset]==true) return;\nthis.gridVisited[offset]=true;let iEdge,offx,offy,offAB;let edgeOffsetInfo=[];let squareIndex=this.getSquareIndex(x,y);let vx=x*this.stepx;let vy=y*this.stepy;let n=0;let blob=this.blob[iBlob];\nwhile((iEdge=MetaballsTable.edgeCut[squareIndex][n++])!=-1){\nedgeOffsetInfo =MetaballsTable.edgeOffsetInfo[iEdge];offx=edgeOffsetInfo[0];offy=edgeOffsetInfo[1];offAB=edgeOffsetInfo[2];\nif(blob.nbLine<5000)this.lineToDraw[this.nbLineToDraw++]=blob.line[blob.nbLine++]=this.voxel[(x+offx)+this.resx*(y+offy)]+offAB;\nelse return;}\nlet toCompute=MetaballsTable.edgeToCompute[squareIndex];\nlet t=0.;\nlet value=0.;\nif(toCompute>0){\nif((toCompute & 1)>0){t=(this.isovalue-this.gridValue[offset])\/(this.gridValue[offset+1]-this.gridValue[offset]); \nvalue=vx*(1.0-t)+t*(vx+this.stepx);this.edgeVrt[this.voxel[offset]].x=value;\nif(value<blob.xMin)blob.xMin=value;if(value>blob.xMax)blob.xMax=value;}\nif((toCompute & 2)>0){t=(this.isovalue-this.gridValue[offset])\/(this.gridValue[offset+this.resx]-this.gridValue[offset]); \nvalue=vy*(1.0-t)+t*(vy+this.stepy);this.edgeVrt[this.voxel[offset]+1].y=value;\nif(value<blob.yMin)blob.yMin=value;if(value>blob.yMax)blob.yMax=value;}\n}\nlet neighborVoxel=MetaballsTable.neightborVoxel[squareIndex];    \nif(x<this.resx-2 && (neighborVoxel & (1<<0))>0) this.computeEdgeVertex(iBlob,x+1,y);\nif(x>0 && (neighborVoxel & (1<<1))>0) this.computeEdgeVertex(iBlob,x-1,y);\nif(y<this.resy-2 && (neighborVoxel & (1<<2))>0) this.computeEdgeVertex(iBlob,x,y+1);\nif(y>0 && (neighborVoxel & (1<<3))>0) this.computeEdgeVertex(iBlob,x,y-1);\n}\nfindBlob(iBlob,x,y,filter){\nlet blob=this.blob[iBlob];blob.id=iBlob;blob.xMin=Infinity;blob.xMax=-Infinity;blob.yMin=Infinity;blob.yMax=-Infinity;blob.nbLine=0;\nthis.computeEdgeVertex(iBlob,x,y);{\nif(blob.xMin>=Infinity || blob.xMax<=-Infinity || blob.yMin>=Infinity || blob.yMax<=-Infinity)this.blobNumber--;    \nelse blob.update();}\n}  \ngetSquareIndex(x,y){\nlet squareIndex=0;let offy=this.resx*y;let offy1=this.resx*(y+1);\nif(this.posDiscrimination==false){if(this.gridValue[x+offy]<this.isovalue)squareIndex |= 1;if(this.gridValue[x+1+offy]<this.isovalue)squareIndex |= 2;if(this.gridValue[x+1+offy1]<this.isovalue)squareIndex |= 4;if(this.gridValue[x+offy1]<this.isovalue)squareIndex |= 8;}\nelse{if(this.gridValue[x+offy]>this.isovalue)squareIndex |= 1;if(this.gridValue[x+1+offy]>this.isovalue)squareIndex |= 2;if(this.gridValue[x+1+offy1]>this.isovalue)squareIndex |= 4;if(this.gridValue[x+offy1]>this.isovalue)squareIndex |= 8;}\nreturn squareIndex;}\ngetEdgeVertex(index){return this.edgeVrt[index];}  \ngetBlobNb(){return this.blobNumber;}\n}\n\nclass Blob{\nconstructor(parent){this.parent=parent;this.pos=createVector();this.dim=createVector();this.line=Array(5000);this.xMin=this.xMax=this.yMin=this.yMax=0;}\ngetEdgeVertexA(iEdge){\nif(iEdge*2<this.parent.nbLineToDraw*2)\nreturn this.parent.getEdgeVertex(this.line[iEdge*2]);\nreturn null;}\ngetEdgeVertexB(iEdge){\nif((iEdge*2+1)<this.parent.nbLineToDraw*2)\nreturn this.parent.getEdgeVertex(this.line[iEdge*2+1]);\nreturn null;}    \ngetEdgeNb(){return this.nbLine;}\nupdate(){this.dim.set(this.xMax-this.xMin,this.yMax-this.yMin);this.pos.set(0.5*(this.xMax+this.xMin),0.5*(this.yMax+this.yMin));this.nbLine \/= 2;}\n}",
  "tokens" : [
    {
      "hash" : "0x26dd52dccd3eed1ce59b3d4a8a1051339c261753ab1ee40f720791a5890d5510",
      "id" : "80000049"
    },
    {
      "hash" : "0x07a868846bf6d4d5a8794b6f92c6a875a5d0c5c49eb204e48d61c11c2ea500cd",
      "id" : "80000035"
    },
    {
      "hash" : "0x7291e01317ef42c7e54705c1f805c2d187dec89f571cdd464c073fd0762cc2d2",
      "id" : "80000002"
    },
    {
      "hash" : "0x291b1fd5bad5f354518b3298c96afafb65bdedda8d3b12b2b6ac301691d4bd22",
      "id" : "80000017"
    },
    {
      "hash" : "0x68a5024390cbb433c862a68b3f18264bdd4355473fe1263a2dae4c7b24ccac4b",
      "id" : "80000086"
    },
    {
      "hash" : "0xe7a4ae99b709193fb62099feae249ac661aa351985a01f382fafdeb08fedf137",
      "id" : "80000056"
    },
    {
      "hash" : "0xd936984d972f762dca1f573b077471fd4daef64586edd11ab498d161b856bdb6",
      "id" : "80000087"
    },
    {
      "hash" : "0xd7f64a0c003b4729a0cc66be72bcd1f79432bf326973314dbab30f8f72b92a2f",
      "id" : "80000059"
    },
    {
      "hash" : "0x4c2c281ee3c2f2eb8c693ed112c24d9b5113fc759995bb6c62dad3347fcad0e7",
      "id" : "80000095"
    },
    {
      "hash" : "0xbb3b65a3cfc532c4a654fb839f2f87ff5bf411c5a0774a94dcb411ecae8a4611",
      "id" : "80000010"
    },
    {
      "hash" : "0x9f179cb2590031469a69bc72861ce8fa761430aff18e20700fe16fdb28f5a508",
      "id" : "80000062"
    },
    {
      "hash" : "0x967bf1ba2ca1060054dd595754a69b071313fceace9de9e5e2d01ff93a253758",
      "id" : "80000042"
    },
    {
      "hash" : "0x8d2de6ec13527b0d921711bb6e4d53b02d0622181d85e0247ba7659232d97359",
      "id" : "80000043"
    },
    {
      "hash" : "0xdc5df9246b6221a9e76564de5eed2942e56b7a178251d6a080c1add25ad8c185",
      "id" : "80000018"
    },
    {
      "hash" : "0x5de48f037c78d149115215b518b7d6029329d824d2040c6e1cfd843cd41c9eed",
      "id" : "80000091"
    },
    {
      "hash" : "0x7bc61f0297d9374a27bafe7984555f3eb91d445ec032c8d2aaeacc1382ab8e95",
      "id" : "80000065"
    },
    {
      "hash" : "0x16b68bd50f8fe8083d7125ba9a24f3f16440af07529a19416da6fe5ed68effdf",
      "id" : "80000067"
    },
    {
      "hash" : "0xbb5c8d3097a528720e404493ea6fdcda8c0b4490a40c3b6d59d7f9c0c8d09709",
      "id" : "80000053"
    },
    {
      "hash" : "0x0c198ccc54c0bc0ba4e2e711534d9bf48f56be764998d9eaf59149275f99e69b",
      "id" : "80000064"
    },
    {
      "hash" : "0xee5a47ed98c4fc710ce52793f17aa37406ed5ad044a8e445ee155dfff4f675d7",
      "id" : "80000070"
    },
    {
      "hash" : "0x109cd85dbc6d8e1f88cf7730ef3112767537ac574f5d20df28ade14548d21164",
      "id" : "80000077"
    },
    {
      "hash" : "0x5e40a60f5dcdfd297bbdca6047071aaa25eee8c4c4a0e350fbb7f6c676eb8ab2",
      "id" : "80000038"
    },
    {
      "hash" : "0x69cc376f10f348884f50c94b5cb43962043a83b53186e0a95ec87ff6509ce7e0",
      "id" : "80000033"
    },
    {
      "hash" : "0x0d057d4e822cb3bad7e91cf11d83e17261753d552e5210bcf486829ce44e679c",
      "id" : "80000001"
    },
    {
      "hash" : "0x5ae37b73bcfd3a271695e020e8c0b3b51f0267c0eb5ed91ce6311f4e6d231697",
      "id" : "80000099"
    },
    {
      "hash" : "0x89caae42354eb8e27166edbd824f24b161260644d1f7b068b258c7f6a96ac9a0",
      "id" : "80000081"
    },
    {
      "hash" : "0x4edb96c41db1f6d82dfedb8ef89d02f126aecc7103c2f3ecb33cf9907709ddbc",
      "id" : "80000076"
    },
    {
      "hash" : "0x17d9005ee1d11dd39f334446c82077f15c451ee99d5beef90cb504818cf02897",
      "id" : "80000057"
    },
    {
      "hash" : "0x571f6803c25347d7dcc0ec4ae135884201ea9cd92ec68926bc60961f18483810",
      "id" : "80000031"
    },
    {
      "hash" : "0x51b4729541feb3d61cac5f5adf0434a57cb34f5f89b553a9d8d13eff274d892c",
      "id" : "80000040"
    },
    {
      "hash" : "0xfd395c640ce207e65203586e3ca0cdaddd8d4399e991d923fec4d134473eaeb6",
      "id" : "80000052"
    },
    {
      "hash" : "0x0abd4a77d15a3772354001b9744891a394240859eefc56264836db562c4be410",
      "id" : "80000036"
    },
    {
      "hash" : "0xa97ab2631f19eb7e3123ef125bd0e513f3f82c4d7e47eb0a331827d3b70d60f9",
      "id" : "80000079"
    },
    {
      "hash" : "0xbf83214525a4a6a992a1394d2de97a162f8513dd5013f592329ce52cfe2fb037",
      "id" : "80000058"
    },
    {
      "hash" : "0x0c5f2c41f5e06173a8d5eb0d8ca4fed11ab258e736a41642366ff437b4d31824",
      "id" : "80000051"
    },
    {
      "hash" : "0x2d6bedf9815faa27022f0fa2585a60dcce10b05323684b47aca0642959bbb417",
      "id" : "80000097"
    },
    {
      "hash" : "0x8c7305265285f54dc9ca12d7ceed8fd7c2dca8b955b59f4acf128783b7afd004",
      "id" : "80000090"
    },
    {
      "hash" : "0x7830527d5c155761222207234bd98178c147be84e9b05c7ce212ffee412970b6",
      "id" : "80000000"
    },
    {
      "hash" : "0xbb1bc71c54ba16d5c5482e64bf0fc95cba832f4ba122f6d4737a0f45d841001a",
      "id" : "80000020"
    },
    {
      "hash" : "0xbd170a8a09aa63b4c36b4f83d1fc46c284b4e6257d1521567ae72fc40dfbbaa4",
      "id" : "80000011"
    },
    {
      "hash" : "0xb2d609cd3570413d757e0467506c6d7167d2048b123bff4d20ef4e61457204b3",
      "id" : "80000023"
    },
    {
      "hash" : "0xa8bd0a3f2fc4aacef13bdb3d4a27dee327f585920382b9a9e9fa270a37b44d9c",
      "id" : "80000098"
    },
    {
      "hash" : "0xa20fea939005dda5c00ecf830b0e698d4fae2d2320574685902a30294eff8315",
      "id" : "80000013"
    },
    {
      "hash" : "0x1ac271aa7362ee32d5eec34e2bcd272faffad9efaf72764d675435391204bd8c",
      "id" : "80000063"
    },
    {
      "hash" : "0x961a0f1a0798f4281296e633038ca57306f4f8a5029fa2fb714b6903cee39c26",
      "id" : "80000096"
    },
    {
      "hash" : "0x61fd5bcd756ffa75877a70379198e0ae0da236b37ce618296050052e1ae82aa0",
      "id" : "80000055"
    },
    {
      "hash" : "0x4c00ed5b394b4fb1072af5028c77c6c6a248568a71c14b69a28a5c07c7e73a5d",
      "id" : "80000080"
    },
    {
      "hash" : "0x44034e8f94c65246d484289fd1c8e719c8aad41993c3d57b6aae52c86cd0a8ee",
      "id" : "80000082"
    },
    {
      "hash" : "0x92c027e03d7e117d0f70f78f229a7b3850e687bd471616d2755504f45fcd9084",
      "id" : "80000032"
    },
    {
      "hash" : "0x1e99ae8520b7b7b55c2fe23135d8b643177e90dc6d9bc43644657dd3bc2b1a39",
      "id" : "80000047"
    },
    {
      "hash" : "0x7b5c14456869fd8ee252a44c309fce27f8e113f4c9afaf8be3ead7f182dcf729",
      "id" : "80000078"
    },
    {
      "hash" : "0xc1b0eb3b8ad1c13f21d28aa359d33f28b13daf1e057985ee234da4326cd1dcc6",
      "id" : "80000037"
    },
    {
      "hash" : "0x294894c25cea2e2a3fd3e11f4cec89b6af55abd44064ee50ed5e4e1f8cd8de58",
      "id" : "80000073"
    },
    {
      "hash" : "0xfe1b95bf21c63d22badf87606db0f6298b0fe783e10856185ddf395a32f1b68b",
      "id" : "80000089"
    },
    {
      "hash" : "0x8995774034eabc892c8ec874e6551723f5f216473bc85465ad0bce5c8c7137ff",
      "id" : "80000088"
    },
    {
      "hash" : "0xcb719593e2ea857c6a0ac6b00f49e1f30824585bc8ca57a4f6518b45cdfc1519",
      "id" : "80000012"
    },
    {
      "hash" : "0x9a6ecc80c73cd7a2df2b80cffa7a8c010098a1322dac6487ee0e3c50e85a4ec9",
      "id" : "80000027"
    },
    {
      "hash" : "0xff7bbf1b309259fb3dfdedadaac0732cef80186a4b842878d0b1d5e61408c30f",
      "id" : "80000066"
    },
    {
      "hash" : "0x1b71678e91aaf0e7f1771d4ae4c61e422da40db054b6c51c1c3578b24a64e73b",
      "id" : "80000068"
    },
    {
      "hash" : "0xf9ead21fffa8f0c4cbdacea188ee953bd4468fc2487ab259f685b1a5f47f2eed",
      "id" : "80000069"
    },
    {
      "hash" : "0xaff95216762465c01db562cc9b8832459adf3aa22f16fa9f6d54d82b0da659ca",
      "id" : "80000030"
    },
    {
      "hash" : "0x4422f7e99ec706a88deb2430fe66be4cc431a2692dc5087297d73bfeaf469fc6",
      "id" : "80000083"
    },
    {
      "hash" : "0x98b84cdd4ca118292e7ca8114abce34a046dc0e236e3da7fb39e56d2ab54a630",
      "id" : "80000019"
    },
    {
      "hash" : "0xb9c8c265d6671def58cafb312b8c070feb9cbad1ee1bb0bf91640ca1c8e37812",
      "id" : "80000021"
    },
    {
      "hash" : "0xaf7db7a322697232458a1e0dfea074478920e10590dc0abeb176cc9d785b7e93",
      "id" : "80000008"
    },
    {
      "hash" : "0xbc7d9a34a8b6d9e6f39e2acc8d7a0ae72e7736dc7b2df2e11a662d27a18f45bf",
      "id" : "80000028"
    },
    {
      "hash" : "0x0d4efdb7b5eae228a54dc10baa8309cd44b6973dc03ec3376dcc4a2105f6f7cc",
      "id" : "80000034"
    },
    {
      "hash" : "0x3b7ff1e1b70b8c47a0fac37a8ef028b9b43223e6466eb75f47d2998df9c47e97",
      "id" : "80000071"
    },
    {
      "hash" : "0x800f9cd4871ddbefd8da170d7a56810780ced6619cd0f0ce25c530c4692b941e",
      "id" : "80000022"
    },
    {
      "hash" : "0x3ade7836c0218f9e00d14aa7991917a28e57fc530fb7e494e6541eb6ad2cfb72",
      "id" : "80000029"
    },
    {
      "hash" : "0xfa9bbcca18fb177698d737f9d9931cb76493d963033b4d8cffe12a7d95af47dd",
      "id" : "80000009"
    },
    {
      "hash" : "0x557e864cb89083924ac8422a739aa616154b95363445d453ef79bd22c9ff81ea",
      "id" : "80000084"
    },
    {
      "hash" : "0xfdd077917bd878c53c1c89ee5acd1bcdb88209406e97dbfabbf8799fdce0e54b",
      "id" : "80000085"
    },
    {
      "hash" : "0x3a14527aa6e1531251819c771f53632843ff467b7d0d33863c7c65ec85bcc61c",
      "id" : "80000003"
    },
    {
      "hash" : "0xc7f829062a97464bca76b37eb0910dd7af1d0507dc1da7ee31eae9970fc69695",
      "id" : "80000016"
    },
    {
      "hash" : "0xda51736f3425713a39927bd604e0b6a0e59d4e8440331253fbab1e47382d51e0",
      "id" : "80000007"
    },
    {
      "hash" : "0xc3a3789ee321090abe7f902045577b36cc77456e4ab5783a4a9c4c0b17e48f10",
      "id" : "80000026"
    },
    {
      "hash" : "0x2a695673b519d2487b783ddcaed38e2bad73e6efac92f04dfe3ed9a3ffbc163e",
      "id" : "80000039"
    },
    {
      "hash" : "0x5ae261f0627a27d05ceb891410038ffdfb51571c63dafdd8bdacdc7fab9aaed6",
      "id" : "80000006"
    },
    {
      "hash" : "0x56aff2a3ba971af0f4f5bee8d9757be36542ef1deeaf7ac8f828f6aa49a01268",
      "id" : "80000094"
    },
    {
      "hash" : "0xa02d089f53423af82ba7efd9327a5360373084520719ed25ec7aa8cfa08ccf2c",
      "id" : "80000060"
    },
    {
      "hash" : "0xc0ee5e5493876be306bce7595f5f93c9d738933f5b196e6d31471dd735ceae40",
      "id" : "80000044"
    },
    {
      "hash" : "0x7f2eedc0cacb05464e3a44a3b9c1121bb05639bde1aea392b4d4dee709bdcb5a",
      "id" : "80000045"
    },
    {
      "hash" : "0xafbd208d5416b6f4e90abb10793b3203d9d853859f51712a0a354415692d34bf",
      "id" : "80000054"
    },
    {
      "hash" : "0x8118f41ef66cd813554f55a3edf6cb93e13da9b1b7a38c1028f67df6bd4fc241",
      "id" : "80000061"
    },
    {
      "hash" : "0x394fa068b7976d80ab50b7ce2af9d0bbb8e7c0a2a44f87be23189bf5c2019ca5",
      "id" : "80000048"
    },
    {
      "hash" : "0x1222cd2c4e313805a472b3230494a6d7913fd4ecdc54de875f0febff3243f8f9",
      "id" : "80000004"
    },
    {
      "hash" : "0xaed60744d5ca389a9c0b4c494b3668a62afaff56f3cf916b165fc06d162bf248",
      "id" : "80000005"
    },
    {
      "hash" : "0x42af4880e84d662b12f06dbb0b059999e03bff1e7ace3ba8cd9c380562259d58",
      "id" : "80000074"
    },
    {
      "hash" : "0x08c5e57cf8f020e8b074e74a260f34f12ef63facd6664001285094d8b446c5ef",
      "id" : "80000075"
    },
    {
      "hash" : "0xdd109c2731c5d50493cde23fcbd61629c00a14fa2611a4f160e2fa757678a20e",
      "id" : "80000050"
    },
    {
      "hash" : "0x597fbbe5c5c4762898f0b05c1fb481c4ab17dac63144541b5f70ee5dbeaac266",
      "id" : "80000015"
    },
    {
      "hash" : "0x8405d7bb079b4fda98b979ed827b483530f0addd081cc4957d4bff1d97991da8",
      "id" : "80000093"
    },
    {
      "hash" : "0xecbd91067f6ee24dc5952f8894fffda1373dbffd59618a41501a114ed6dbcfd6",
      "id" : "80000014"
    },
    {
      "hash" : "0xe880afc82601f8d5ee4a89d99aedb538d9bd83a3e952211cb2444ac21ba40064",
      "id" : "80000041"
    },
    {
      "hash" : "0x269f87ee1df23d27b6406e4a97ec8a09885dce17b5096deb1e86ce6df6d13486",
      "id" : "80000046"
    },
    {
      "hash" : "0x5d1405a6bc74ee2120c2c42354b158540f69a625987b6cc571a64b878f925ef3",
      "id" : "80000092"
    },
    {
      "hash" : "0x8fcc13dafc5f6a2bbd6cf5e80d1392351f79d9791ece688f828b840fa1f2cd40",
      "id" : "80000072"
    },
    {
      "hash" : "0x7ad4e1ff87058baa3a82a9a7947c505f1522718387351fe513f2777b13df4e3e",
      "id" : "80000025"
    },
    {
      "hash" : "0x3f87c8797f3fafe9625877cb90ffca1da865e7ada1338ac0a89f44caf833db5a",
      "id" : "80000024"
    }
  ]
}