{
  "contractAddress" : "0xa319c382a702682129fcbf55d514e61a16f97f9c",
  "kind" : "p5js100",
  "projectId" : "26",
  "script" : "p5.disableFriendlyErrors=!0;class Random{constructor(){this.useA=!1;let $=function($){let e=parseInt($.substr(0,8),16),r=parseInt($.substr(8,8),16),n=parseInt($.substr(16,8),16),l=parseInt($.substr(24,8),16);return function(){n|=0;let $=((e|=0)+(r|=0)|0)+(l|=0)|0;return l=l+1|0,e=r^r>>>9,r=n+(n<<3)|0,n=(n=n<<21|n>>>11)+$|0,($>>>0)\/4294967296}};this.prngA=new $(tokenData.hash.substr(2,32)),this.prngB=new $(tokenData.hash.substr(34,32));for(let e=0;e<1e6;e+=2)this.prngA(),this.prngB()}rd(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}}function setup(){aspect=420\/297,unit=1200,noiseSeed(floor(1e9*R.rd())),noLoop(),gen_pts=[],pts1=[],pts2=[],pr=R.rd(),pr2=(6*R.rd()\/7+floor(7*pr)\/7+1\/7)%1,pts1=fitPts(pts1=pr<1\/7?linePts(8e3):pr<2\/7?spiralPts(8e3):pr<3\/7?walkPts(8e3):pr<4\/7?sinePts(8e3):pr<5\/7?polyPts(8e3):pr<6\/7?directedPts(8e3):flowPts(8e3)),pts2=fitPts(pts2=pr2<1\/7?linePts(8e3):pr2<2\/7?spiralPts(8e3):pr2<3\/7?walkPts(8e3):pr2<4\/7?sinePts(8e3):pr2<5\/7?polyPts(8e3):pr2<6\/7?directedPts(8e3):flowPts(8e3)),gen_pts=[];for(let $=0;$<pts1.length;$++)x=.6*pts1[$][0]+.4*pts2[$][0],y=.6*pts1[$][1]+.4*pts2[$][1],gen_pts.push([x,y]);gen_pts=fitPts(gen_pts)}function linePts($){out_pts=[],num_lines=12,line_counts=[],sum=0,exp_weight=.18+.04*R.rd();for(let e=0;e<num_lines;e++)line_counts[e]=exp(e*exp_weight),sum+=exp(e*exp_weight);count=0;for(let r=0;r<num_lines;r++)count+=floor(line_counts[r]\/sum*$),line_counts[r]=floor(line_counts[r]\/sum*$);for(;count<$;)line_counts[floor(R.rd()*line_counts.length)]++,count++;for(let n=0;n<num_lines;n++){x=R.rd();for(let l=0;l<line_counts[n];l++)y=map(l,0,line_counts[n]-1,0,aspect),out_pts.push([x,y])}return out_pts}function spiralPts($){out_pts=[],num_lines=3,line_counts=[],sum=0;for(let e=0;e<num_lines;e++)line_counts[e]=exp(e),sum+=exp(e);count=0;for(let r=0;r<num_lines;r++)count+=floor(line_counts[r]\/sum*$),line_counts[r]=floor(line_counts[r]\/sum*$);for(;count<$;)line_counts[floor(R.rd()*line_counts.length)]++,count++;for(let n=0;n<num_lines;n++){cx=map(R.rd(),0,1,.3,.7),cy=map(R.rd(),0,1,.3,aspect-.3),th=R.rd()*TWO_PI,th_max=map(R.rd(),0,1,16,32)*PI,r_max=.3+.2*R.rd();for(let l=0;l<line_counts[n];l++)x=cx+(rad=map(l,0,line_counts[n]-1,0,r_max))*cos(theta=map(l,0,line_counts[n],th,th+th_max)),y=cy+rad*sin(theta),out_pts.push([x,y])}return out_pts}function sinePts($){out_pts=[],num_lines=8,line_counts=[],sum=0,exp_weight=.28+.04*R.rd();for(let e=0;e<num_lines;e++)line_counts[e]=exp(e*exp_weight),sum+=exp(e*exp_weight);count=0;for(let r=0;r<num_lines;r++)count+=floor(line_counts[r]\/sum*$),line_counts[r]=floor(line_counts[r]\/sum*$);for(;count<$;)line_counts[floor(R.rd()*line_counts.length)]++,count++;for(let n=0;n<num_lines;n++){sine_mag=.2+.2*R.rd(),sine_freq=TWO_PI*(2*R.rd()+1),right=.5>R.rd(),cy=map(R.rd(),0,1,sine_mag,aspect-sine_mag);for(let l=0;l<line_counts[n];l++)y=cy+sine_mag*sin(sine_freq*(x=right?map(l,0,line_counts[n]-1,0,1):map(l,0,line_counts[n]-1,1,0))),out_pts.push([x,y])}return out_pts}function walkPts($){out_pts=[],num_lines=20,line_counts=[],sum=0;for(let e=0;e<num_lines;e++)line_counts[e]=exp(.1*e),sum+=exp(.1*e);count=0;for(let r=0;r<num_lines;r++)count+=floor(line_counts[r]\/sum*$),line_counts[r]=floor(line_counts[r]\/sum*$);for(;count<$;)line_counts[floor(R.rd()*line_counts.length)]++,count++;cx=R.rd(),cy=R.rd()*aspect;for(let n=0;n<num_lines;n++){cx2=R.rd(),cy2=R.rd()*aspect;for(let l=0;l<line_counts[n];l++)x=map(l,0,line_counts[n]-1,cx,cx2),y=map(l,0,line_counts[n]-1,cy,cy2),out_pts.push([x,y]);cx=cx2,cy=cy2}return out_pts}function polyPts($){out_pts=[],num_lines=8,line_counts=[],sum=0;for(let e=0;e<num_lines;e++)line_counts[e]=exp(.3*e),sum+=exp(.3*e);count=0;for(let r=0;r<num_lines;r++)count+=floor(line_counts[r]\/sum*$),line_counts[r]=floor(line_counts[r]\/sum*$);for(;count<$;)line_counts[floor(R.rd()*line_counts.length)]++,count++;for(let n=0;n<num_lines;n++){rad=.3*R.rd()+.2,cx=map(R.rd(),0,1,rad,1-rad),cy=map(R.rd(),0,1,rad,aspect-rad),num_sides=floor(6*R.rd()+3),vertices=[],ctheta=R.rd()*TWO_PI;for(let l=0;l<num_sides;l++)x=cx+rad*cos((theta=map(l,0,num_sides,0,TWO_PI))+ctheta),y=cy+rad*sin(theta+ctheta),vertices.push([x,y]);for(let _=0;_<line_counts[n];_++)index=map(_,0,line_counts[n]-1,0,num_sides),x1=vertices[floor(index)%num_sides][0],y1=vertices[floor(index)%num_sides][1],x2=vertices[ceil(index)%num_sides][0],y2=vertices[ceil(index)%num_sides][1],x=(w=index-floor(index))*x2+(1-w)*x1,y=w*y2+(1-w)*y1,out_pts.push([x,y])}return out_pts}function directedPts($){out_pts=[],num_lines=6,line_counts=[],sum=0;for(let e=0;e<num_lines;e++)line_counts[e]=exp(.4*e),sum+=exp(.4*e);count=0;for(let r=0;r<num_lines;r++)count+=floor(line_counts[r]\/sum*$),line_counts[r]=floor(line_counts[r]\/sum*$);for(;count<$;)line_counts[floor(R.rd()*line_counts.length)]++,count++;t=1e7*R.rd();for(let n=0;n<num_lines;n++){x=map(R.rd(),0,1,.4,.6),y=map(R.rd(),0,1,.4*aspect,.6*aspect),theta=R.rd()*TWO_PI,v=.001*$\/line_counts[n];for(let l=0;l<line_counts[n];l++)theta+=5*v*(noise(60,t)-.5),x+=v*cos(theta),y+=v*sin(theta),out_pts.push([x,y,0]),t+=10*v}return out_pts}function flowPts($){out_pts=[],num_lines=8,line_counts=[],sum=0;for(let e=0;e<num_lines;e++)line_counts[e]=exp(.3*e),sum+=exp(.3*e);count=0;for(let r=0;r<num_lines;r++)count+=floor(line_counts[r]\/sum*$),line_counts[r]=floor(line_counts[r]\/sum*$);for(;count<$;)line_counts[floor(R.rd()*line_counts.length)]++,count++;for(let n=0;n<num_lines;n++){x=map(R.rd(),0,1,.1,.9),y=map(R.rd(),0,1,.1*aspect,.9*aspect),v=.001*$\/line_counts[n],offset=1e6*R.rd();for(let l=0;l<line_counts[n];l++)vx=v*(noise(3*x,3*y,offset)-.5),vy=v*(noise(3*x,3*y,offset+10)-.5),x+=vx,y+=vy,out_pts.push([x,y,0])}return out_pts}function fitPts($){out_pts=[],min_x=$[0][0],max_x=$[0][0],min_y=$[0][1],max_y=$[0][1];for(let e=0;e<$.length;e++)$[e][0]<min_x&&(min_x=$[e][0]),$[e][0]>max_x&&(max_x=$[e][0]),$[e][1]<min_y&&(min_y=$[e][1]),$[e][1]>max_y&&(max_y=$[e][1]),out_pts[e]=[];for(let r=0;r<$.length;r++)x=map($[r][0],min_x,max_x,0,1),y=map($[r][1],min_y,max_y,0,aspect),out_pts[r][0]=x,out_pts[r][1]=y;return out_pts}function genPoly3($,e){let r=[];num_pts=100,t_max=100,v=.02,nls=5,line1=[];let n=$,l=e;n_scale=1;for(let _=0;_<t_max;_++)line1.push([n,l]),nx=n_scale*(noise(nls*n,nls*l,0)-.5),ny=n_scale*(noise(nls*n,nls*l,10)-.5),nnx=n_scale*(noise(nls*nx,nls*nx,40)-.5),nny=n_scale*(noise(nls*nx,nls*nx,50)-.5),n+=v*nx,l+=v*ny;line2=[],n=$,l=e,n_scale=1;for(let o=0;o<t_max;o++)line2.push([n,l]),nx=n_scale*(noise(nls*n,nls*l,20)-.5),ny=n_scale*(noise(nls*n,nls*l,30)-.5),nnx=n_scale*(noise(nls*nx,nls*nx,60)-.5),nny=n_scale*(noise(nls*nx,nls*nx,70)-.5),n+=v*nx,l+=v*ny;for(let s=0;s<num_pts;s++)l1=.5+.5*cos(theta=map(s,0,num_pts-1,0,TWO_PI)),l2=.5+.5*sin(theta),i1=floor((line1.length-2)*l1),w1=1-((line1.length-2)*l1-floor((line1.length-2)*l1)),i2=floor((line2.length-2)*l2),w2=1-((line2.length-2)*l2-floor((line2.length-2)*l2)),n=(line1[i1][0]*w1+line1[i1+1][0]*(1-w1)+line2[i2][0]*w2+line2[i2+1][0]*(1-w2))\/2,r.push([n,l=(line1[i1][1]*w1+line1[i1+1][1]*(1-w1)+line2[i2][1]*w2+line2[i2+1][1]*(1-w2))\/2]);return r}function on_segment($,e,r,n,l,_){return!!(r<=max($,l)&&r>=min($,l)&&n<=max(e,_)&&n>=min(e,_))}function orient($,e,r,n,l,_){let o=(n-e)*(l-r)-(r-$)*(_-n);return o>0?1:o<0?2:0}function intersect($,e,r,n,l,_,o,s){return($!=l||e!=_)&&($!=o||e!=s)&&(r!=l||n!=_)&&(r!=o||n!=s)&&(o1=orient($,e,r,n,l,_),o2=orient($,e,r,n,o,s),o3=orient(l,_,o,s,$,e),o4=orient(l,_,o,s,r,n),!!(o1!=o2&&o3!=o4||0==o1&&on_segment($,e,l,_,r,n)||0==o2&&on_segment($,e,o,s,r,n)||0==o3&&on_segment(l,_,$,e,o,s)||0==o4&&on_segment(l,_,r,n,o,s)))}function intersect_pt($,e,r,n,l,_,o,s){let f=r-$,h=n-e,i=o-l,u=s-_,d;return[(d=0==i?(l-$)\/(r-$):(_-e+($-l)*u\/i)\/(h-f*u\/i))*f+$,d*h+e]}function draw(){poly_list=[],poly_limits=[],count=0,count2=0,p=[color(0),color(0),color(0)],layer_size=[3e3,3e3,3e3],weights=[.5,.5,.5],max_intersections=1,edge_dict={},dict_size=200,x1=margin=.03,x2=1-margin,y1=margin,xgmin=floor(x1*dict_size),xgmax=floor(x2*dict_size),yg=floor(y1*dict_size);let $=1\/.3,e=297*$,r=420*$,n=\"http:\/\/www.w3.org\/2000\/svg\",l=document.createElementNS(n,\"svg\");l.setAttribute(\"width\",\"100vw\"),l.setAttribute(\"height\",\"100vh\"),l.setAttribute(\"viewBox\",\"0 0 \"+e+\" \"+r),l.setAttribute(\"style\",\"background-color:white;\");let _=document.createElementNS(n,\"path\");_.setAttribute(\"d\",`M 0 0 M ${e} ${r}`),l.appendChild(_);let o=document.createElementNS(n,\"g\");o.setAttribute(\"id\",\"1000000layer\"),o.setAttribute(\"style\",\"fill:none;stroke-width:1;stroke:rgb(0%,0%,0%);\");for(let s=0;s<gen_pts.length;s++){let f;poly=genPoly3(gen_pts[s][0],gen_pts[s][1]),start_index=62,final_poly=[poly[start_index]],has_intersections=!1,num_intersections=0;for(let h=0;h<poly.length&&!has_intersections;h++){x1=poly[(h+start_index)%poly.length][0],y1=poly[(h+start_index)%poly.length][1],x2=poly[(h+start_index+1)%poly.length][0],y2=poly[(h+start_index+1)%poly.length][1],xg=floor(x1*dict_size),yg=floor(y1*dict_size),xg2=floor(x2*dict_size),yg2=floor(y2*dict_size);for(let i=min(xg,xg2);i<=max(xg,xg2);i++)for(let u=min(yg,yg2);u<=max(yg,yg2);u++)if([i,u]in edge_dict)for(let d=0;d<edge_dict[[i,u]].length;d++)intersect(x1,y1,x2,y2,edge_dict[[i,u]][d][0],edge_dict[[i,u]][d][1],edge_dict[[i,u]][d][2],edge_dict[[i,u]][d][3])&&(count++,++num_intersections==max_intersections&&(final_poly.push(intersect_pt(x1,y1,x2,y2,edge_dict[[i,u]][d][0],edge_dict[[i,u]][d][1],edge_dict[[i,u]][d][2],edge_dict[[i,u]][d][3])),has_intersections=!0));has_intersections||final_poly.push([x2,y2])}if(has_intersections){has_intersections=!1,num_intersections=0;for(let g=0;g<poly.length&&!has_intersections;g++){x1=poly[(-g+start_index+2*poly.length)%poly.length][0],y1=poly[(-g+start_index+2*poly.length)%poly.length][1],x2=poly[(-g+start_index+2*poly.length-1)%poly.length][0],y2=poly[(-g+start_index+2*poly.length-1)%poly.length][1],xg=floor(x1*dict_size),yg=floor(y1*dict_size),xg2=floor(x2*dict_size),yg2=floor(y2*dict_size);for(let c=min(xg,xg2);c<=max(xg,xg2);c++)for(let P=min(yg,yg2);P<=max(yg,yg2);P++)if([c,P]in edge_dict)for(let a=0;a<edge_dict[[c,P]].length;a++)intersect(x1,y1,x2,y2,edge_dict[[c,P]][a][0],edge_dict[[c,P]][a][1],edge_dict[[c,P]][a][2],edge_dict[[c,P]][a][3])&&++num_intersections==max_intersections&&(final_poly.splice(0,0,intersect_pt(x1,y1,x2,y2,edge_dict[[c,P]][a][0],edge_dict[[c,P]][a][1],edge_dict[[c,P]][a][2],edge_dict[[c,P]][a][3])),has_intersections=!0);has_intersections||final_poly.splice(0,0,[x2,y2])}}for(let b=0;b<final_poly.length-1;b++){x1=final_poly[b][0],y1=final_poly[b][1],x2=final_poly[b+1][0],y2=final_poly[b+1][1],xg=floor(x1*dict_size),yg=floor(y1*dict_size),xg2=floor(x2*dict_size),yg2=floor(y2*dict_size);for(let A=min(xg,xg2);A<=max(xg,xg2);A++)for(let m=min(yg,yg2);m<=max(yg,yg2);m++)[A,m]in edge_dict?edge_dict[[A,m]].push([x1,y1,x2,y2]):edge_dict[[A,m]]=[[x1,y1,x2,y2]]}poly_list.push(final_poly)}min_x=poly_list[0][0][0],max_x=poly_list[0][0][0],min_y=poly_list[0][0][1],max_y=poly_list[0][0][1],mean_x=0,mean_y=0,mean_x2=0,mean_y2=0,count=0;for(let k=0;k<poly_list.length;k++)for(let E=0;E<poly_list[k].length;E++)mean_x+=poly_list[k][E][0],mean_x2+=poly_list[k][E][0]**2,mean_y+=poly_list[k][E][1],mean_y2+=poly_list[k][E][1]**2,count++,poly_list[k][E][0]<min_x&&(min_x=poly_list[k][E][0]),poly_list[k][E][0]>max_x&&(max_x=poly_list[k][E][0]),poly_list[k][E][1]<min_y&&(min_y=poly_list[k][E][1]),poly_list[k][E][1]>max_y&&(max_y=poly_list[k][E][1]);mean_x\/=count,mean_y\/=count,mean_x2\/=count,mean_y2\/=count,std_x=sqrt(mean_x2-mean_x**2),std_y=sqrt(mean_y2-mean_y**2),scale_factor=1,(scale_ratio=(max_y-min_y)\/(max_x-min_x))>aspect?(min_x=-(scale_factor=(max_y-min_y)\/aspect)\/2+(avg_x=(max_x+min_x)\/2),max_x=scale_factor\/2+avg_x):(min_y=-(scale_factor=max_x-min_x)*aspect\/2+(avg_y=(max_y+min_y)\/2),max_y=scale_factor*aspect\/2+avg_y);for(let B=0;B<poly_list.length;B++)for(let C=0;C<poly_list[B].length;C++)poly_list[B][C][0]=map(poly_list[B][C][0],min_x,max_x,margin,1-margin),poly_list[B][C][1]=map(poly_list[B][C][1],min_y,max_y,margin,aspect-margin);margin=.03;for(let N=0;N<poly_list.length;N++){path_string=`M ${poly_list[N][0][0]*e} ${poly_list[N][0][1]*e}`,nonNumber=!1;for(let S=1;S<poly_list[N].length;S++)path_string+=` L ${poly_list[N][S][0]*e} ${poly_list[N][S][1]*e}`,(isNaN(poly_list[N][S][0])||isNaN(poly_list[N][S][1]))&&(nonNumber=!0);if(!nonNumber){let M=document.createElementNS(n,\"path\");M.setAttribute(\"d\",path_string),o.appendChild(M)}}l.appendChild(o),noCanvas(),document.body.appendChild(l),print(tokenData.hash)}R=new Random;",
  "tokens" : [
    {
      "hash" : "0xfea50c562b69b363b04522959da75e866b040146a9ee56b9eeae6d5e758467d4",
      "id" : "26000005"
    },
    {
      "hash" : "0xd0cba4dddbc9c86247d9d8beb53836a1b96c79807fbbd3c996705be1809c05f2",
      "id" : "26000008"
    },
    {
      "hash" : "0x2369af7b3a879fc6896e88400c7025cb0439f80eb90a564bc23172e11ee25cdd",
      "id" : "26000015"
    },
    {
      "hash" : "0xc2508601997f67e61391f896e22e6684d66e70486c03e38a45db8805c107c972",
      "id" : "26000013"
    },
    {
      "hash" : "0xb1b28b875bf2c8e6cd602ca6bf034e6cf39da7afd17e3b40ff4348a3a7a43602",
      "id" : "26000000"
    },
    {
      "hash" : "0x1c33057b72ffe1ed50585712a1eaf84a55fa02530dda1874d373d5d079c35c1f",
      "id" : "26000011"
    },
    {
      "hash" : "0x3b737b6dc68d5daa8f3f605d37a1592fdfa42e4d265c00b8192e438686b7e863",
      "id" : "26000004"
    },
    {
      "hash" : "0x202220132483c9c74495013f1f2c78fbf8e088cafaf246de902b9dc5d15ff736",
      "id" : "26000014"
    },
    {
      "hash" : "0xb34dcbe22a1204812a4081d7ee995ff16175359729b8db6d1c1d04547f2bb83c",
      "id" : "26000001"
    },
    {
      "hash" : "0x25b81dd0bb3f653303d6f5af72a52df9645fcd5f46dfc17df2b7a961a1908b78",
      "id" : "26000003"
    },
    {
      "hash" : "0x50c8d670333b67aceeb6417c93bd0afc7ba94c866215385e642241659d06add3",
      "id" : "26000002"
    },
    {
      "hash" : "0x5e3b1ac2163e2495196ecfeae6009303cfd3f2e5393ae2d93d10f219e6d19cfe",
      "id" : "26000006"
    },
    {
      "hash" : "0x084d3d08d4cd05aed4081e1777e7530adbfcad32d283a9a0bfb012a3856a59f7",
      "id" : "26000007"
    },
    {
      "hash" : "0xd0eb51dcc1e1d6aa826e80cae205d0e06cf24a89699d03018993245af328e6ae",
      "id" : "26000009"
    },
    {
      "hash" : "0x7afb99cc2765d7a4cb40d6d27faf9f62b0f9c8f675635170d8e3dacba3f65411",
      "id" : "26000010"
    },
    {
      "hash" : "0xdb9c3a545779a1c5247f63853b071f10365b9b77ee8c4e2d9f266fe4544cde49",
      "id" : "26000012"
    }
  ]
}