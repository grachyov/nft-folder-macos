{
  "contractAddress" : "0x9f79e46a309f804aa4b7b53a1f72c69137427794",
  "kind" : "p5js100",
  "projectId" : "4",
  "script" : "let w,h,pix=1,s,c,pg,pg2,img,sh,f,g,k,frameMod,pgStr,hyperMeter,blurShader,blurShader2,seed,contChooser,celColChooser,onOffChooser,sqChooser,sqTriChooser,borderStr,monoChooser,darkSat,darkHue,contStr,uOctave,monoStr,coun=0,shaderChooser,shaderChooser2,rect1X,rect1Y,rect1W,rect1H,rect2X,rect2Y,border,triChooser,blockChooser,blockColor,blockColor2,sqStr,stopCount=1,fr,dirC,durC,bgMult,eW,minDim,R,seedCounter1,seedCounter2,seedCounter3,theVertex=`\r\n#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\nattribute vec3 aPosition;\r\nattribute vec2 aTexCoord;\r\nvarying vec2 vTexCoord;\r\nvoid main() {\r\n  vTexCoord = aTexCoord;\r\n  vec4 positionVec4 = vec4(aPosition, 1.0);\r\n  positionVec4.xy = positionVec4.xy * 2.0 - 1.0;\r\n  gl_Position = positionVec4;\r\n}\r\n`,b1Frag=`\r\nprecision highp float;\r\n#define PI 3.14159265359\r\nvarying vec2 vTexCoord;\r\nuniform sampler2D uTexture0;\r\nuniform float u_time;\r\nuniform vec2 uResolution;\r\nuniform float u_octave;\r\nuniform float u_fbmAmp;\r\nuniform float u_roundness;\r\nuniform float u_angleC;\r\nhighp float random(vec2 co)\r\n{\r\n    highp float a = 12.9898;\r\n    highp float b = 78.233;\r\n    highp float c = 43758.5453;\r\n    highp float dt= dot(co.xy ,vec2(a,b));\r\n    highp float sn= mod(dt,3.14);\r\n    return fract(sin(sn) * c);\r\n}\r\nfloat noise (in vec2 st) {\r\n    vec2 i = floor(st);\r\n    vec2 fu = fract(st);\r\n    float a = random(i);\r\n    float b = random(i + vec2(1.0, 0.0));\r\n    float c = random(i + vec2(0.0, 1.0));\r\n    float d = random(i + vec2(1.0, 1.0));\r\n    vec2 u = fu * fu * (3.0 - 2.0 * fu);\r\n    return mix(a, b, u.x) +\r\n            (c - a)* u.y * (1.0 - u.x) +\r\n            (d - b) * u.x * u.y;\r\n}\r\n#define OCTAVES 4\r\nfloat fbm (in vec2 st) {\r\n    \/\/ Initial values\r\n    float value = 0.0;\r\n    float amplitude = 0.25;\r\n    float frequency = 0.1;\r\n    for (int i = 0; i < OCTAVES; i++) {\r\n        value += amplitude* noise(st);\r\n        st *= u_octave + u_time\/100.0;\r\n        amplitude *= .45;\r\n    }\r\n    return value;\r\n}\r\nfloat fbm6( in vec2 p )\r\n{\r\n    vec2 q = vec2( fbm( p + vec2(0.0,u_roundness) ),fbm( p + vec2(0.0,2.0) ) );\r\n    vec2 r = vec2( fbm( p + 4.0*q + vec2(4.0,3.0)),fbm( p + 4.0*q + vec2(u_angleC * 4.0,0.0)));\r\n    return fbm( p + u_fbmAmp* r ); \/\/ 2.0, 6.0\r\n}\r\nvoid main() {\r\n  vec2 st = gl_FragCoord.xy\/uResolution.xy;\r\n  vec2 uv = vTexCoord;\r\n  uv.y = 1.0 - uv.y;\r\n  vec2 texelSize = 1.0 \/ uResolution;\r\n  vec2 offset;\r\n  float scale = 0.1;\r\n  float offset2 = 0.1;\r\n  float angle;\r\n  angle = noise(st + uv * 0.2) * PI * 2.0; \/\/0.01 0.4\r\n  float radius = offset2;\r\n  st *= scale;\r\n  st *= radius * vec2(fract(angle *  st.x), fract(angle \/ st.y));\r\n  offset = texelSize  * vec2(4.0,4.0) - fbm6(uv) + 0.18;\r\n  vec4 color = vec4(0.0);\r\n  float div;\r\n  color += texture2D(uTexture0, uv + vec2(offset.y, st.y)); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.y, st.y)); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.x, st.x)); \r\n  color += texture2D(uTexture0, uv + vec2(offset.x, st.x));\r\n  color += texture2D(uTexture0, uv + vec2(offset.y, -st.y)); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.y, -st.y)); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.x, -st.x)); \r\n  color += texture2D(uTexture0, uv + vec2(offset.x, -st.x)); \r\n  div = 8.0;\r\n  color \/= div;           \r\n  gl_FragColor = color;\r\n}\r\n`,b2Frag=`\r\nprecision highp float;\r\n#define PI 3.14159265359\r\nvarying vec2 vTexCoord;\r\nuniform sampler2D uTexture0;\r\nuniform float u_time;\r\nuniform vec2 uResolution;\r\nuniform float u_octave;\r\nuniform float u_fbmAmp;\r\nuniform float u_roundness;\r\nuniform float u_angleC;\r\nhighp float random(vec2 co)\r\n{\r\n    highp float a = 12.9898;\r\n    highp float b = 78.233;\r\n    highp float c = 43758.5453;\r\n    highp float dt= dot(co.xy ,vec2(a,b));\r\n    highp float sn= mod(dt,3.14);\r\n    return fract(sin(sn) * c);\r\n}\r\nfloat noise (in vec2 st) {\r\n    vec2 i = floor(st);\r\n    vec2 fu = fract(st);\r\n    float a = random(i);\r\n    float b = random(i + vec2(1.0, 0.0));\r\n    float c = random(i + vec2(0.0, 1.0));\r\n    float d = random(i + vec2(1.0, 1.0));\r\n    vec2 u = fu * fu * (3.0 - 2.0 * fu);\r\n    return mix(a, b, u.x) +\r\n            (c - a)* u.y * (1.0 - u.x) +\r\n            (d - b) * u.x * u.y;\r\n}\r\n#define OCTAVES 4\r\nfloat fbm (in vec2 st) {\r\n    \/\/ Initial values\r\n    float value = 0.0;\r\n    float amplitude = 0.25;\r\n    float frequency = 0.1;\r\n    for (int i = 0; i < OCTAVES; i++) {\r\n        value += amplitude* noise(st);\r\n        st *= u_octave + u_time\/100.0;\r\n        amplitude *= .45;\r\n    }\r\n    return value;\r\n}\r\nfloat fbm6( in vec2 p ){\r\n    vec2 q = vec2( fbm( p + vec2(0.0,u_roundness) ),fbm( p + vec2(0.0,2.0) ) );\r\n    vec2 r = vec2( fbm( p + 4.0*q + vec2(4.0,3.0)),fbm( p + 4.0*q + vec2(u_angleC * 4.0,0.0)));\r\n    return fbm( p + u_fbmAmp* r );\r\n}\r\nvoid main() {\r\n  vec2 st = gl_FragCoord.xy\/uResolution.xy;\r\n  vec2 uv = vTexCoord;\r\n  uv.y = 1.0 - uv.y;\r\n  vec2 texelSize = 1.0 \/ uResolution;\r\n  vec2 offset;\r\n  float scale = 0.1;\r\n  float offset2 = 0.1;\r\n  float angle;\r\n  angle = noise(st + uv * 0.2) * PI * 2.0; \/\/0.01 0.4\r\n  float radius = offset2;\r\n  st *= scale;\r\n  st *= radius * vec2(fract(angle *  st.x), fract(angle \/ st.y));\r\n  offset = texelSize  * vec2(4.0,4.0) - fbm6(uv) + 0.18;\r\n  vec4 color = vec4(0.0);\r\n  float div;\r\n  color += texture2D(uTexture0, uv + vec2(offset.y, st.y)); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.y, st.y)); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.x, st.x)); \r\n  color += texture2D(uTexture0, uv + vec2(offset.x, st.x)); \r\n  color += texture2D(uTexture0, uv + vec2(offset.y, -st.y)); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.y, -st.y)); \r\n  color += texture2D(uTexture0, uv + vec2(-offset.x, -st.x)); \r\n  color += texture2D(uTexture0, uv + vec2(offset.x, -st.x)); \r\n  div = 8.0;\r\n  color \/= div;      \r\n  gl_FragColor = color;\r\n}\r\n`,pixFrag=`\r\n#ifdef GL_ES\r\nprecision highp float;  \r\n#endif\r\nuniform vec2 resolution;\r\nuniform sampler2D pg;\r\nuniform sampler2D pg2;\r\nuniform sampler2D img;\r\nuniform float ak;\r\nuniform float dirX;\r\nuniform float dirY;\r\nuniform float pgC;\r\nuniform float dur;\r\nuniform float onOff;\r\nuniform float celCol;\r\nuniform float contC;\r\nuniform float satOn;\r\nvec3 rgb2hsv(vec3 c) {\r\n  vec4 K = vec4(0.0, -1.0 \/ 3.0, 2.0 \/ 3.0, -1.0);\r\n  vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\r\n  vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\r\n  float d = q.x - min(q.w, q.y);\r\n  float e = 1.0e-10;\r\n  return vec3(abs(q.z + (q.w - q.y) \/ (6.0 * d + e)), d \/ (q.x + e), q.x);\r\n}\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec4 K = vec4(1.0, 2.0 \/ 3.0, 1.0 \/ 3.0, 3.0);\r\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\r\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\r\n}\r\nvoid main() {\r\n    vec2 uv = gl_FragCoord.xy \/ resolution;\r\n    uv.y = 1. - uv.y;\r\n    vec2 offset;\r\n    vec2 pgCol;\r\n    if(pgC == 1.){\r\n     offset = vec2(texture2D(pg2, uv).r * ak) * vec2(1.\/resolution.x, 1.\/resolution.y);\r\n     pgCol = vec2(texture2D(pg, uv) );\r\n    }else if(pgC == 2.){\r\n     offset = vec2(texture2D(pg, uv).r * ak) * vec2(1.\/resolution.x, 1.\/resolution.y);\r\n     pgCol = vec2(texture2D(pg2, uv) ) ;\r\n    }else if(pgC == 3.){\r\n     offset = vec2(texture2D(pg2, uv).r * ak) * vec2(1.\/resolution.x, 1.\/resolution.y);\r\n     pgCol = vec2(texture2D(pg2, uv) - texture2D(pg, uv));\r\n    }\r\n    if(pgCol.x < .1) offset.x *= -1.;\r\n    else offset.x *= dirX;\r\n    if(pgCol.y < .1) offset.y *= -1.;\r\n    else  offset.y *= dirY;\r\n    vec3 c = texture2D(img, uv+offset).rgb;\r\n    if(dur == 1.0){\r\n    if(onOff == 0.){\r\n    c += texture2D(img, uv+offset).rgb;\r\n    c -= texture2D(img, uv-offset).rgb;\r\n    }\r\n    }\r\n    if(celCol > 0.65){\r\n      if(c.r + c.g + c.b < .1) c = vec3(0.0);\r\n    }else if(celCol > 0.45){\r\n      if(c.r + c.g + c.b < .1) c = vec3(0.0);\r\n      else if(c.r + c.g + c.b < 0.2) c = vec3(200., 127., 0.)\/255.;\/\/Yellow\r\n    }else if(celCol > 0.15){\r\n      if(c.r + c.g + c.b < .1) c = vec3(0.0);\r\n      else if(c.r + c.g + c.b < 0.2) c = vec3(10., 127., 255.)\/255.;\/\/Blue\r\n    }else{\r\n      if(c.r + c.g + c.b < .1) c = vec3(0.0);\r\n      else if(c.r + c.g + c.b < 0.2) c = vec3(36., 120., 36.)\/255.;\/\/Green\r\n    }\r\n    if(dur == 1.0){\r\n    if(onOff == 1.){\r\n    c += texture2D(img, uv+offset).rgb;\r\n    c -= texture2D(img, uv-offset).rgb;\r\n    }\r\n    }\r\n    if(satOn == 1.0){\r\n    vec3 hsv = rgb2hsv(c.rgb);\r\n    hsv.y *= 1.01;\r\n    c.rgb = hsv2rgb(hsv);\r\n    }\r\n    if(contC < 0.45){\r\n    c.rgb = ((c.rgb - vec3(0.5)) * 1.05 + vec3(0.5));\r\n    }\r\n    gl_FragColor = vec4(c, 1.);\r\n  }\r\n`;function setup(){noiseSeed(seed=99999999*(R=new Random).random_dec()),randomSeed(seed),w=windowWidth,h=windowHeight,bgMult=w>1500?2:w>1e3?1.5:1,c=createCanvas(w,h,WEBGL),pixelDensity(pix),(f=createGraphics(w,h)).pixelDensity(pix),f.colorMode(HSB,360,100,100,1),f.background(0,0,10),f.rectMode(CENTER),(pg=createGraphics(w,h)).pixelDensity(pix),pg.noStroke(),(pg2=createGraphics(w,h)).pixelDensity(pix),pg2.noStroke(),(g=createGraphics(w,h,WEBGL)).pixelDensity(pix),g.colorMode(HSB,360,100,100,1),g.background(0,0,80),(k=createGraphics(w,h,WEBGL)).colorMode(HSB,360,100,100,1),k.background(30,8,90),k.pixelDensity(pix),(img=createGraphics(w,h)).pixelDensity(pix),img.imageMode(CENTER),img.colorMode(HSB,360,100,100,1),img.rectMode(CENTER),sh=createShader(theVertex,pixFrag),blurShader=g.createShader(theVertex,b1Frag),blurShader2=k.createShader(theVertex,b2Frag),pgCh=random([1,2,3,1,2]);let e=[20,50,100,100,20,50];frameMod=e[floor(random(e.length))],minDim=min(width,height),s=random([minDim\/20,minDim\/20,minDim\/10,minDim\/10,minDim\/3.33,minDim\/5]),pgCh=random([1,2,3,1,2]),onOffChooser=random([0,1,0,0]),celColChooser=random(1),contChooser=R.random_dec(),shaderChooser=random(1),shaderChooser2=random(1),triChooser=random(1),blockChooser=R.random_dec(),sqTriChooser=R.random_dec(),dirC=random(1),durC=random(1),monoChooser=R.random_dec(),celColChooser=1,monoChooser<.25&&(monoStr=\"mono\",contChooser=0),contChooser<.45&&(contStr=\"cont\"),\"mono\"==monoStr&&(dirC=random([1,1,0,1,1])),pgStr=255,hyperMeter=random([4,8,8,8,12,12,8,8,4,4])\/2,frameRate(fr=random([30,25,25,25,30,25])),sqChooser=random(1),darkHue=random([0,180,40,220,90,150,200,280,320]),darkSat=\"mono\"==monoStr?0:80,eW=min(width,height)\/8;for(let o=0;o<3e4;o++){let r=random(width),t=random(height);noise(.01*r,.01*t),f.noFill(),f.stroke(0,0,90,1),f.strokeWeight(random(.5,1)),f.ellipse(r,t,random(eW)),f.noFill(),f.stroke(darkHue,darkSat,10,1),f.ellipse(r+random(-10,10),t+random(-10,10),random(eW))}noiseSeed(seed),randomSeed(seed),shader(sh),sh.setUniform(\"resolution\",[w*pix,h*pix]),sh.setUniform(\"pg\",pg),sh.setUniform(\"pg2\",pg2),sh.setUniform(\"img\",f),sh.setUniform(\"ak\",random([1,10,5,20])),sh.setUniform(\"dirX\",random([-1,1,0,0])),sh.setUniform(\"dirY\",random([-1,1,0,0])),sh.setUniform(\"pgC\",pgCh),sh.setUniform(\"onOff\",onOffChooser),sh.setUniform(\"celCol\",celColChooser),sh.setUniform(\"contC\",contChooser),sh.setUniform(\"satOn\",1),img.image(f,w\/2,h\/2),uSqr=0,roundInt=4,uAmp=random(.25,.35),uOctave=round(random(1,2.5),roundInt),uFbmAmp=round(random(30,80),roundInt),uAngleC=round(random(1),roundInt),uAmp2=random(.25,.35),uOctave2=round(random(1,2.5),roundInt),uFbmAmp2=round(random(30,80),roundInt),uAngleC2=round(random(1),roundInt),sqChooser<.5?(rect1X=width\/2,rect1Y=random([height\/4,height-height\/4]),rect1W=width,rect1H=height\/random(1.9,2.1),sqStr=\"yatay\",sqTriChooser<.5&&(rect1X=width\/2,rect1Y=height\/8,rect1W=width,rect1H=height\/3.333,rect2X=width\/2,rect2Y=height-height\/8)):(rect1X=random([width\/4,width-width\/4]),rect1Y=height\/2,rect1W=width\/random(1.9,2.1),rect1H=height,sqStr=\"dikey\",sqTriChooser<.5&&(rect1X=width\/8,rect1Y=height\/2,rect1W=width\/3.333,rect1H=height,rect2X=width-width\/8,rect2Y=height\/2)),blockColor=255,blockColor2=255,0==(border=random([1,1,1,1,1,1]))&&(borderStr=\"no\"),seedCounter1=0,seedCounter2=0,seedCounter3=0}function draw(){let e=(random(w\/s)^frameCount\/s)*s,o=(random(h\/s)^frameCount\/s)*s;if(pg.fill(random([0,127,255]),random([0,127,255]),0),pg.rect(e^o,o,2*s,2*s),pg2.fill(random([20,50,100]),2*random([20,50,100]),0),yamuk(e^o,o,2*s,2*s),1==border&&(pg2.push(),pg2.fill(blockColor),blockChooser>.4?(yamuk(rect1X,rect1Y,rect1W,rect1H),sqTriChooser<.5&&(pg2.fill(blockColor2),yamuk(rect2X,rect2Y,rect1W,rect1H))):blockChooser>.2?pg2.ellipse(width\/2,height\/2,height\/1.25):tri(),pg2.pop()),blurShader.setUniform(\"uTexture0\",pg),blurShader.setUniform(\"u_time\",millis()\/1e3),blurShader.setUniform(\"uResolution\",[width*pix,height*pix]),blurShader.setUniform(\"u_amp\",uAmp),blurShader.setUniform(\"u_octave\",uOctave),blurShader.setUniform(\"u_fbmAmp\",uFbmAmp),blurShader.setUniform(\"u_angleC\",uAngleC),blurShader.setUniform(\"u_sqr\",uSqr),g.noStroke(),g.shader(blurShader),g.translate(-width\/2,-height\/2),g.rect(0,0,width,height),blurShader2.setUniform(\"uTexture0\",pg2),blurShader2.setUniform(\"u_time\",millis()\/1e3),blurShader2.setUniform(\"uResolution\",[width*pix,height*pix]),blurShader2.setUniform(\"u_amp\",uAmp2),blurShader2.setUniform(\"u_octave\",uOctave2),blurShader2.setUniform(\"u_fbmAmp\",uFbmAmp2),blurShader2.setUniform(\"u_angleC\",uAngleC2),blurShader2.setUniform(\"u_sqr\",uSqr),k.noStroke(),k.shader(blurShader2),k.translate(-width\/2,-height\/2),k.rect(0,0,width,height),img.image(c,w\/2,h\/2),frameCount%frameMod==0){let r=random([minDim\/40,minDim\/25,minDim\/10,minDim\/40,minDim\/25,minDim\/100,minDim\/10,minDim\/10,minDim\/5]);blockColor=random([0,255,255,255]),blockColor2=random([0,255,255,255]);for(let t=0;t<h;t+=r)for(let $=0;$<w;$+=r)pg.fill(random([0,127,86]),random([0,127,86]),0),pg.rect($,t,2*r,2*r);if(1==(seedCounter1+=1)){let i=99999999*R.random_dec();noiseSeed(i),randomSeed(i),seedCounter1=0}if(sh.setUniform(\"ak\",random([1,10,5,15,10,5,10,10,5,1])),dirC<.15&&(sh.setUniform(\"dirX\",random([-1,1,0,0])),sh.setUniform(\"dirY\",random([-1,1,0,0]))),\"cont\"==contStr){for(let u=0;u<10\/bgMult;u++)for(let l=0;l<width;l++){let n=random(width),a=random(height),_=noise(.01*n,.01*a)\/50;img.noFill(),img.stroke(darkHue,random([0,darkSat]),random([10,90,90,0]),2*_),img.strokeWeight(random(.5,1)),img.ellipse(n,a,random(100))}if(1==(seedCounter2+=1)){let m=99999999*R.random_dec();noiseSeed(m),randomSeed(m),seedCounter2=0}\"mono\"==monoStr?sh.setUniform(\"dur\",random([1,0,0])):sh.setUniform(\"dur\",random([1,0,0,0]))}else sh.setUniform(\"dur\",random([1,0,0,0,0,0,0]))}if(frameCount%(frameMod*hyperMeter)==0){sh.setUniform(\"dirX\",random([-1,1,0,0,0])),sh.setUniform(\"dirY\",random([-1,1,0,0,0])),sh.setUniform(\"satOn\",random([1,0,0]));for(let v=0;v<10\/bgMult;v++)for(let d=0;d<1*width;d++){let p=random(width),x=random(height),b=noise(.01*p,.01*x)\/50;img.noFill(),img.stroke(darkHue,random([0,darkSat]),random([0,100,100,90,0]),2*b),img.strokeWeight(random(.5,1)),img.ellipse(p,x,random(100))}if(1==(seedCounter3+=1)){let C=99999999*R.random_dec();noiseSeed(C),randomSeed(C),seedCounter3=0}\"cont\"==contStr?sh.setUniform(\"dur\",1):sh.setUniform(\"dur\",random([1,0,0,0]))}if(mouseIsPressed&&1==(coun+=1)){blockColor=255,blockColor2=255,sh.setUniform(\"dur\",1),sh.setUniform(\"celCol\",celColChooser),sh.setUniform(\"dirX\",random([-1,1,0,0])),sh.setUniform(\"dirY\",random([-1,1,0,0]));for(let y=0;y<5;y++)for(let S=0;S<1*width;S++){let D=random(width),U=random(height),T=noise(.01*D,.01*U)\/50;img.noFill(),img.stroke(darkHue,darkSat,random([0,100,100,90]),2*T),img.strokeWeight(random(.5,1)),img.ellipse(D,U,random(100))}coun=0}shaderChooser2<.65?sh.setUniform(\"pg\",g):sh.setUniform(\"pg\",pg),sh.setUniform(\"img\",img),shaderChooser<.65?sh.setUniform(\"pg2\",k):blockChooser>.2?sh.setUniform(\"pg2\",pg2):sh.setUniform(\"pg2\",k),sh.setUniform(\"time\",millis()),quad(-1,-1,1,-1,1,1,-1,1)}function yamuk(e,o,r,t){pg2.beginShape(),pg2.noStroke();let $=min(r,t)\/7;pg2.vertex(e-r\/2+random(-$,$),o-t\/2+random(-$,$)),pg2.vertex(e-r\/4+random(-$,$),o-t\/2+random(-$,$)),pg2.vertex(e+random(-$,$),o-t\/2+random(-$,$)),pg2.vertex(e+r\/4+random(-$,$),o-t\/2+random(-$,$)),pg2.vertex(e+r\/2+random(-$,$),o-t\/2+random(-$,$)),pg2.vertex(e+r\/2+random(-$,$),o-t\/4+random(-$,$)),pg2.vertex(e+r\/2+random(-$,$),o+random(-$,$)),pg2.vertex(e+r\/2+random(-$,$),o+t\/4+random(-$,$)),pg2.vertex(e+r\/2+random(-$,$),o+t\/2+random(-$,$)),pg2.vertex(e+r\/4+random(-$,$),o+t\/2+random(-$,$)),pg2.vertex(e+random(-$,$),o+t\/2+random(-$,$)),pg2.vertex(e-r\/4+random(-$,$),o+t\/2+random(-$,$)),pg2.vertex(e-r\/2+random(-$,$),o+t\/2+random(-$,$)),pg2.vertex(e-r\/2+random(-$,$),o+t\/4+random(-$,$)),pg2.vertex(e-r\/2+random(-$,$),o+random(-$,$)),pg2.vertex(e-r\/2+random(-$,$),o-t\/4+random(-$,$)),pg2.endShape()}function yamukF(e,o,r,t){f.beginShape(),f.noStroke();let $=r\/2;f.vertex(e-r\/2+random(-$,$),o-t\/2+random(-$,$)),f.vertex(e+r\/2+random(-$,$),o-t\/2+random(-$,$)),f.vertex(e+r\/2+random(-$,$),o+t\/2+random(-$,$)),f.vertex(e-r\/2+random(-$,$),o+t\/2+random(-$,$)),f.endShape()}function tri(){pg2.beginShape(),pg2.noStroke(),triChooser<.5?(pg2.vertex(0,0),pg2.vertex(width,0),pg2.vertex(width,height)):(pg2.vertex(0,0),pg2.vertex(0,height),pg2.vertex(width,0)),pg2.endShape()}function keyPressed(){\" \"==key&&((stopCount+=1)%2==0?frameRate(0):frameRate(fr)),\"s\"==key&&saveCanvas(\"AestheticsOfFailure_DistCollective\",\"png\")}class Random{constructor(){this.useA=!1;let e=function(e){let o=parseInt(e.substr(0,8),16),r=parseInt(e.substr(8,8),16),t=parseInt(e.substr(16,8),16),$=parseInt(e.substr(24,8),16);return function(){t|=0;let e=((o|=0)+(r|=0)|0)+($|=0)|0;return $=$+1|0,o=r^r>>>9,r=t+(t<<3)|0,t=(t=t<<21|t>>>11)+e|0,(e>>>0)\/4294967296}};this.prngA=new e(tokenData.hash.substr(2,32)),this.prngB=new e(tokenData.hash.substr(34,32));for(let o=0;o<1e6;o+=2)this.prngA(),this.prngB()}random_dec(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}}",
  "tokens" : [
    {
      "hash" : "0x5f59019a21729289457b091ff02d526712cd2618a093fd0770c3367701ec5bbe",
      "id" : "4000009"
    },
    {
      "hash" : "0x9f424a40dde436698ecaf48c5e497c8e38624265ef0b3da39d71dc06233c004e",
      "id" : "4000078"
    },
    {
      "hash" : "0xfbbe698d06c847296b52a93eee2da5bfeebeee4ed88fcbb9a917c24e26992ace",
      "id" : "4000077"
    },
    {
      "hash" : "0xa3fac581fea649fc17adf6d43a98edcb3e88dd91850b8d1c905c152b48801dc6",
      "id" : "4000022"
    },
    {
      "hash" : "0xd02b9eb409bc179691c4be19b6c770df5f2e4139d95d35038ec9a94b6e85ccd2",
      "id" : "4000021"
    },
    {
      "hash" : "0xc43e3d405af48dca26c5fd8cf276644c3b58f3d612f20eca0a59dc8094419435",
      "id" : "4000046"
    },
    {
      "hash" : "0x12e743506bac70989b4952d65aa32a9cded93d39f8c9ad8aa95f29ec7e5bda47",
      "id" : "4000075"
    },
    {
      "hash" : "0xbe444557d7d75dac433cd15b646fad9b7000955e1ec05ac348abe627cb9dce6e",
      "id" : "4000017"
    },
    {
      "hash" : "0x3c2e5f69a30704b190f2fe58c9330e3905c7e98ba3f53c5d3f68394319694817",
      "id" : "4000042"
    },
    {
      "hash" : "0x592d390ce8066d584efe1390ba6ff2159b55a63d924365cf2bf0f7edff296da0",
      "id" : "4000060"
    },
    {
      "hash" : "0x9585d20018798ae039d983cad192342be98d961ae79dc8503f5be80307fb4d47",
      "id" : "4000085"
    },
    {
      "hash" : "0x86d6bd4115195814e87d4ce4f0812da106711de33500a2fde6549f500d7989bc",
      "id" : "4000068"
    },
    {
      "hash" : "0x34b9f5c90e56f554dee36964ebb72a14f54a3cb7c7c0395807578e31b4ee7a2c",
      "id" : "4000030"
    },
    {
      "hash" : "0x1e7174c11697c55bf6fed755647724501b48808eefa1d274f98302f03491d9aa",
      "id" : "4000016"
    },
    {
      "hash" : "0xa6c384b503d495918cff570ef2996eff8eebbfc8fa52a56b4e775210b7348427",
      "id" : "4000039"
    },
    {
      "hash" : "0xa32290ddcd20fa6783c9c9b3593d58d9ca1ca4a6a2531e79d685f16adaad8b50",
      "id" : "4000097"
    },
    {
      "hash" : "0xdfbcdf7c3b27a3c851dfa990cf32cff10f905691d3f064505466a2a9bfdcf5a2",
      "id" : "4000082"
    },
    {
      "hash" : "0x15f50db8bf73d0be5bf618af69f0b12d1c583f5c929003fbbfbe976789640f51",
      "id" : "4000006"
    },
    {
      "hash" : "0xda4f748ba5f83061aba291b995e1e270c99b607b600fb67e9bd078d61f6aff20",
      "id" : "4000070"
    },
    {
      "hash" : "0xcb53cb315b1a775373d47d2b771b04bfa92efd6b54e8c39bb5d8c646f8e9d52b",
      "id" : "4000035"
    },
    {
      "hash" : "0xd655831527490b738bbf38e5f2fc935ac40f1efc82f5189fb12fa8cb470b7db6",
      "id" : "4000047"
    },
    {
      "hash" : "0x7f057285df1cb81e524682bfd761850903e6e45eefe6c409276b6e6c67d68af3",
      "id" : "4000071"
    },
    {
      "hash" : "0x4442c3e7f7d93bbe57b88971765868785fcdb7641970e6c6433525382dff9154",
      "id" : "4000086"
    },
    {
      "hash" : "0x995e094d3d37056a6277f986e4a8099a0f46d367e42c13a78526ac4b2f13557f",
      "id" : "4000019"
    },
    {
      "hash" : "0x3b85163185f6a60b39112b73ba1bedb3a46b5b75b6f479f5235e7f7c7307409d",
      "id" : "4000024"
    },
    {
      "hash" : "0xda470c8bd118c0d01fec837f4b60726217ebad96145c512372e9036f1b736aa0",
      "id" : "4000008"
    },
    {
      "hash" : "0xc29673e71834c7fe6e7ff90c2fb9f49bea422f68fd27521bcb1509f6c86ea5ba",
      "id" : "4000027"
    },
    {
      "hash" : "0x834a80b51fcf5ee25fa1d613e9201100d1a81502c6340a96f1e289558b44c372",
      "id" : "4000038"
    },
    {
      "hash" : "0x1718011d92bb0bdf372262b88c6a3af4f20c67ae4e86ddd6abfd90254b9047c2",
      "id" : "4000054"
    },
    {
      "hash" : "0x2e12fcbbb46b78ed6c4fe04e28746f4f5d9ad7fc31479d72c6f4a17fd229d479",
      "id" : "4000091"
    },
    {
      "hash" : "0xdefa74e1c878053eed26b36955f5e444c7fad6b299a6cf69147f537640d531d1",
      "id" : "4000076"
    },
    {
      "hash" : "0x73bb5fb7513f592b7242b72ee6ea6d5e2d494e3214dc5941d059304368b08fe7",
      "id" : "4000048"
    },
    {
      "hash" : "0x0d0097bbd6965c98f53ce29e4f38d89993668ed39b6694f9a8ea93a358bd5f58",
      "id" : "4000067"
    },
    {
      "hash" : "0x7fd0e9d17dda7956da009a5eab888e383bcde1e52112fadb9779d560d39edbfc",
      "id" : "4000043"
    },
    {
      "hash" : "0x1c9889fd073b65a7f36e1d47110a0b8c82e53021e70560b95ca229196727a66d",
      "id" : "4000052"
    },
    {
      "hash" : "0xd4f21c131631b15464f54ed593ce8855c6f9811680731b2ec50433b9e374fb21",
      "id" : "4000044"
    },
    {
      "hash" : "0x33eb80468502f81ee316a27b68ec9f0f86b4d80a9919dba8b8b9757408b36636",
      "id" : "4000011"
    },
    {
      "hash" : "0x987cc4bd6e11e3ee8dcb1ecac13f92a448ec6c528cd284362ed6c6476873eab8",
      "id" : "4000066"
    },
    {
      "hash" : "0x55d1fa7570b9339d866ec2ea04505b76570363f6c70b0ceaae4f92481a8cc1c6",
      "id" : "4000062"
    },
    {
      "hash" : "0xb8c05bf044c6641f435ad72d619d6b85d7089fd1d49242393c92298bee101e06",
      "id" : "4000080"
    },
    {
      "hash" : "0xa93ac18269e5a688755decd77713607b35d551dfa1ebff66b98202d2d738040f",
      "id" : "4000034"
    },
    {
      "hash" : "0xc90eaffe7bedd932fcedbe910df2f4f2702a06494413259b33206fbe3cee62a9",
      "id" : "4000081"
    },
    {
      "hash" : "0xe3484acb72f589bd364428541357b6af51fff2e913d692164161c10af1e5c4bf",
      "id" : "4000049"
    },
    {
      "hash" : "0xe4635b8e5ce32cdcdbc4c43c47ff20c35bebdb4473b32643a25f1427008b3729",
      "id" : "4000029"
    },
    {
      "hash" : "0x6bf626f7abcf913656b74af858e379ee15180d35b29f59ab07d62351f4b05d9b",
      "id" : "4000010"
    },
    {
      "hash" : "0xffa65dbdb46b969e279ebbdd628176e7635bc7919921d1a48ab3540b903717ee",
      "id" : "4000094"
    },
    {
      "hash" : "0xfdee0c4b58abd430fc93ac06914f757b5b497187e8bc29c671ee03ad1f03df99",
      "id" : "4000098"
    },
    {
      "hash" : "0xb3408c01857389bcfb0191db7c60d0fc84716ebbbb31135070399b24b0ba802b",
      "id" : "4000031"
    },
    {
      "hash" : "0x8399e30a63324875b4d4ed22d3043be1295227a703f981146897d710cee15b1e",
      "id" : "4000051"
    },
    {
      "hash" : "0xf784b606b354beaf86097936d575d538eaf7c076b588ef834a910288a6ddaf5e",
      "id" : "4000023"
    },
    {
      "hash" : "0x63be72c3c1acad84209071618aa9ac1a1851cfa67da4b6e66b9fc887d2a575cc",
      "id" : "4000074"
    },
    {
      "hash" : "0xdc6ca785b8883d34e847ec6f5d6ef5ea4c5c802b83fae745bcae0f274d26cf5e",
      "id" : "4000045"
    },
    {
      "hash" : "0x30eb5b324f19cdfbfd0607335e2c9769836badc892a6aead1d7cc4542c92602a",
      "id" : "4000020"
    },
    {
      "hash" : "0x65e25a2286cf52482bc8d586a669d6f135e6855c2472ef155e30d395ff97a6b7",
      "id" : "4000005"
    },
    {
      "hash" : "0x16b421600163e5403fd1c3c183ec262bec29ec21a88232503cb960b3058267ec",
      "id" : "4000061"
    },
    {
      "hash" : "0xfef98f29094a169645b92c5066cd5c3b257571f1d7d5d2b7c39baa13abc8281e",
      "id" : "4000055"
    },
    {
      "hash" : "0xd90ed6aec33c4f594d9c63cc2f0aac688834d84cff69a907a89418b7d5292aaf",
      "id" : "4000065"
    },
    {
      "hash" : "0xa43337ded370820e520bd4eb7df2c9fc166c6d30855b25ad98581fdcd29485e4",
      "id" : "4000025"
    },
    {
      "hash" : "0xb7a67371043f32057dee6432a144fcd8b520da83903e52d334fa9db71bc4c23d",
      "id" : "4000015"
    },
    {
      "hash" : "0x50c60ec4823b29cd38b87c4ae1352bfdff80b33ee75a89bb5f3b98ada3f75ec5",
      "id" : "4000032"
    },
    {
      "hash" : "0x027a5e79571c829392bd1d6c807f0aabcba6c18fb2d826ab5046c79331e38e37",
      "id" : "4000087"
    },
    {
      "hash" : "0xeda951bcda585c2aed93e87a1e96180bd572dab5d289759532c64274aebba506",
      "id" : "4000064"
    },
    {
      "hash" : "0x85e0cf6b358d64901ccdf8e3fb52b7933626d4448203b3e0233a42c49b747b25",
      "id" : "4000090"
    },
    {
      "hash" : "0xc43a8327a432f731865fc25778d3e86fcb4d124d2e3aa180783b9667044802a7",
      "id" : "4000014"
    },
    {
      "hash" : "0x71ded519c8ccdb0337717028191a774bd51bdfc0dfc5b818dc19dada3847ff09",
      "id" : "4000089"
    },
    {
      "hash" : "0xcd0739dea0011a3f1b917ee046c432b13178589cddf6b2afa0d690b67f1ced73",
      "id" : "4000001"
    },
    {
      "hash" : "0x00233c547c32f63c9c209df2b437765590d218005b4db8dad34acfc9083c3b7f",
      "id" : "4000012"
    },
    {
      "hash" : "0x148d90e5a716ffdfe5ad66a70d737e1d4030f1a25547b72c31189e19edd93881",
      "id" : "4000072"
    },
    {
      "hash" : "0xd6b3b19e26843abe99c906c5f21f49d26da70dfc2dcd3c2d39143ee99b135e69",
      "id" : "4000013"
    },
    {
      "hash" : "0xdbe136c7b1801bc1fda03ff7831eb84f05447a4460f3ecf59a556f0df3983172",
      "id" : "4000056"
    },
    {
      "hash" : "0xb60165843ab8449cff2e1d66c6fc747c41260856b71024e80550cd2b06d6aa1f",
      "id" : "4000018"
    },
    {
      "hash" : "0xf3d0c993378aa3fd711e66a294defeb5d8d8df7dac538a400854299e4011a452",
      "id" : "4000007"
    },
    {
      "hash" : "0x70a144ee99b3e85a7a5c99266c4686de1933923d1fc1304d84b0c18d562915ed",
      "id" : "4000057"
    },
    {
      "hash" : "0x22149b99fb453f57f26c716cd38f3894a76b503d8a57ac6cb8ec6178a539a067",
      "id" : "4000002"
    },
    {
      "hash" : "0xc431a895853f67b975821f7c8d7e98c299f5a285b43dad83932016f8d8906e1a",
      "id" : "4000003"
    },
    {
      "hash" : "0xd27c36a67ca2ba189ef06af53d4b20f313659f715b48413cf7fdccda1e056615",
      "id" : "4000028"
    },
    {
      "hash" : "0x1f58c53a7d805f6fdc3878f986d7e0c1f2ac6e02095f0838c344184e4614326b",
      "id" : "4000050"
    },
    {
      "hash" : "0x93c3032cd0be044e6f307fbdbc998c0b8e1525cbecb14b73621c3e30ec25bd89",
      "id" : "4000026"
    },
    {
      "hash" : "0xa26b4939a0c434fdf26e4dbf10096dc61794cb116928309b240d63ec793c9378",
      "id" : "4000059"
    },
    {
      "hash" : "0xb72aec938953e072bfb68c70ff2e7bd6673f6d1cb60b085cbc2edaa2241e7006",
      "id" : "4000037"
    },
    {
      "hash" : "0x4b5c80806e238a6f84ff0d8fb402243cfeff0c6f875540552a0972178c4efd4e",
      "id" : "4000058"
    },
    {
      "hash" : "0xdb51ac470028b6b57d8ded477d1b6043f8f80e68ecd3a90e6b46228d89f2c413",
      "id" : "4000088"
    },
    {
      "hash" : "0xe5d5d2e6b9018465ff7574e28b68d64645b5daded1f7cb26b96244d3521f7bb4",
      "id" : "4000063"
    },
    {
      "hash" : "0xc410708f7a347c7895c72430bd35fe7ece7ebe72638d97d4d31fdba6fe7e9815",
      "id" : "4000069"
    },
    {
      "hash" : "0xe012023e28c4973e9a6fe6c7b17eb494fe8e86c446e21b02aa9275d3f170fa9b",
      "id" : "4000079"
    },
    {
      "hash" : "0xd5f28cde2808dfe90c2912337f180ccacea397c967f4b440aab07caed1c7b64e",
      "id" : "4000083"
    },
    {
      "hash" : "0x3b3f259650e2da7dc903ec8427630a610a62bc4b2bb13f9843fc7391c60878b5",
      "id" : "4000036"
    },
    {
      "hash" : "0x82e4c3715a36012ee5c771e35e72e4363f7d8dd5246b6c9a14cb576844280596",
      "id" : "4000073"
    },
    {
      "hash" : "0xfc14f2d48b23fd2efddebea73b4ef6f420df80bcc8f07bf90bbfa2f250effb97",
      "id" : "4000040"
    },
    {
      "hash" : "0x20bbe76dfd06f7454dceeeb5ead2cd6c1e7395a4150ae7a3fc5ae6b6cd16d85b",
      "id" : "4000041"
    },
    {
      "hash" : "0x5a858fba6a5d7e790fcdb794cd09a5123c3153c9bc5302ae5903b848c0cbf941",
      "id" : "4000004"
    },
    {
      "hash" : "0x4a1027936821ec9707f168f32638643cfa881a37005248c8fd79fe6071e0851d",
      "id" : "4000093"
    },
    {
      "hash" : "0x7571a14cdcfb7edfe5d2e38a0d133666018f1dbf6a51bb1ce61fe3be751f4a37",
      "id" : "4000084"
    },
    {
      "hash" : "0xa0211b8b836cbadfb8689d564bf05f65a5fd0b039efe22b77d1e2b472a46af38",
      "id" : "4000095"
    },
    {
      "hash" : "0x1c8ec3faeba721cefbc47ea189cb5d69108e03e5f9af5a39d3cd10c8a7382f68",
      "id" : "4000092"
    },
    {
      "hash" : "0x4bb6bd15c8e63d76e570bd3b7881ab9035db01c52d9e17908494329c12465b47",
      "id" : "4000096"
    },
    {
      "hash" : "0x778bde7345d22a8ea734c2d87d8a95f6366df99867677a57f799782e876ee7a9",
      "id" : "4000033"
    },
    {
      "hash" : "0x4bf41beafb60cd0a6476973f7e2ca49c0b85cf3876432e937670e32a6ab7baea",
      "id" : "4000000"
    },
    {
      "hash" : "0x5ad00d1e5d7c3e9b94dc3f3a9f0d2bdaafbce2e96db418a268904b10c7c3b248",
      "id" : "4000053"
    },
    {
      "hash" : "0x2a4fe9a7eb88a6ef15f2cac660d027a4a8053577a30f6716fd2c076a51949b57",
      "id" : "4000099"
    }
  ]
}