{
  "contractAddress" : "0x0a1bbd57033f57e7b6743621b79fcb9eb2ce3676",
  "kind" : "p5js100",
  "projectId" : "36",
  "script" : "let mintNumber=parseInt(tokenData.tokenId)%1e6;0===mintNumber&&(tokenData.hash=\"0x90ced9ecdb0fd1f5c27351492835551f1bdd7612ec59f92a083dc37020af1858\");class Random{constructor(){this.useA=!1;let e=function(e){let t=parseInt(e.substr(0,8),16),$=parseInt(e.substr(8,8),16),a=parseInt(e.substr(16,8),16),_=parseInt(e.substr(24,8),16);return function(){a|=0;let e=((t|=0)+($|=0)|0)+(_|=0)|0;return _=_+1|0,t=$^$>>>9,$=a+(a<<3)|0,a=(a=a<<21|a>>>11)+e|0,(e>>>0)\/4294967296}};this.prngA=new e(tokenData.hash.substr(2,32)),this.prngB=new e(tokenData.hash.substr(34,32));for(let t=0;t<1e6;t+=2)this.prngA(),this.prngB()}random_dec(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}random_num(e,t){return e+(t-e)*this.random_dec()}random_int(e,t){return Math.floor(this.random_num(e,t+1))}random_bool(e){return this.random_dec()<e}random_choice(e){return e[this.random_int(0,e.length-1)]}}function _createV(e,t,$){let a=$;return void 0==a&&(a=0),{x:e,y:t,z:a}}function _dot(e,t){return e.x*t.x+e.y*t.y+e.z*t.z}function _setMag(e,t){let $=_normalize(e);return _scalarMult($,t)}function _normalize(e){let t=_mag(e);return 0==t?e:_scalarMult(e,1\/t)}function _scalarMult(e,t){return _createV(e.x*t,e.y*t,e.z*t)}function _add(e,t){return _createV(e.x+t.x,e.y+t.y,e.z+t.z)}function _mag(e){return sqrt(sq(e.x)+sq(e.y)+sq(e.z))}function _magSq(e){return sq(e.x)+sq(e.y)+sq(e.z)}function _rotate(e,t,$,a){let _=cos(t),s=cos($),l=cos(a),r=sin(t),n=sin($),o=sin(a),i={x:e.x,y:e.y,z:e.z},p=_,h=r,c=0,m=-r,d=_,u=0,f=0,y=0,g=1;return i={x:i.x*p+i.y*m+i.z*f,y:i.x*h+i.y*d+i.z*y,z:i.x*c+i.y*u+i.z*g},p=s,h=0,c=n,m=0,d=1,u=0,f=-n,y=0,g=s,i={x:i.x*p+i.y*m+i.z*f,y:i.x*h+i.y*d+i.z*y,z:i.x*c+i.y*u+i.z*g},p=1,h=0,c=0,m=0,d=l,u=o,f=0,y=-o,g=l,i={x:i.x*p+i.y*m+i.z*f,y:i.x*h+i.y*d+i.z*y,z:i.x*c+i.y*u+i.z*g}}function blurMap(e,t,$){let a,_,s,l,r;for(s=0;s<t;s++)for(a=0;a<e.length;a++)for(_=0;_<e[0].length;_++)l=0,r=0,a>0&&(r++,l+=e[a-1][_],_>0&&(r++,l+=e[a-1][_-1]),_<e[0].length-1&&(r++,l+=e[a-1][_+1])),a<e.length-1&&(r++,l+=e[a+1][_],_>0&&(r++,l+=e[a+1][_-1]),_<e[0].length-1&&(r++,l+=e[a+1][_+1])),l+=e[a][_],r++,e[a][_]=lerp(e[a][_],l\/r,$)}function handleUrlParams(){let e=window.location.search,t=new URLSearchParams(e),$=t.get(\"mag\");mag=null==$?1:float($)>0?max(float($),1):1}function erode(e,t,$,a){let _=_random(.5,2),s=60*_,l=4*$*10,r=.6*$,n=.6*$,o=.1\/_;for(let i=0;i<t;i++){let p=_random(1),h=_random(1),c=createVector(_random(mapW-1),_random(mapH-1)),m=createVector(0,0),d=0,u=1,f=0;for(let y=0;y<s;++y){let g=round(c.x),x=round(c.y);if(g<0||x<0||g>=mapW-1||x>=mapH-1)break;let S,b;S=c.x>g?c.x-g:g-c.x,b=c.y>x?c.y-x:x-c.y;let z=calculateHeightAndGradient(e,g,x);if(isNaN(z[0])||isNaN(z[1])||isNaN(z[2])||(m.x=.5*m.x-.5*z[0],m.y=.5*m.y-.5*z[1],m.normalize(),c.add(m),0==m.x&&0==m.y||c.x<0||c.x>=mapW-1||c.y<0||c.y>=mapH-1))break;let W=calculateHeightAndGradient(e,c.x,c.y)[2];if(isNaN(W))break;let P=W-z[2],C=max(-P*d*u*l,.01);if(f>C||P>0){let M=g,w=x,A=P>0?min(P,f):(f-C)*r*depositMap[M][w];f-=A;let F=(1-S)*(1-b),V=S*(1-b),k=(1-S)*b,H=S*b;e[M][w]+=A*F,e[M+1][w]+=A*V,e[M][w+1]+=A*k,e[M+1][w+1]+=A*H}else for(let D=0;D<=a;D++)for(let v=0;v<=a;v++){let T;T=1\/sq(a+1);let q=g+D,E=x+v;if(p<.5&&(q=g-D),h<.5&&(E=x-v),q<0||E<0||q>=mapW-1||E>=mapH-1)break;let N=1*(min((C-f)*n,-P)*erodeMap[q][E]*T),L=e[q][E]<N?e[q][E]:N;e[q][E]-=L,f+=L}if(d=sqrt(d*d+4*abs(P)),(u*=1-o)<1e-4)break}}}function calculateHeightAndGradient(e,t,$){if(t<0||t>=e.length-1||$<0||$>=e[0].length-1)return[0,0,0];let a=floor(t),_=floor($),s=t-a,l=$-_,r=e[a][_],n=e[a+1][_],o=e[a][_+1],i=e[a+1][_+1];return[(n-r)*(1-l)+(i-o)*l,(o-r)*(1-s)+(i-n)*s,r*(1-s)*(1-l)+n*s*(1-l)+o*(1-s)*l+i*s*l]}function preparePalette(e){palettes.push([color(\"#1a1d28\"),color(\"#377D71\"),color(\"#8879B0\"),color(\"#FBA1A1\"),color(\"#FBC5C5\"),]),treePalettes.push([color(\"#1a1d28\"),color(\"#2d3351\"),color(\"#214942\"),color(\"#214942\"),color(\"#6dad9f\"),color(\"#6dad9f\"),color(\"#f99d9d\"),color(\"#f8b861\"),]),bushPalettes.push([color(\"#1a1d28\"),color(\"#2d3351\"),color(\"#214942\"),color(\"#214942\"),color(\"#6dad9f\"),color(\"#6dad9f\"),color(\"#f99d9d\"),color(\"#f8b861\"),]),skyPalettes.push([color(\"#f99d9d\"),color(\"#f8b861\"),color(\"#f8b861\"),color(\"#f8b861\"),color(\"#FBC5C5\"),color(\"#FBC5C5\"),]),oceanPalettes.push([color(\"#1a1d28\"),color(\"#1a1d28\"),color(\"#304750\"),color(\"#304750\"),color(\"#668099\"),color(\"#f99d9d\"),color(\"#f8b861\"),]),cactusPalettes.push([color(\"#1a1d28\"),color(\"#2d3351\"),color(\"#8879B0\"),color(\"#f99d9d\"),color(\"#f8b861\"),]),cactusFruitPalettes.push([color(\"#440404\"),color(\"#890a0a\"),color(\"#e30f0f\"),color(\"#f45959\"),]),petalPalettes.push([color(\"#f45959\"),color(\"#f99d9d\"),color(\"#f8b861\"),]),palettes.push([color(\"#1a172f\"),color(\"#29264E\"),lerpColor(color(\"#29264E\"),color(\"#9881F5\"),.5),color(\"#9881F5\"),lerpColor(color(\"#9881F5\"),color(\"#82AFF9\"),.5),color(\"#F97D81\"),lerpColor(color(\"#F97D81\"),color(\"#fcbcbe\"),.5),color(\"#fcbcbe\"),color(\"#f7c066\"),]),treePalettes.push([color(\"#1a172f\"),color(\"#29264E\"),color(\"#354e6f\"),color(\"#7d8cb5\"),color(\"#799f89\"),color(\"#efc9d7\"),color(\"#f7c066\"),]),bushPalettes.push([color(\"#1a172f\"),color(\"#29264E\"),color(\"#354e6f\"),color(\"#7d8cb5\"),color(\"#799f89\"),color(\"#efc9d7\"),color(\"#f7c066\"),]),skyPalettes.push([color(\"#9881F5\"),lerpColor(color(\"#9881F5\"),color(\"#82AFF9\"),.5),color(\"#F97D81\"),lerpColor(color(\"#F97D81\"),color(\"#fcbcbe\"),.5),color(\"#fcbcbe\"),color(\"#f7c066\"),]),oceanPalettes.push([color(\"#29264E\"),color(\"#29264E\"),lerpColor(color(\"#29264E\"),color(\"#4d75b3\"),.1),lerpColor(color(\"#29264E\"),color(\"#4d75b3\"),.2),lerpColor(color(\"#29264E\"),color(\"#4d75b3\"),.3),color(\"#4d75b3\"),lerpColor(color(\"#4d75b3\"),color(\"#82AFF9\"),.5),color(\"#F97D81\"),lerpColor(color(\"#F97D81\"),color(\"#fcbcbe\"),.5),color(\"#fcbcbe\"),color(\"#f7c066\"),]),cactusPalettes.push([color(\"#1a172f\"),color(\"#29264E\"),color(\"#F97D81\"),color(\"#efc9d7\"),color(\"#f7c066\"),]),cactusFruitPalettes.push([color(\"#440404\"),color(\"#890a0a\"),color(\"#e30f0f\"),color(\"#f45959\"),]),petalPalettes.push([color(\"#F97D81\"),color(\"#efc9d7\"),color(\"#f7c066\"),]),palettes.push([color(\"#0b0b62\"),color(\"#2f2fd2\"),color(\"#4649FF\"),color(\"#7978FF\"),color(\"#C47AFF\"),color(\"#baaef9\"),]),treePalettes.push([color(\"#0b0b62\"),color(\"#1c4fe6\"),color(\"#4679ff\"),color(\"#7799ff\"),color(\"#C47AFF\"),color(\"#aed3f9\"),]),bushPalettes.push([color(\"#0b0b62\"),color(\"#1c4fe6\"),color(\"#4679ff\"),color(\"#7799ff\"),color(\"#C47AFF\"),color(\"#aed3f9\"),]),skyPalettes.push([color(\"#0b0b62\"),color(\"#2f2fd2\"),color(\"#4649FF\"),color(\"#7978FF\"),color(\"#baaef9\"),color(\"#d1c5e2\"),]),oceanPalettes.push([color(\"#0b0b62\"),color(\"#2f2fd2\"),color(\"#4649FF\"),color(\"#7978FF\"),color(\"#baaef9\"),color(\"#d1c5e2\"),]),cactusPalettes.push([color(\"#0b0b62\"),color(\"#7799ff\"),color(\"#aed3f9\"),]),cactusFruitPalettes.push([color(\"#360062\"),color(\"#530097\"),color(\"#9717ff\"),color(\"#C47AFF\"),]),petalPalettes.push([color(\"#4679ff\"),color(\"#7799ff\"),color(\"#baaef9\"),color(\"#d1c5e2\"),]),palettes.push([color(\"#232601\"),color(\"#4a69fe\"),color(\"#ef412f\"),color(\"#efac25\"),color(\"#eeefd0\"),]),treePalettes.push([color(\"#232601\"),color(\"#232601\"),color(\"#232601\"),color(\"#4a69fe\"),color(\"#226330\"),color(\"#efac25\"),color(\"#efac25\"),color(\"#eeefd0\"),color(\"#eeefd0\"),]),bushPalettes.push([color(\"#232601\"),color(\"#226330\"),color(\"#efac25\"),color(\"#eeefd0\"),]),skyPalettes.push([color(\"#011ea5\"),color(\"#4a69fe\"),color(\"#ef412f\"),color(\"#efac25\"),color(\"#eeefd0\"),]),oceanPalettes.push([color(\"#011ea5\"),color(\"#4a69fe\"),color(\"#ef412f\"),color(\"#efac25\"),]),cactusPalettes.push([color(\"#232601\"),color(\"#226330\"),color(\"#efac25\"),color(\"#eeefd0\"),]),cactusFruitPalettes.push([color(\"#550e06\"),color(\"#941a0c\"),color(\"#ef412f\"),color(\"#f47a6c\"),]),petalPalettes.push([color(\"#efac25\"),color(\"#eeefd0\"),]),palette=palettes[e],treePalette=treePalettes[e],bushPalette=bushPalettes[e],skyPalette=skyPalettes[e],oceanPalette=oceanPalettes[e],cactusPalette=cactusPalettes[e],cactusFruitPalette=cactusFruitPalettes[e],petalPalette=petalPalettes[e]}function paletteColor(e){return palette[constrain(floor(e*palette.length),0,palette.length-1)]}function treePaletteColor(e){return treePalette[constrain(floor(e*treePalette.length),0,treePalette.length-1)]}function bushPaletteColor(e){return bushPalette[constrain(floor(e*bushPalette.length),0,bushPalette.length-1)]}function skyPaletteColor(e){return skyPalette[constrain(floor(e*skyPalette.length),0,skyPalette.length-1)]}function oceanPaletteColor(e){return oceanPalette[constrain(floor(e*oceanPalette.length),0,oceanPalette.length-1)]}function cactusPaletteColor(e){return cactusPalette[constrain(floor(e*cactusPalette.length),0,cactusPalette.length-1)]}function cactusFruitPaletteColor(e){return cactusFruitPalette[constrain(floor(e*cactusFruitPalette.length),0,cactusFruitPalette.length-1)]}function petalPaletteColor(e){return petalPalette[constrain(floor(e*petalPalette.length),0,petalPalette.length-1)]}function landscapeColor(e,t){return paletteColor(map(hMap[e][t],0,2*TWO_PI,0,noise(e*noiseScale*4+1e3,t*noiseScale*4+1e3)))}function lightColor(e){return paletteColor(e)}function prepareHeightMap(){let e=(mapW=100*floor(targetSzW\/targetSz)+2*mapTrim)*(mapH=100+2*mapTrim)\/1e4;landscapeShape=_random([\"valleyAbs\",\"valleyCos\",\"valleyCos\",\"mountainAbs\",\"mountainAbs\",\"updownLeft\",\"updownLeft\",\"updownRight\",\"updownRight\"]),noiseDetail(1,1),mapScale=_random(.3,.7);let t=map(mapScale,.1,1,.6,.2),$=[[1,1*mapScale],[t,2*mapScale],[pow(t,2),4*mapScale],],a=0;for(let _=0;_<$.length;_++)a+=$[_][0];for(let s=0;s<mapW;s++){let l=[],r=[],n=[];for(let o=0;o<mapH;o++){let i=0;for(let p=0;p<$.length;p++)i+=norm(sNoise.noise2D(s*noiseScale*$[p][1]*2,o*noiseScale*$[p][1]*1),-1,1)*$[p][0];let h=constrain(pow(map(i,0,a,0,1),1),0,1);h*=map(o,0,mapH,1,0),\"valleyAbs\"==landscapeShape?h*=pow(map(abs(s-mapW\/2),0,mapW\/2+mapTrim,0,1),1):\"valleyCos\"==landscapeShape?(h*=pow(map(cos(map(s,0,mapW,0,TAU)),-1,1,0,.8),.53),h*=map(o,0,mapH,.9,1)):\"updownLeft\"==landscapeShape?(h*=map(sin(map(s+map(noise(o*noiseScale*4),0,1,-1,1)*mapW*0,mapTrim,mapW-mapTrim,0,TAU)),-1,1,0,.65),h*=map(o,0,mapH,.7,1)):\"updownRight\"==landscapeShape?(h*=map(sin(map(mapW-s+map(noise(o*noiseScale*4),0,1,-1,1)*mapW*.1,mapTrim,mapW-mapTrim,0,TAU)),-1,1,0,.65),h*=map(o,0,mapH,.7,1)):\"mountainAbs\"==landscapeShape&&(h*=pow(map(abs(s-mapW\/2+map(noise(o*noiseScale*4),0,1,-1,1)*mapW*.15),0,mapW\/2,.8,0),1),h*=map(o,0,mapH,.8,1)),h=floor(1e5*h)\/1e5,h*=2*TAU;let c=map(s,0,mapW,0,targetSzW);c+=cos(h)*warpSz;let m=map(o,0,mapH,0,targetSz);m+=sin(h)*warpSz,minX=min(c,minX),maxX=max(c,maxX),minY=min(m,minY),maxY=max(m,maxY),l.push(h),r.push(.1),n.push(.001)}hMap.push(l),erodeMap.push(r),depositMap.push(n)}erode(hMap,1e4*e,1,4),erode(hMap,1e4*e,1,4),erode(hMap,1e4*e,1,4),erode(hMap,1e4*e,1,2),erode(hMap,1e4*e,1,1),blurMap(hMap,1,.4)}function prepareLigthMap(){for(let e=0;e<mapW;e++){let t=[];for(let $=0;$<mapH;$++){let a=_normalize(hMapNormal(e,$)),_=_dot(a,lgt);t.push(_)}lMap.push(t)}}function hMapNormal(e,t){let $,a=1,_,s=1;return e==mapW-1?($=e-1,a=-1):$=e+1,t==mapH-1?(_=t-1,s=-1):_=t+1,_createV((hMap[$][t]-hMap[e][t])*a,(hMap[e][_]-hMap[e][t])*s)}function hMapNormal2(e,t){let $,a=1,_,s=1;return e==mapW-1?($=e-1,a=-1):$=e+1,t==mapH-1?(_=t-1,s=-1):_=t+1,_createV((hMapNormal($,t).x-hMapNormal(e,t).x)*a,(hMapNormal(e,_).y-hMapNormal(e,t).y)*s)}function openSimplexNoise(e){\"use strict\";let t=e=>e.split(\",\").map(e=>new Uint8Array(e.split(\"\").map(e=>Number(e)))),$=(e,t,$)=>new Int8Array($.split(\"\").map($=>parseInt($,t)+e)),a=e=>e.split(\",\").map(e=>parseInt(e,32)),_=1\/47,s=1\/103,l=.7320508075688772\/2,r=1\/3,n=(.5773502691896258-1)\/2,o=-.5\/3;var i=t(\"110101000,110101211\"),p=t(\"0000110010101001,2110210120113111,110010101001211021012011\");t(\"0000011000101001001010001,3111031101310113011141111,11000101001001010001211002101021001201102010120011,31110311013101130111211002101021001201102010120011\");let h=$(-5,11,\"a77a073aa3700330\"),c=$(-11,23,\"0ff7mf7fmmfffmfffm07f70f77mm7ff0ff7m0f77m77f0mf7fm7ff0077707770m77f07f70\");var m=()=>new Uint8Array([0,1,1,0,4,1,17,0,20,2,21,2,22,5,23,5,26,4,39,3,42,4,43,3]),d=()=>new Uint16Array(a(\"0,2,1,1,2,2,5,1,6,0,7,0,10,2,12,2,41,1,45,1,50,5,51,5,g6,0,g7,0,h2,4,h6,4,k5,3,k7,3,l0,5,l1,5,l2,4,l5,3,l6,4,l7,3,l8,d,l9,d,la,c,ld,e,le,c,lf,e,m8,k,ma,i,p9,l,pd,n,q8,k,q9,l,15e,j,15f,m,16a,i,16e,j,19d,n,19f,m,1a8,f,1a9,h,1aa,f,1ad,h,1ae,g,1af,g,1ag,b,1ah,a,1ai,b,1al,a,1am,9,1an,9,1bg,b,1bi,b,1eh,a,1el,a,1fg,8,1fh,8,1qm,9,1qn,9,1ri,7,1rm,7,1ul,6,1un,6,1vg,8,1vh,8,1vi,7,1vl,6,1vm,7,1vn,6\")),u=$(-1,4,\"112011021322233123132111\"),f=$(-1,5,\"112011210110211120110121102132212220132122202131222022243214231243124213241324123222113311221213131221123113311112202311112022311112220342223113342223311342223131322023113322023311320223113320223131322203311322203131\");let y=(e,t=e=>e)=>{for(var $=[],a=0;a<e;)$.push(t(a++));return $};function g(e,t=1){return e=1664525*e+1013904223|0,(t-=1)>0?g(e,t):e}let x={_2D:{base:i,squish:l,dimensions:2,pD:u,lookup:m},_3D:{base:p,squish:r,dimensions:3,pD:f,lookup:d}};function S(e,t,$){var a=0;let _=t[$++],s={next:void 0};for(;a<e.dimensions;){let l=\"xyzw\"[a];s[l+\"sb\"]=t[$+a],s[\"d\"+l]=-t[$+a++]-_*e.squish}return s}function b(e){let t=[],$=e.dimensions,a=$*$;for(var _,s=0;s<e.pD.length;){let l=e.base[e.pD[s]],r,n;_=0;do n=S(e,l,_),r?r.next=n:t[s\/a]=n,r=n,_+=$+1;while(_<l.length);n.next=S(e,e.pD,s+1),$>=3&&(n.next.next=S(e,e.pD,s+$+2)),4===$&&(n.next.next.next=S(e,e.pD,s+11)),s+=a}let o=[t,function e(t,$){var a;let _=t(),s=new Map;for(a=0;a<_.length;a+=2)s.set(_[a],$[_[a+1]]);return s}(e.lookup,t)];return e.base=void 0,e.lookup=void 0,o}let[z,W]=b(x._2D),[P,C]=b(x._3D),M=new Uint8Array(256),w=new Uint8Array(256),A=new Uint8Array(256),F=new Uint8Array(y(256,e=>e));var V=g(e,3);return((e,t)=>{for(var $=0;$<256&&!0!==t($++););})(256,e=>{e=255-e;var t=((V=g(V))+31)%(e+1);t+=t<0?e+1:0,M[e]=F[t],w[e]=14&M[e],A[e]=M[e]%24*3,F[t]=F[e]}),i=p=void 0,m=d=void 0,u=f=void 0,{noise2D(e,t){let $=w,a=M,s=h,r=(e+t)*n,o=e+r,i=t+r,p=Math.floor(o),c=Math.floor(i),m=(p+c)*l,d=e-(p+m),u=t-(c+m);for(var f,y=(()=>{let e=o-p,t=i-c,$=e+t;return W.get(e-t+1|$<<1|$+t<<2|$+e<<4)})(),g=0;void 0!==y;){let x=d+y.dx,S=u+y.dy,b=2-x*x-S*S;b>0&&(f=$[a[p+y.xsb&255]+(c+y.ysb)&255],b*=b,g+=b*b*(s[f++]*x+s[f]*S)),y=y.next}return g*_},noise3D(e,t,$){let a=A,_=M,l=c,n=(e+t+$)*o,i=e+n,p=t+n,h=$+n,m=Math.floor(i),d=Math.floor(p),u=Math.floor(h),f=(m+d+u)*r,y=e-(m+f),g=t-(d+f),x=$-(u+f);for(var S,b=(()=>{let e=i-m,t=p-d,$=h-u,a=e+t+$;return C.get(t-$+1|e-t+1<<1|e-$+1<<2|a<<3|a+$<<5|a+t<<7|a+e<<9)})(),z=0;void 0!==b;){let W=y+b.dx,P=g+b.dy,w=x+b.dz,F=2-W*W-P*P-w*w;F>0&&(S=a[(_[m+b.xsb&255]+(d+b.ysb)&255)+(u+b.zsb)&255],F*=F,z+=F*F*(l[S++]*W+l[S++]*P+l[S]*w)),b=b.next}return z*s}}}class SketchyShape{constructor(){this.wt=1,this.maxV=3,this.acc=.005,this.c=color(0,64),this.density=1,this.wobble=0,this.angle=0,this.lineLen=0,this.age=0,this.pathLen=0}update(){if(this.age++,this.age>2*this.pathLen)return\"done\";push(),translate(this.x,this.y),rotate(this.angle),0==this.lineLen&&void 0!=this.drawBg&&this.drawBg();let e=this.points[this.penTargetIndex],t=e.x-this.pen.x,$=e.y-this.pen.y,a=t*this.acc,_=$*this.acc;this.penV.x+=a,this.penV.y+=_;let s=_rotate({x:this.wobble,y:0,z:0},_random(TAU),0,0);this.penV.x+=s.x,this.penV.y+=s.y,this.penV.x*=.8,this.penV.y*=.8;let l=_mag(this.penV);l>this.maxV&&(this.penV=_setMag(this.penV,this.maxV)),this.lineLen+=l,this._pen.x=this.pen.x,this._pen.y=this.pen.y,this.pen.x+=this.penV.x,this.pen.y+=this.penV.y;if(sq(e.x-this.pen.x)+sq(e.y-this.pen.y)<9&&(this.penTargetIndex++,this.penTargetIndex>=this.points.length))return pop(),this.points=null,\"done\";noStroke(),fill(this.c);let r=round(this.density),n={x:0,y:0,z:0};for(let o=0;o<r;o++)n.x=sqrt(_random(1))*map(noise(.001*this.lineLen),0,1,.5,1)*this.wt\/2,n.y=0,n=_rotate(n,_random(TAU),0,0),circle(this.pen.x+n.x,this.pen.y+n.y,1);pop()}setWeight(e){this.wt=e}setMaxV(e){this.maxV=e}setAcc(e){this.acc=e}setColor(e){this.c=e}setDensity(e){this.density=e}setWobble(e){this.wobble=e}setAngle(e){this.angle=e}}class SketchyEllipse extends SketchyShape{constructor(e,t,$,a,_,s){if(super(),this.x=e,this.y=t,this.w=$,this.h=a,this.points=[],s){let l=max(3,10*round($\/_));for(let r=0;r<l;r++){let n=map(r,0,l-2,0,1.5*TAU),o=map(noise(.1*r),0,1,.5,1),i=o*$*cos(n),p=o*a*sin(n);this.points.push({x:i,y:p})}}else{let h=max(2,round($\/_));for(let c=0;c<h;c++){let m=map(c,0,h-1,-$,$),d=a*sqrt(1-sq(m)\/sq($));!(isNaN(m)||isNaN(d))&&(this.points.push({x:m,y:d}),this.points.push({x:m,y:-d}))}}this.pen=_createV(this.points[0].x,this.points[0].y),this._pen={x:this.pen.x,y:this.pen.y},this.penTargetIndex=1,this.penV=_createV(0,0);for(let u=0;u<this.points.length-1;u++){let f=this.points[u],y=this.points[u+1];this.pathLen+=dist(f.x,f.y,y.x,y.y)}}}class SketchyQuad extends SketchyShape{constructor(e,t,$,a,_,s,l,r,n){super(),this.x=(e+$+_+l)\/4,this.y=(t+a+s+r)\/4,this.x1=e-this.x,this.y1=t-this.y,this.x2=$-this.x,this.y2=a-this.y,this.x3=_-this.x,this.y3=s-this.y,this.x4=l-this.x,this.y4=r-this.y;let o=dist(this.x1,this.y1,this.x2,this.y2),i=dist(this.x3,this.y3,this.x4,this.y4);this.points=[];let p,h,c=max(2,round(max(o,i)\/n));for(let m=0;m<c;m++){let d=map(m,0,c-1,0,1);p=lerp(this.x1,this.x2,d),h=lerp(this.y1,this.y2,d);let u=p,f=h,y=noise(.08*p,.08*h)*TAU;p+=1*cos(y),h+=1*sin(y),this.points.push({x:p,y:h}),!isNaN(p)&&(p=lerp(this.x4,this.x3,d),h=lerp(this.y4,this.y3,d),y=noise(.08*p,.08*h)*TAU,p+=1*cos(y),h+=1*sin(y),this.points.push({x:p,y:h}))}this.pen=_createV(this.points[0].x,this.points[0].y),this._pen={x:this.pen.x,y:this.pen.y},this.penTargetIndex=1,this.penV=_createV(0,0);for(let g=0;g<this.points.length-1;g++){let x=this.points[g],S=this.points[g+1];this.pathLen+=dist(x.x,x.y,S.x,S.y)}}}class SketchyRect extends SketchyQuad{constructor(e,t,$,a,_){let s=e-$\/2,l=t-a\/2,r=e+$\/2,n=t-a\/2,o,i;super(s,l,r,n,e+$\/2,t+a\/2,e-$\/2,t+a\/2,_)}}class SketchyWeightedLine extends SketchyRect{constructor(e,t,$,a,_,s){let l=dist(e,t,$,a),r=atan2(a-t,$-e),n;super(lerp(e,$,.5),lerp(t,a,.5),_,l,s),this.angle=r+PI\/2}}class SketchyLine extends SketchyShape{constructor(e,t,$,a){super(),this.x=0,this.y=0,this.points=[],this.points.push({x:e,y:t}),this.points.push({x:$,y:a}),this.pen=_createV(this.points[0].x,this.points[0].y),this._pen={x:this.pen.x,y:this.pen.y},this.penTargetIndex=1,this.penV=_createV(0,0)}}let R=new Random,saveMode=!1,saving=!1,saveTime=0,doDownload=!1,canv,shapes=[],paperColor,palettes=[],palette,treePalettes=[],treePalette,bushPalettes=[],bushPalette,skyPalettes=[],skyPalette,oceanPalettes=[],oceanPalette,cactusPalettes=[],cactusPalette,cactusFruitPalettes=[],cactusFruitPalette,petalPalettes=[],petalPalette,noiseScale=.01,hMap=[],lMap=[],erodeMap=[],depositMap=[],mapW,mapH,mapScale,mapTrim=8,minX=1e13,maxX=-1e13,minY=1e13,maxY=-1e13,terrainHt,warpSz,landscapeShape,targetSz=400,targetSzW=600,sizeAdj,scl=.8,mag,lightAngle,lgt,skyCenterX,skyCenterY,plantThresh,sNoise,nSeed,rSeed;function setup(){rSeed=Math.floor(_random(1e8)),nSeed=Math.floor(_random(1e8)),randomSeed(rSeed),noiseSeed(nSeed),sNoise=new openSimplexNoise(nSeed),handleUrlParams();let e;windowHeight>floor(windowWidth*(targetSz\/targetSzW))?(e=floor(windowWidth*mag),sizeAdj=floor(mag*windowWidth*(targetSz\/targetSzW))\/targetSz,canv=createCanvas(e,floor(e*(targetSz\/targetSzW)))):(e=floor(mag*windowHeight*targetSzW\/targetSz),sizeAdj=floor(e*(targetSz\/targetSzW))\/targetSz,canv=createCanvas(e,floor(windowHeight*mag))),background(paperColor=color(\"#dfd8ce\")),document.querySelector(\"html\").style.width=\"100%\",document.querySelector(\"html\").style.height=\"100%\",document.querySelector(\"html\").style.margin=0,document.querySelector(\"html\").style.padding=0,document.querySelector(\"html\").style.backgroundColor=paperColor,document.querySelector(\"html\").style.display=\"flex\",document.querySelector(\"html\").style.justifyContent=\"center\",document.querySelector(\"html\").style.alignItems=\"center\",document.querySelector(\"body\").style.width=\"100%\",document.querySelector(\"body\").style.height=\"100%\",document.querySelector(\"body\").style.margin=0,document.querySelector(\"body\").style.padding=0,document.querySelector(\"body\").style.backgroundColor=paperColor,document.querySelector(\"body\").style.display=\"flex\",document.querySelector(\"body\").style.justifyContent=\"center\",document.querySelector(\"body\").style.alignItems=\"center\",canv.style.display=\"block\",paletteIndex=_random([0,0,0,1,1,1,2,3,3,3]),preparePalette(paletteIndex),lightAngle=-PI\/2+_random(-1,1)*PI\/6,lgt=_normalize(_createV(cos(lightAngle),sin(lightAngle),0)),terrainHt=-.6*targetSz,warpSz=0,prepareHeightMap(),prepareLigthMap(),skyCenterX=mapW*map(lightAngle,-PI\/2-PI\/6,-PI\/2+PI\/6,.8,.2),skyCenterY=mapH*_random(.2,.5);let t=_random(.2,.25);plantThresh=_random(.51,.52);let $=.2,a=.8,_=_random(.35,.4),s=_random(.1,.6),l=targetSz*s,r=.5*targetSz,n=-(0*targetSz);for(let o=0;o<900*(targetSzW\/targetSz)*.7;o++){let i=-n-20,p=targetSzW+n+20,h=_random(i,p),c=_random(targetSz-r-.2*targetSz)+r,m=c+10,d=map(c,0,targetSzW,0,mapW*$),u=map(c,0,targetSz,mapW-1,mapW*a),f=constrain(floor(map(h,i,p,mapTrim+d,u-mapTrim)),0,mapW-1),y=constrain(floor(map(c,r,targetSz-.2*targetSz,mapTrim,floor(.7*mapH))),0,mapH-1),g=hMap[f][y];h+=cos(g)*warpSz,c+=sin(g)*warpSz,c+=map(g,0,2*TAU,0,1)*terrainHt*map(c,l,targetSz,1,0);let x=_normalize(hMapNormal(f,y)),S=_dot(x,lgt),b=floor(_random(1e3)),z=floor(_random(1e3));if(0!=g){let W=.01*targetSz,P=_createV(1,0);P=_rotate(P,2*noise(h*noiseScale,c*noiseScale,.1*_random(TAU))*TAU,0,0),P=_scalarMult(P,_random(W));let C=constrain(1.1*norm(S,-1,1)+.1*_random(-1,1),0,1),M=noise(f*noiseScale*4+1e3,y*noiseScale*4+1e3);if(20>floor(_random(100))){let w=new SketchyEllipse(h+P.x,c+P.y,W,W,1,!1);w.z=m,w.setWeight(2.5),w.setMaxV(.3),w.setAcc(.01),w.setDensity(1),w.setWobble(.1),w.setAngle(_random(TAU));let A=paletteColor(lerp(M,C,constrain(2*abs(C-.5)+.1*_random(-1,1),0,1)));w.setColor(color(red(A),green(A),blue(A),64)),shapes.push(w)}if(g<1.6*PI&&y>12){let F=noise(f*noiseScale*3+1234,y*noiseScale*3+1234);if(abs(x.x)<plantThresh){let V=noise(f*noiseScale*4+100,y*noiseScale*4+123);if(F>t)y>21&&f>22&&f<mapW-1-22&&(b<map(t,.2,.4,200,400)+0&&addTree(h,c,m-11,C,map(V,0,1,23,55)*map(c,l,targetSz,1,1.9)*_random(.65,1.2)),addBush(h,c,m-10,C,map(V,0,1,10,100),f,y));else{if(z<50){let k=map(V,0,1,1,12);addCactus(h,c,h,c,m-10,C,k,round(_random(1,4)),0)}50>_random(100)&&addBush(h,c,m-10,C,map(V,0,1,10,160),f,y)}let H=map(V,0,1,2,5),D=map(V,0,1,1,3);for(let v=-H;v<=H;v++)for(let T=-D;T<=D;T++){let q=floor(f+v+cos(lightAngle)*H*.5),E=floor(y+T+sin(lightAngle)*D*.5);q<0||q>=mapW||E<0||E>=mapH||(lMap[q][E]=lerp(lMap[q][E],-1,.7))}}}}}for(let N=0;N<1924.9999999999998;N++){let L=-n-20,B=targetSzW+n+20,X=_random(L,B),Y=_random(targetSz-r-.2*targetSz)+r,I=Y,j=map(Y,0,targetSz,0,mapW*$),G=map(Y,0,targetSz,mapW-1,mapW*a),Q=constrain(floor(map(X,L,B,mapTrim+j,G-mapTrim)),0,mapW-1),U=constrain(floor(map(Y,r,targetSz-.2*targetSz,mapTrim,floor(.7*mapH))),0,mapH-1),J=hMap[Q][U];X+=cos(J)*warpSz,Y+=sin(J)*warpSz,Y+=map(J,0,2*TAU,0,1)*terrainHt*map(Y,l,targetSz,1,0);let K=_normalize(hMapNormal(Q,U)),O=lMap[Q][U],Z=_magSq(hMapNormal2(Q,U)),ee=.0375*targetSz,et=.075*targetSz*.8,e$=max(1,floor(map(pow(abs(Y-I),1),0,pow(abs(terrainHt)+abs(warpSz),1),1,_random(3,8))));for(let ea=0;ea<e$;ea++){let e_=constrain(map(Z,1e-4,8e-4,et,ee),ee,et),es=_createV(0,.15*abs(_random(Y-I)));es=_rotate(es,0,0,_random(-1,1)*PI\/8);let el=new SketchyEllipse(X+es.x,Y+es.y,.0125*targetSz,e_*_random(.9,1.1),_random(1,1.5));el.z=I,el.setWeight(3),el.setMaxV(1),el.setAcc(.02),el.setDensity(2.5),el.setWobble(.2),el.setAngle(map(K.x,1,-1,0,PI\/2)+PI\/4+(2*round(_random(1))-1)*PI+map(noise(X*noiseScale,Y*noiseScale),0,1,-1,1)*PI\/8*0);for(let er=0;er<el.points.length;er++){let en=el.points[er],eo=(2*noise(en.x*noiseScale*4+100,en.y*noiseScale*4+100)-1)*2*TAU;en.x+=2*cos(eo),en.y+=2*sin(eo)}let ei=constrain(1.1*norm(O,-1,1),0,1),ep=noise(Q*noiseScale*4+1e3,U*noiseScale*4+1e3),e0=paletteColor(lerp(ep,ei,2*abs(ei-.5)));el.setColor(color(red(e0),green(e0),blue(e0),_random(64,100))),shapes.push(el)}}l=targetSz*s,r=.8*targetSz,$=0,a=1;let eh=0*targetSz;for(let ec=0;ec<800*(targetSzW\/targetSz)*.30000000000000004;ec++){let em=eh-20,ed=targetSzW+eh+20,eu=_random(em,ed),ef=_random(targetSz-r)+r,ey=ef+10+1e3,eg=map(ef,0,targetSz,0,mapW*$),e8=map(ef,0,targetSz,mapW-1,mapW*a),e3=constrain(floor(map(eu,em,ed,mapTrim+eg,e8-mapTrim)),0,mapW-1),ex=constrain(floor(map(ef,r,targetSz,floor(.7*mapH),mapH-1-mapTrim)),0,mapH-1),eS=hMap[e3][ex];eu+=cos(eS)*warpSz,ef+=sin(eS)*warpSz,ef+=map(eS,0,2*TAU,0,1)*terrainHt*1.5;let e1=_normalize(hMapNormal(e3,ex)),e2=_dot(e1,lgt);if(0!=eS){let e7=_random(4,4),eb=_createV(1,0);eb=_rotate(eb,2*noise(eu*noiseScale,ef*noiseScale,.1*_random(TAU))*TAU,0,0),eb=_scalarMult(eb,_random(e7));let ez=constrain(1.1*norm(e2,-1,1),0,1),e4=noise(e3*noiseScale*4+1e3,ex*noiseScale*4+1e3);if(.5>_random(1)){let e5=new SketchyEllipse(eu+eb.x,ef+eb.y,e7,e7,1,!1);e5.z=ey,e5.setWeight(2.5),e5.setMaxV(.3),e5.setAcc(.01),e5.setDensity(1),e5.setWobble(.1),e5.setAngle(_random(TAU));let e6=paletteColor(lerp(e4,ez,constrain(2*abs(ez-.5)+.1*_random(-1,1),0,1)));e5.setColor(color(red(e6),green(e6),blue(e6),64)),shapes.push(e5)}let eW=noise(e3*noiseScale*2+143283,ex*noiseScale*2+12739);if(eS<1.5*PI&&ex>4&&abs(e1.x)<3*plantThresh){let eP=noise(e3*noiseScale*9+1009,ex*noiseScale*9+1239);if(_random(1)<.2*map(abs(e3-mapW\/2),0,mapW\/2,.5,1)){if(eW>.15){if(_random(1)<.1*map(abs(e3-mapW\/2),0,mapW\/2,.8,1)&&e3>12&&e3<mapH-1-12&&ex>floor(.7*mapH)+2){let eC=-PI\/2+_random(-1,1)*PI\/8,eM=map(eP,0,1,5,12)*map(ef,l,targetSz,2,2.5);addCactus(eu+cos(eC)*eM*2,ef+sin(eC)*eM*2,eu+cos(eC)*eM*2,ef+sin(eC)*eM*2,ey-10,ez,eM,round(_random(1,3)),eC)}}else if(10.5>_random(1)&&e3>11&&e3<mapH-1-11)for(let ew=0;ew<2;ew++)addFlowerClump(eu+_random(-1,1)+.1,ef+_random(-1,1)+.1,ey-5,ez,map(eP,0,1,6,15)),addBush(eu,ef,ey-4,ez,map(eP,0,1,10,20)*map(ef,l,targetSz,4,8),e3,ex);addBush(eu,ef,ey-10,ez,map(eP,0,1,10,100)*map(ef,l,targetSz,4,8),e3,ex)}let eA=map(eP,0,1,2,3),eF=map(eP,0,1,1,2);for(let eV=-eA;eV<=eA;eV++)for(let ek=-eF;ek<=eF;ek++){let eH=floor(e3+eV+cos(lightAngle)*eA*.5),eD=floor(ex+ek+sin(lightAngle)*eF*.5);eH<0||eH>=mapW||eD<0||eD>=mapH||(lMap[eH][eD]=lerp(lMap[eH][eD],-1,.7))}}}}for(let ev=0;ev<1500.0000000000002;ev++){let eT=-eh-20,eq=targetSzW+eh+20,eE=_random(eT,eq),eN=_random(targetSz-r)+r,eL=eN+1e3,eB=map(eN,0,targetSz,0,mapW*$),eX=map(eN,0,targetSz,mapW-1,mapW*a),eY=constrain(floor(map(eE,eT,eq,mapTrim+eB,eX-mapTrim)),0,mapW-1),eI=constrain(floor(map(eN,r,targetSz,floor(.7*mapH),mapH-1-mapTrim)),0,mapH-1),eR=hMap[eY][eI];eE+=cos(eR)*warpSz,eN+=sin(eR)*warpSz,eN+=map(eR,0,2*TAU,0,1)*terrainHt*1.5;let ej=_normalize(hMapNormal(eY,eI)),eG=lMap[eY][eI],eQ=_magSq(hMapNormal2(eY,eI)),eU=max(1,floor(map(pow(abs(eN-eL+1e3),1),0,pow(abs(terrainHt)+abs(warpSz),1),1,_random(1,3))));for(let eJ=0;eJ<eU;eJ++){let eK=constrain(map(eQ,1e-4,8e-4,24,15),15,24),eO=new SketchyEllipse(eE,eN,5,eK*_random(.9,1.1),_random(1,2));eO.z=eL,eO.setWeight(3.5),eO.setMaxV(1),eO.setAcc(.02),eO.setDensity(2.5),eO.setWobble(.2),eO.setAngle(map(ej.x,1,-1,0,PI\/2)+PI\/4+(2*round(_random(1))-1)*PI+map(noise(eE*noiseScale,eN*noiseScale),0,1,-1,1)*PI\/8*0);for(let eZ=0;eZ<eO.points.length;eZ++){let e9=eO.points[eZ],te=(2*noise(e9.x*noiseScale*4+100,e9.y*noiseScale*4+100)-1)*2*TAU;e9.x+=2*cos(te),e9.y+=2*sin(te)}let tt=1*norm(eG,-1,1),t$=noise(eY*noiseScale*4+1e3,eI*noiseScale*4+1e3),ta=paletteColor(lerp(t$,tt,map(abs(tt-.5),-.5,.5,.5,1)));eO.setColor(color(red(ta),green(ta),blue(ta),_random(64,100))),shapes.push(eO)}}for(let t_=0;t_<5e3;t_++){let ts=targetSzW+20,tl=_random(-20,ts),tr=_random(targetSz),tn=-1e4+tr,to=constrain(floor(map(tl,-20,ts,mapTrim,mapW-1-mapTrim)),0,mapW-1),ti=constrain(floor(map(tr,0,targetSz,mapTrim,mapH-1-mapTrim)),0,mapH-1);noise(to*noiseScale*3,ti*noiseScale*3);let tp=new SketchyEllipse(tl,tr,6,21*_random(.9,1.2),_random(1,1.5));tp.z=tn,tp.setWeight(3),tp.setMaxV(1),tp.setAcc(.02),tp.setDensity(2.5),tp.setWobble(.2);for(let t0=0;t0<tp.points.length;t0++){let th=tp.points[t0],tc=(2*noise(th.x*noiseScale*4+100,th.y*noiseScale*4+100)-1)*2*TAU;th.x+=2*cos(tc),th.y+=2*sin(tc)}let tm=noise(to*noiseScale*2-132,ti*noiseScale*2-132)*TAU,td=noise(to*noiseScale*5+0*cos(tm),ti*noiseScale*5+0*sin(tm)),tu,tf,ty=to-skyCenterX,tg=ti-skyCenterY,t8=sqrt(sq(ty)+sq(tg));if(ti<mapH*_){tu=skyPaletteColor(constrain(pow(map(t8,0,mapW\/1.2,1,0),3)+.2*_random(-1,1),0,1));let t3=_rotate(_createV(1,0),atan2(tg,ty)-PI,0,0),tx=_rotate(_createV(1,0),td*PI,0,0),tS=map(t8,0,mapW\/2,0,1),t1=_createV(lerp(t3.x,tx.x,tS),lerp(t3.y,tx.y,tS));tf=atan2(t1.y,t1.x)}else{let t2=ti-(mapH*_+(mapH*_-skyCenterY)),t7=sqrt(sq(to-skyCenterX)+sq(t2));tu=oceanPaletteColor(constrain(lerp(pow(map(t7,0,mapW\/1.2,1,0),2),map(ti,.4*mapH,mapH,.8,0),.2)+.1*_random(-1,1),0,1)),tf=map(td,0,1,-1,1)*PI\/4+PI\/2+PI\/8}let tb=norm(tf,0,TAU);tb=round(100*tb)\/100,tb*=TAU,tf=lerp(tf,tb,.3),tp.setAngle(tf),tp.setColor(color(red(tu),green(tu),blue(tu),64)),shapes.push(tp)}shapes.sort(function(e,t){return-(e.z-t.z)})}let renderingIndex=0;function draw(){if(saving)++saveTime>80&&(hMap=null,shapes=null,window.location.reload(),noLoop());else{push(),translate(.5*width*(1-scl),.5*height*(1-scl)),scale(scl*sizeAdj,scl*sizeAdj),translate(0,-minY+(targetSz-(maxY-minY))\/2),translate(-minX+(targetSzW-(maxX-minX))\/2,0);for(let e=0;e<1e3;e++)if(\"done\"==shapes[shapes.length-1].update()&&(renderingIndex++,shapes.pop(),0==shapes.length)){saveMode?(doDownload=!0,saving=!0):noLoop();break}pop(),doDownload&&(saveCanvas(canv,tokenData.hash,\"png\"),doDownload=!1)}}function addFlowerClump(e,t,$,a,_){let s=floor(_random(2,3));for(let l=0;l<s;l++){let r=_rotate(_createV(_random(5),0),_random(TAU),0,0);addFlower(e+r.x,t+.5*r.y,$,a,_,l)}}function addFlower(e,t,$,a,_,s){let l=_createV(e,t),r=sNoise.noise3D(e*noiseScale,t*noiseScale,2*s),n=_rotate(_createV(0,-5),r*PI\/6,0,0),o=2*floor(_random(2,_));for(let i=0;i<o;i++){let p=new SketchyWeightedLine(l.x,l.y,l.x+1.5*n.x,l.y+1.5*n.y,.4,.1);p.setWeight(1),p.setMaxV(.1),p.setAcc(.01),p.setDensity(1),p.setWobble(.05),p.z=$;let h=treePaletteColor(map(i,0,o-1,0,.4));if(p.setColor(color(red(h),green(h),blue(h),64)),shapes.push(p),_random(1)<map(i,0,o-1,1,0)){let c=_rotate(n,PI\/2,0,0),m=.8*_random(4,6),d=new SketchyEllipse(l.x+.5*c.x,l.y+.5*c.y,m*map(i,0,o-1,2,1),.8*m,.5,!1);d.z=$+.001,d.setWeight(2.5),d.setMaxV(.2),d.setAcc(.02),d.setDensity(2),d.setWobble(.1),d.setAngle(_random(TAU)),h=treePaletteColor(_random(.5)),d.setColor(color(red(h),green(h),blue(h),64)),shapes.push(d)}l=_add(l,n);let u=2*s+6*i;n=_rotate(n,-(r=sNoise.noise3D(e*noiseScale,t*noiseScale,u))*PI\/4,0,0)}let f=floor(_random(5,7)),y=_random(TAU),g=a;for(let x=0;x<f;x++){if(.2>_random(1))continue;let S=1.2*_random(4,6),b=map(x,0,f,0,TAU)+_random(-1,1)*(TAU\/f)*.4+y,z=_rotate(_createV(.8*S,0),b,0,0),W=new SketchyEllipse(l.x+.5*n.x+z.x,l.y+.5*n.y+z.y,.5*S,S,.5,!1);W.z=$+.001,W.setWeight(2.5),W.setMaxV(.2),W.setAcc(.02),W.setDensity(2),W.setWobble(.1),W.setAngle(b+PI\/2);let P=petalPaletteColor(constrain(g+.2*_random(-1,1),0,1));W.setColor(color(red(P),green(P),blue(P),64)),shapes.push(W);let C=new SketchyEllipse(l.x+.5*n.x+z.x,l.y+.5*n.y+z.y,.505*S,1.01*S,.5,!1);C.z=$+1e-4,C.setWeight(2.5),C.setMaxV(.2),C.setAcc(.02),C.setDensity(2),C.setWobble(.1),C.setAngle(b+PI\/2),P=petalPaletteColor(0),C.setColor(color(red(P),green(P),blue(P),64)),shapes.push(C)}let M=.8*_random(4,6),w=new SketchyEllipse(l.x+.5*n.x,l.y+.5*n.y,.6*M,M,.5,!1);w.z=$+.002,w.setWeight(2.5),w.setMaxV(.2),w.setAcc(.02),w.setDensity(2),w.setWobble(.1),w.setAngle(_random(TAU));let A=treePaletteColor(0);w.setColor(color(red(A),green(A),blue(A),64)),shapes.push(w)}function addTree(e,t,$,a,_){let s=new SketchyWeightedLine(e+2*_random(-1,1),t+2*_random(-1,1),e+2*_random(-1,1),t-_+2*_random(-1,1),map(_,23,160,.5,4),.15);s.setWeight(1.5),s.setMaxV(.25),s.setAcc(.02),s.setDensity(1),s.setWobble(.3),s.setAngle(0),s.z=$;let l=treePaletteColor(_random(map(a,0,1,0,.1)));s.setColor(color(red(l),green(l),blue(l),64)),shapes.push(s);let r,n=round(_random(12,15));for(let o=0;o<n;o++){let i=_random(.51,1),p=lerp(t,t-_,i);r=_createV(0,_random(-30)*constrain(map(i,.51,1,1.1,.3),.3,.8)*map(o,0,n,1,.5)),r=_rotate(r,_random(.5,1)*(.5>_random(1)?-1:1)*map(i,.51,1,PI\/2,PI\/3),0,0),r.y*=_random(1,map(i,.51,1,1,1));let h=new SketchyWeightedLine(e,p,e+r.x,p+r.y,.25,.1);h.setWeight(1.5),h.setMaxV(.3),h.setAcc(.02),h.setDensity(1),h.setWobble(.2),h.z=$;let c=treePaletteColor(0);h.setColor(color(red(c),green(c),blue(c),_random(64,128))),shapes.push(h);let m,d=round(_random(5,10));for(let u=0;u<d;u++){let f=_random(2,3)*map(u,0,d,1.5,1);m=_createV(_random(1.8*f),0),m=_rotate(m,_random(TAU),0,0);let y=new SketchyEllipse(e+m.x+r.x,p+r.y+m.y,4,1*f,_random(1,1.1),!1);y.z=$+map(u,0,d-1,-1,1),y.setWeight(2.5),y.setMaxV(1),y.setAcc(.02),y.setDensity(2),y.setWobble(.2),y.setAngle(map(noise(y.x*noiseScale*3,y.y*noiseScale*3),0,1,-1,1)*PI\/6);let g=_normalize(_createV(-(.3*r.x)-m.x,.3*r.y+m.y+6)),x=pow(norm(_dot(g,lgt),-1,1),map(a,0,1,8,1))+map(a,0,1,0,.4);x=constrain(pow(x,2)+.2*_random(-1,1),0,1);let S=map(i,.51,1,.5,2.5),b=treePaletteColor(pow(x*S*1,1));y.setColor(color(red(b),green(b),blue(b),64)),shapes.push(y)}}}function addCactus(e,t,$,a,_,s,l,r,n){let o=l,i=round(_random(2,3));for(let p=0;p<i;p++){let h=o*constrain(map(p,0,max(1,i-1),.9,1)+.1*_random(-1),0,1),c=_rotate(_createV(map(p,0,max(1,i-1),0,.1)*h\/2,0),_random(TAU),0,0),m,d;if(-1==r){(m=new SketchyEllipse($+c.x,a+c.y,h,h,.25,!1)).z=_+1e-7*p,m.setWobble(.1),m.setWeight(.8);let u=_normalize(_createV($+c.x-e,a+c.y-t)),f=_normalize(_createV(c.x,c.y)),y=1*norm(_dot(u,lgt),-1,1),g=1*norm(_dot(f,lgt),-1,1);d=pow(lerp(y,g,.5),2);let x=cactusFruitPaletteColor(d);m.setColor(color(red(x),green(x),blue(x),64))}else{(m=new SketchyEllipse($+c.x,a+c.y,h,h*_random(.8,1)*.9,.25,!1)).z=_-1e-4*p,m.setWobble(.2),m.setWeight(.8);let S=_normalize(_createV($+c.x-e,a+c.y-t)),b=_normalize(_createV(c.x,c.y)),z=1*norm(_dot(S,lgt),-1,1),W=1*norm(_dot(b,lgt),-1,1);d=constrain(pow(lerp(z,W,.5),2)+.3*_random(-1,1),0,1);let P=cactusPaletteColor(d);m.setColor(color(red(P),green(P),blue(P),64))}m.setWeight(1.5),m.setMaxV(1),m.setAcc(.02),m.setDensity(2),m.setAngle(n),shapes.push(m);let C=floor(.04*sq(o));o<3&&(C=0);for(let M=0;M<C;M++){let w=_rotate(_createV(sqrt(_random(1)),0),_random(TAU),0,0),A=_rotate(_setMag(_createV(w.x,w.y),_random(3,5)),n+PI\/2+_random(-1,1)*PI\/8,0,0);w.x*=.55*h*.95,w.y*=.95*h,w=_rotate(w,n+PI\/2,0,0);let F=new SketchyWeightedLine($+w.x,a+w.y,$+w.x+A.x,a+w.y+A.y,1,.2);F.setWeight(1.5),F.setMaxV(.25),F.setAcc(.01),F.setDensity(1),F.setWobble(.05),F.z=_+.001;let V,k=cactusPaletteColor((V=d<.5?.8:.2)+.1*_random(-1,1));F.setColor(color(red(k),green(k),blue(k),64)),shapes.push(F)}}if(r>0){let H=_random([1,1,2]);for(let D=0;D<H;D++){let v=-PI\/2+_random(-1,1)*PI\/2.5,T=l*_random(.8,.9),q=$+cos(v)*(o+T)*.9,E=a+sin(v)*(o+T)*.9;addCactus(e,t,q,E,_,s,T,r-1,v)}}else if(0==r){let N=_random([0,1,2]);for(let L=0;L<N;L++){let B=-PI\/2+_random(-1,1)*PI\/3,X=max(.5*l,3),Y=$+cos(B)*(o+X)*.9,I=a+sin(B)*(o+X)*.9;addCactus(e,t,Y,I,_,s,X,r-1,B)}}}function addBush(e,t,$,a,_,s,l){let r,n=round(_random(4,5)*map(_,10,80,1,2)*max(1,.01*_));for(let o=0;o<n;o++){r=_createV(0,-_random(.1*_)),(r=_rotate(r,_random(-1,1)*PI\/2,0,0)).y=-abs(r.y);let i=_normalize(hMapNormal(s,o)),p,h=round(.3*_random(10,20));for(let c=0;c<h;c++){let m=_random(2,3)*map(c,0,h,1.5,1);p=_createV(_random(1.5*m),0),(p=_rotate(p,_random(TAU),0,0)).y=-abs(p.y);let d=new SketchyEllipse(e+p.x+r.x,t+p.y+r.y,2*m,4,_random(1,1.1),!1);d.z=$,d.setWeight(1.5),d.setMaxV(1),d.setAcc(.02),d.setDensity(2),d.setWobble(.2);let u=_normalize(_createV(-(.3*r.x)-p.x,.3*r.y+p.y+6)),f=pow(norm(_dot(u,lgt),-1,1),map(a,0,1,8,1));f+=.4*_random(-1,1),f=constrain(f,0,1);let y=bushPaletteColor(constrain(f,0,1));d.setColor(color(red(y),green(y),blue(y),64)),d.setAngle(map(i.x,1,-1,0,PI\/2)+PI\/4+(2*round(_random(1))-1)*PI+PI\/2+map(u.x,-1,1,1,-1)*_random(PI\/4,PI\/8)),shapes.push(d)}}}function _random(e,t){return void 0!=t?R.random_num(e,t):Array.isArray(e)?(0,e[floor(R.random_num(0,e.length))]):R.random_num(0,e)}",
  "tokens" : [
    {
      "hash" : "0xedb9bf72fb3cab74ec272fbfefd79a795ace0b674c0e4ec2dc55ace39ab25afe",
      "id" : "36000079"
    },
    {
      "hash" : "0x1ec633471d2920c4139d272fbb41bf8856b299197ca6a666aa7b4c859b74d6ac",
      "id" : "36000013"
    },
    {
      "hash" : "0xd4705efcf158abe8394487485f66149cb9ce98f44e57e8f8a92e5b795c7afee9",
      "id" : "36000073"
    },
    {
      "hash" : "0xbecca417be967a422b4884cdb842fd57d0b4a03289c8985aca18a9e80a0eab86",
      "id" : "36000086"
    },
    {
      "hash" : "0x2792ac1fc4cc3a3b696fb820fec84ba80d778116401af650f214205aae8514d2",
      "id" : "36000074"
    },
    {
      "hash" : "0xec7b72146aeee27be9b8ed9ad0bf42b1d1438681d9b22acb8b38d4868f2b8fb2",
      "id" : "36000087"
    },
    {
      "hash" : "0x598f1480f87ce22f1ae4071265aae44e70e61532ad05f9c1c26ea9d167aaa214",
      "id" : "36000037"
    },
    {
      "hash" : "0x1d1abc50eff96b913935675d18f78ddc1a8417a88018d02882a67bd0e5a236ff",
      "id" : "36000078"
    },
    {
      "hash" : "0x9cf9621f9049cc56882876f127ae9bdca579d92fdf92b02d202e07af59bfe211",
      "id" : "36000052"
    },
    {
      "hash" : "0xbc789a93780d4b1862628e23fe7a1019c4e5b4092ffe19fb33699c89684d65e1",
      "id" : "36000053"
    },
    {
      "hash" : "0x5aa9c771cc753dcc9d0a4093f61b7e68e3bce4c8b36b9f389c9096310165b2f0",
      "id" : "36000033"
    },
    {
      "hash" : "0xdf90d1e19f00173604e168c2ad90abc1a8159938b22b1117f993b3803112a027",
      "id" : "36000069"
    },
    {
      "hash" : "0x0387a889a09d0204c6c8b4d21476345d360d00800388c3660f028b7548f3eae5",
      "id" : "36000081"
    },
    {
      "hash" : "0x974340fac444143c7c5b0f05b5a0198f612777c7324082cab260bb94b1b8fcb3",
      "id" : "36000045"
    },
    {
      "hash" : "0xdaf57f97b7101649573670e515bb2540dde624c38ba8f5aeb37923f869941e02",
      "id" : "36000084"
    },
    {
      "hash" : "0x6b8b391385f66fb5d41d11e6d6831d2262723d9603865a597eb6d55fe3d84703",
      "id" : "36000059"
    },
    {
      "hash" : "0x7aea824d6e65ef4f6d5ebb0e60a8d28a9b15dc5400f2f32fd5d87b124bcf1f2b",
      "id" : "36000049"
    },
    {
      "hash" : "0xb2b4994618dd8fe1fd09ce55fa3d3b287555b6182179efda79e800fcc4345c78",
      "id" : "36000020"
    },
    {
      "hash" : "0xdcddec0f5be23bb1aecbca0b8711e260faccc7c5264d0ab965cbf5f1fffc2f15",
      "id" : "36000068"
    },
    {
      "hash" : "0x9ae6f9173dc232566414064ad149003bb2740d76d75708fce58d4f1cd90b4df2",
      "id" : "36000044"
    },
    {
      "hash" : "0x5a712771d75322c4ba71dce7b721f374a2fb993ab5db2b0c89f6d1465aaff705",
      "id" : "36000048"
    },
    {
      "hash" : "0x389c2bae0b09f8a5992adf6b1f20ed7df36f67b060e7e1df766cf261f72e21db",
      "id" : "36000098"
    },
    {
      "hash" : "0x82577760c932b47557a5bb0991a0c5e2a209449ab64f662c65f2cbfb4491a589",
      "id" : "36000099"
    },
    {
      "hash" : "0xf6b8bcb382e1573098459cfb24d34a061d5b30205c5c76b4d18c471c0243c540",
      "id" : "36000075"
    },
    {
      "hash" : "0x04a735cc50cd44b2be46584d5fec5aa4bd3a183a1d60c341618e4d51dbb94829",
      "id" : "36000071"
    },
    {
      "hash" : "0x23767a672d88f9427fb46a5eb82d4962833f617573202139c4868e9789d953a9",
      "id" : "36000056"
    },
    {
      "hash" : "0x4bf3fd73b29b8ba045ae870ae1f1d0fe9981ba7ff89574115eee289b8d50a7c0",
      "id" : "36000057"
    },
    {
      "hash" : "0xd784642124d6184df8db379242a3f34284003cb7ae70dd40c54cbeebeed6b40e",
      "id" : "36000012"
    },
    {
      "hash" : "0x7aacc6c2e690180f2a9645c13cbca09519b47204049bead8700d40e72a29e474",
      "id" : "36000005"
    },
    {
      "hash" : "0xf867e00cfeda0f3b04ee537ce299fd01b3661c006e30414046e35e817bf0e045",
      "id" : "36000054"
    },
    {
      "hash" : "0x04b98eb3a0bf5068efb3d5b2fadff8dbd5aff78aa0cc65a6a0dc5f3311a67d7e",
      "id" : "36000094"
    },
    {
      "hash" : "0xbcc05ff3662fd1ed793746cb49a49c1b882ddfd8ae9ee536146f2eb7d8ba94f9",
      "id" : "36000082"
    },
    {
      "hash" : "0xcd0424fee93725fd197262b2426e4076217822185632a1c4b54bbedb993e8590",
      "id" : "36000009"
    },
    {
      "hash" : "0x1cefeaeab41f7694bd2817ec83906707825d59a4d52035c6ece00042eba5fe5f",
      "id" : "36000027"
    },
    {
      "hash" : "0xf0998fa7a3277a09a0f2987df49de372834ca417b214b96711d99159ae05fef0",
      "id" : "36000088"
    },
    {
      "hash" : "0x60e7cc0bd5607de93ea07d9d1db96e564ef49f8b1dc61e6388491c978a10a0f1",
      "id" : "36000061"
    },
    {
      "hash" : "0xef206874ec09fe0dc9eb445db1f9207519d91c6d22703e6bb2f5efacf879e6de",
      "id" : "36000026"
    },
    {
      "hash" : "0x6e00c06f58163b086d170f1d0cb5df264f7349f1724be72e3433dbbd21a5a467",
      "id" : "36000006"
    },
    {
      "hash" : "0x08fbf8a3b80dbd0449d7cd02dbb2bcf08b1e89693fd4879090fa6d8d44befc01",
      "id" : "36000007"
    },
    {
      "hash" : "0xc4c62e9f63dda76de78075b89ca80b47a4e5011dfec26f1c34da58b94b3ef54d",
      "id" : "36000095"
    },
    {
      "hash" : "0xa2e3ecae6ca334780b3e729455a3c28ddf1c60ab0c3f7d67e69e353c48719c90",
      "id" : "36000047"
    },
    {
      "hash" : "0x57e38f25af86964886aedd9555ddd5d11ee4f75a619f1fef5ac8ae26eacf8818",
      "id" : "36000066"
    },
    {
      "hash" : "0x0361784c60112ce2aa118125b59da0f668f9189ce69ef2b992865c28f86fbf97",
      "id" : "36000070"
    },
    {
      "hash" : "0xb3bd27b10a4f9d1fd4deb5023601a2a417a9092ae53d469685607e5d11974afd",
      "id" : "36000024"
    },
    {
      "hash" : "0xb3072e28271febcb07b669584dc56a396a4e3685c92b62366fa7ca0b7984d098",
      "id" : "36000036"
    },
    {
      "hash" : "0x6272bdcde26b509c0b902b38c20484e85a2dd456269aa82b34d15b60ed9f313b",
      "id" : "36000025"
    },
    {
      "hash" : "0x1311a8eacfe7a47888707370eaf317098f29eb8430c8b0cbfe5d36891a8df6b8",
      "id" : "36000096"
    },
    {
      "hash" : "0xc640f3e69f963a1988551471aec31e817ae3e44cf7a0fcd3b42a12018d2dc0bf",
      "id" : "36000097"
    },
    {
      "hash" : "0x4762331fa0fcdfc713cf742e1e22c60395a5504d44302ca85ca386523a126540",
      "id" : "36000072"
    },
    {
      "hash" : "0xf022a93f3650e13f5f3277133c5aedde7e82340e63d1f9d70b3de140e8327d8c",
      "id" : "36000055"
    },
    {
      "hash" : "0xca587019555a8843aa6fd62932e827c22a22866f1a1a51a7c0151e92acca231d",
      "id" : "36000058"
    },
    {
      "hash" : "0x9aae167e1fe0f7f7f9e83bb825abcc15f4599a6cf9f6b4367b105855531bc684",
      "id" : "36000021"
    },
    {
      "hash" : "0x09160c87c7179702f14c4f43895669918ac225befaf42516f688648acca24c96",
      "id" : "36000038"
    },
    {
      "hash" : "0x43cc8d887ece35b47735956e5bba2ad50bb2b04553d802d6b8cdf3508df5ff86",
      "id" : "36000060"
    },
    {
      "hash" : "0x35da207d5e7447e4cb724799bfbbddcf91152ad8f2278878aab5aa1d001d7a5a",
      "id" : "36000077"
    },
    {
      "hash" : "0x96533690bf7a55a3ba8877d63cf04942dd8a2b932db7e453c867827e32180c02",
      "id" : "36000076"
    },
    {
      "hash" : "0x5c5b3ae47f66d7a4bf6ef429f741d5bf318f9a68ee00c6e01ce2d787416f3729",
      "id" : "36000067"
    },
    {
      "hash" : "0xf914b432b82e041af2a6039ff478277a8eb69dcccad926c35ea5e0e909c39dbe",
      "id" : "36000064"
    },
    {
      "hash" : "0x4a55997e801d5c566d44794a9bfd46d183768ecdba7b1b06df945ffd3fa2842e",
      "id" : "36000002"
    },
    {
      "hash" : "0xea2651ba720ae5922ed522f73c1c3cec2cdb5147818cfb3540414c3c7e1fa88d",
      "id" : "36000010"
    },
    {
      "hash" : "0xab32c58349b5ff13448e215d3b12062c576ea9f014ff52c667b404b4ba676624",
      "id" : "36000065"
    },
    {
      "hash" : "0xab6b720d25a6deff7a67bd05354c30904e4d8480e26d23403a9270c560ac87f4",
      "id" : "36000030"
    },
    {
      "hash" : "0xbe860696fe90a5a8b5e25d6562fcd079757cdbb9638ca048d9649be075df4241",
      "id" : "36000011"
    },
    {
      "hash" : "0x743cbe14460f4d588171542309ae7adbc17e01b0459544c5bacd2b8abdc79e15",
      "id" : "36000089"
    },
    {
      "hash" : "0x10239def0eb20a1be48d16677d8d8a4bc7f12c8aac3a61df89c949ebf6751c3c",
      "id" : "36000032"
    },
    {
      "hash" : "0x9b898a8e7e0f599e54224139ee861a8d4ed5268eaaf52dd133dfa386f87ad406",
      "id" : "36000001"
    },
    {
      "hash" : "0x853e8a5f00161020d32dc73def691b4dc507bf318a3b01600a0f56c1598c8d6e",
      "id" : "36000063"
    },
    {
      "hash" : "0xdb497f0c8b0aabef2310df4e8aac8982ab085f73e3738a41c94d4a1ab8add5dd",
      "id" : "36000090"
    },
    {
      "hash" : "0x5ebbc120e0ca34dc477f1e3a5fd79c2f01bcb78f8fdd4e0543e33d0ee6cb8bc1",
      "id" : "36000091"
    },
    {
      "hash" : "0xc67403e4d319d9d6f7435a940df120ba230d89b88cf900f4cf1217d3f6196084",
      "id" : "36000062"
    },
    {
      "hash" : "0xf3d53149c3e133c2b5d4171c2b29aced73b502edec5bfd3ab7bb4aaff48ec972",
      "id" : "36000041"
    },
    {
      "hash" : "0xa35d353c9f1f6c3a61977c3c9e6d35c5af675d756a0461785732ec6638f9c8d6",
      "id" : "36000040"
    },
    {
      "hash" : "0x20c8c0e881c712a155b8b4f6e738da4936a8d50d068a117ba9d0e85f6d393369",
      "id" : "36000018"
    },
    {
      "hash" : "0x95f1657a4d21f9fbee0887c50228421a2af48aa5a2b78f663f5b4cff9ce254de",
      "id" : "36000000"
    },
    {
      "hash" : "0x8c875db094679eabc652dbfe5805f0eba585e288c4b87becff4ac292f4203eb5",
      "id" : "36000031"
    },
    {
      "hash" : "0x0426ba8dfbebfbd7cd0150250f04272690c6a0eeaf98b4aad931639ac3adb453",
      "id" : "36000080"
    },
    {
      "hash" : "0xdb67cb94a713e2e6a4c12ea3cec84c16700bd04c78ef84fb8742cf3e8fa1e136",
      "id" : "36000016"
    },
    {
      "hash" : "0x6cbbb3ea91c1f083b79a5c68da2ffa4395a420f8932bff7c5b37e87d4f6d979c",
      "id" : "36000042"
    },
    {
      "hash" : "0x671248091486a36f9c21283f363453d7d16c4f6bfdbbcb232f6a25bcfe434881",
      "id" : "36000043"
    },
    {
      "hash" : "0xe0245efafa2fde697f7f5858946ef39aa71abeec53778d03d3976b0ee9b252d3",
      "id" : "36000034"
    },
    {
      "hash" : "0x0842404a2ee44112bbcb341ffa2d6bab125998220e5263e29d174cb16ca7cf5b",
      "id" : "36000029"
    },
    {
      "hash" : "0x397673cd9344bb481849294211cb993705106b4e987322ed98fe8d6048226ad5",
      "id" : "36000035"
    },
    {
      "hash" : "0xcf3ba0ee6ebfefa85ee1cbaaa83f0207324ab5dad653e577818bdc55d74a9eb3",
      "id" : "36000028"
    },
    {
      "hash" : "0xa1d6edd8b6b0f2a13a25d82fbcaecc8ed69db3d5b03e64f563a2b93d78c66070",
      "id" : "36000085"
    },
    {
      "hash" : "0x2aa99e8c61e38d0ba08947519958d9df88dd3d09f393fdedf3a132cad3f36429",
      "id" : "36000008"
    },
    {
      "hash" : "0xc71b281795bc5c794a725890b03ac170f7e53434627e0bebf90d5bf02ffcb8c9",
      "id" : "36000083"
    },
    {
      "hash" : "0x53e6629f85d8c4d36ac71ccd81d5bcbe456b7b3f0f8830a39c7f8495635913e3",
      "id" : "36000019"
    },
    {
      "hash" : "0x1e2bfc1bbd1f9d50f47dec0f17f98e5091558e6297a96d56468378340ad400b4",
      "id" : "36000093"
    },
    {
      "hash" : "0x68491c2ed1662f07c9d95cdf9d747ff89aa8be1c3afbecccee19d8918ebcd2ca",
      "id" : "36000039"
    },
    {
      "hash" : "0xca8bd191ab5ef82d6bd02fd3433b8eb5851743bd9bf830fdca29618e9564d9b1",
      "id" : "36000051"
    },
    {
      "hash" : "0x75c3f30c53dc550456e96ef4225cd2fe6414452b875056da934b405ae87c125c",
      "id" : "36000003"
    },
    {
      "hash" : "0x272fea2da3b9953355097758ed2f8964d8c01da04c0be41fbe9d14e88ebcdc5c",
      "id" : "36000046"
    },
    {
      "hash" : "0xeee2494494978297af98f0187f0587127f44eb1117d569440ee0d005b3b7999c",
      "id" : "36000092"
    },
    {
      "hash" : "0x10a3b95f3111386523b76d87732f4aace443f8df5dbb8c6004e0811fa642a7c7",
      "id" : "36000050"
    },
    {
      "hash" : "0xabd32cd7a9825e904836aedd0e23a7b12a6bd70f6040abb9b1cee3e48dc85ee6",
      "id" : "36000004"
    },
    {
      "hash" : "0x9eed72532467dafa8eafd537e9070d1f89506fa04c6c5156c4447ae39a626f98",
      "id" : "36000023"
    },
    {
      "hash" : "0xbaef394c7a6e258efa6f8a5145243684ba702b8077e0df2455aae27282cfb159",
      "id" : "36000017"
    },
    {
      "hash" : "0x5d0ef6c4c4d231272737cd7e6f64340ae18753613cdf659e731bbe9831afd253",
      "id" : "36000015"
    },
    {
      "hash" : "0x5d156c7ba19d3fc362ef728c88c32ce5001cabb98bc7e93064e4afa291e6ceb2",
      "id" : "36000014"
    },
    {
      "hash" : "0xcb8d38b6aa347bfdde737e4705183a0558039b50ff40447ceef9f8a5daa4db59",
      "id" : "36000022"
    }
  ]
}