default_platform(:mac)

platform :mac do

  lane :bump do |options|
    new_version = options[:version]
    sh("sed -i '' -e 's/MARKETING_VERSION \\= [^\\;]*\\;/MARKETING_VERSION = #{new_version};/' ../nft-folder.xcodeproj/project.pbxproj")
    increment_version_number(version_number: new_version)
    increment_build_number()

    commit_version_bump(
      message: "bump version to #{new_version} (#{get_build_number})",
      xcodeproj: "nft-folder.xcodeproj",
      force: true
    )
  
    push_to_git_remote
  end

  lane :update_and_login do
    local_fastlane_password = ENV['FASTLANE_PASSWORD']
    ENV['FASTLANE_PASSWORD'] = nil

    require 'spaceship'
    Spaceship::Tunes.login('ivan@ivan.lol')

    update_fastlane
    ENV['FASTLANE_PASSWORD'] = local_fastlane_password
  end

  lane :deliver_metadata do
    update_and_login
    deliver(
      metadata_path: "./fastlane/metadata",
      screenshots_path: "./fastlane/screenshots",
      overwrite_screenshots: true, 
      platform: "osx",
      run_precheck_before_submit: false,
      force: true,
    )
  end

  lane :release do
    update_and_login
    gym(scheme: "nft-folder", output_directory: "fastlane/build", clean: true)
    deliver(
      metadata_path: "./fastlane/metadata",
      screenshots_path: "./fastlane/screenshots",
      overwrite_screenshots: true, 
      platform: "osx",
      run_precheck_before_submit: false,
      force: true,
      submit_for_review: true,
      automatic_release: true,
      submission_information: { add_id_info_uses_idfa: false },
    )
    clean
  end

  lane :clean do
    sh "rm -rf #{File.expand_path('build')}"
  end

end
